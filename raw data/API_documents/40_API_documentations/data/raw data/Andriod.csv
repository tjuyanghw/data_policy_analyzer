class_name,class_description,method,method_description,data_type
com.android.installreferrer.api.InstallReferrerClient,Main interface for communication between the library and user application code.,endConnection(),Close the connection and release all held resources such as service connections.,abstract                                        void
com.android.installreferrer.api.InstallReferrerClient,Main interface for communication between the library and user application code.,getInstallReferrer(),Get installation referrer details.,abstract                                        ReferrerDetails
com.android.installreferrer.api.InstallReferrerClient,Main interface for communication between the library and user application code.,isReady(),"Checks if the client is currently connected to the service, so that requests to other methods will succeed.",abstract                                        boolean
com.android.installreferrer.api.InstallReferrerClient,Main interface for communication between the library and user application code.,newBuilder(Context context),Constructs a new InstallReferrerClient.Builder instance.,static                        InstallReferrerClient.Builder
com.android.installreferrer.api.InstallReferrerClient,Main interface for communication between the library and user application code.,startConnection(InstallReferrerStateListener listener),Starts up InstallReferrerClient setup process asynchronously.,abstract                                        void
com.android.installreferrer.api.InstallReferrerClient.Builder,Builder to configure and create a InstallReferrer instance.,build(),Creates a Install Referrer client instance.,InstallReferrerClient
com.android.installreferrer.api.InstallReferrerClient.InstallReferrerResponse,Possible return codes.,N/A,N/A,N/A
com.android.installreferrer.commons.InstallReferrerCommons,Helper methods for install referrer client,"logVerbose(String tag, String msg)",Logs a verbose message,static                        void
com.android.installreferrer.commons.InstallReferrerCommons,Helper methods for install referrer client,"logWarn(String tag, String msg)",Logs a warning message,static                        void
com.android.installreferrer.api.InstallReferrerStateListener,Callback for setup process.,onInstallReferrerServiceDisconnected(),Called to notify that connection to install referrer service was lost.,abstract                                        void
com.android.installreferrer.api.InstallReferrerStateListener,Callback for setup process.,onInstallReferrerSetupFinished(int responseCode),Called to notify that setup is complete.,abstract                                        void
com.android.installreferrer.api.ReferrerDetails,Represents an install referrer details.,getGooglePlayInstantParam(),Boolean indicating if the user has interacted with the app's instant experience in the past 7 days.,boolean
com.android.installreferrer.api.ReferrerDetails,Represents an install referrer details.,getInstallBeginTimestampSeconds(),The timestamp in seconds when installation begins.,long
com.android.installreferrer.api.ReferrerDetails,Represents an install referrer details.,getInstallReferrer(),The referrer URL of the installed package.,String
com.android.installreferrer.api.ReferrerDetails,Represents an install referrer details.,getReferrerClickTimestampSeconds(),The timestamp in seconds when referrer click happens.,long
com.android.billingclient.api.AccountIdentifiers,Account identifiers that were specified when the purhase was made.,getObfuscatedAccountId(),The obfuscated account id specified in setObfuscatedAccountId(String).,String
com.android.billingclient.api.AccountIdentifiers,Account identifiers that were specified when the purhase was made.,getObfuscatedProfileId(),The obfuscated account id specified in setObfuscatedProfileId(String).,String
com.android.billingclient.api.AcknowledgePurchaseParams,Parameters to acknowledge a purchase.,getDeveloperPayload(),This method is deprecated.    Developer payload has been deprecated. See     https://developer.android.com/google/play/billing/billing_overview for recommended     alternatives.,String
com.android.billingclient.api.AcknowledgePurchaseParams,Parameters to acknowledge a purchase.,getPurchaseToken(),Returns token that identifies the purchase to be acknowledged,String
com.android.billingclient.api.AcknowledgePurchaseParams,Parameters to acknowledge a purchase.,newBuilder(),N/A,static                        AcknowledgePurchaseParams.Builder
com.android.billingclient.api.AcknowledgePurchaseParams.Builder,Helps construct AcknowledgePurchaseParams that are used to acknowledge a purchase.,build(),Returns AcknowledgePurchaseParams reference to initiate acknowledge action.,AcknowledgePurchaseParams
com.android.billingclient.api.AcknowledgePurchaseParams.Builder,Helps construct AcknowledgePurchaseParams that are used to acknowledge a purchase.,setDeveloperPayload(String developerPayload),This method is deprecated.    Developer payload has been deprecated. See     https://developer.android.com/google/play/billing/billing_overview for recommended     alternatives.,AcknowledgePurchaseParams.Builder
com.android.billingclient.api.AcknowledgePurchaseParams.Builder,Helps construct AcknowledgePurchaseParams that are used to acknowledge a purchase.,setPurchaseToken(String purchaseToken),Specify the token that identifies the purchase to be acknowledged.,AcknowledgePurchaseParams.Builder
com.android.billingclient.api.AcknowledgePurchaseResponseListener,Listener to a result of acknowledge purchase request,onAcknowledgePurchaseResponse(BillingResult billingResult),Called to notify that an acknowledge purchase operation has finished,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"acknowledgePurchase(AcknowledgePurchaseParams params, AcknowledgePurchaseResponseListener listener)",Acknowledges in-app purchases.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"consumeAsync(ConsumeParams consumeParams, ConsumeResponseListener listener)",Consumes a given in-app product.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,endConnection(),Close the connection and release all held resources such as service connections.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,isFeatureSupported(String feature),Check if specified feature or capability is supported by the Play Store.,abstract                                        BillingResult
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,isReady(),"Checks if the client is currently connected to the service, so that requests to other methods will succeed.",abstract                                        boolean
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"launchBillingFlow(Activity activity, BillingFlowParams params)",Initiate the billing flow for an in-app purchase or subscription.,abstract                                        BillingResult
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"launchPriceChangeConfirmationFlow(Activity activity, PriceChangeFlowParams params, PriceChangeConfirmationListener listener)",Initiate a flow to confirm the change of price for an item subscribed by the user.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"loadRewardedSku(RewardLoadParams params, RewardResponseListener listener)",This method is deprecated.    Rewarded Skus are no longer supported.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,newBuilder(Context context),Constructs a new BillingClient.Builder instance.,static                        BillingClient.Builder
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"queryPurchaseHistoryAsync(String skuType, PurchaseHistoryResponseListener listener)","Returns the most recent purchase made by the user for each SKU, even if that purchase is expired, canceled, or consumed.",abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,queryPurchases(String skuType),Get purchases details for all the items bought within your app.,abstract                                        Purchase.PurchasesResult
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,"querySkuDetailsAsync(SkuDetailsParams params, SkuDetailsResponseListener listener)",Perform a network query to get SKU details and return the result asynchronously.,abstract                                        void
com.android.billingclient.api.BillingClient,Main interface for communication between the library and user application code.,startConnection(BillingClientStateListener listener),Starts up BillingClient setup process asynchronously.,abstract                                        void
com.android.billingclient.api.BillingClient.BillingResponseCode,Possible response codes.,N/A,N/A,N/A
com.android.billingclient.api.BillingClient.Builder,Builder to configure and create a BillingClient instance.,build(),Creates a Billing client instance.,BillingClient
com.android.billingclient.api.BillingClient.Builder,Builder to configure and create a BillingClient instance.,enablePendingPurchases(),Enables pending purchase support.,BillingClient.Builder
com.android.billingclient.api.BillingClient.Builder,Builder to configure and create a BillingClient instance.,setChildDirected(int childDirected),Developers are able to specify whether this app is child directed or not to ensure compliance with US COPPA & EEA age of consent laws.,BillingClient.Builder
com.android.billingclient.api.BillingClient.Builder,Builder to configure and create a BillingClient instance.,setListener(PurchasesUpdatedListener listener),Specify a valid listener for onPurchasesUpdated event.,BillingClient.Builder
com.android.billingclient.api.BillingClient.Builder,Builder to configure and create a BillingClient instance.,setUnderAgeOfConsent(int underAgeOfConsent),Developers are able to specify whether this app is under age of consent or not to ensure compliance with US COPPA & EEA age of consent laws.,BillingClient.Builder
com.android.billingclient.api.BillingClient.ChildDirected,Developers are able to specify whether you would like your app to be treated as child-directed for purposes of the Children’s Online Privacy Protection Act (COPPA) -  http://business.ftc.gov/privacy-and-security/childrens-privacy.,N/A,N/A,N/A
com.android.billingclient.api.BillingClient.FeatureType,Features/capabilities supported by isFeatureSupported(String).,N/A,N/A,N/A
com.android.billingclient.api.BillingClient.SkuType,Supported SKU types.,N/A,N/A,N/A
com.android.billingclient.api.BillingClient.UnderAgeOfConsent,Developers are able to specify whether to mark your ad requests to receive treatment for users in the European Economic Area (EEA) under the age of consent.,N/A,N/A,N/A
com.android.billingclient.api.BillingClientStateListener,Callback for setup process.,"onBillingServiceDisconnected()
      
      
        Note: This does not remove billing service connection itself - this binding to the service
 will remain active, and you will receive a call to onBillingSetupFinished(BillingResult) when billing
 service is next running and setup is complete.",Called to notify that connection to billing service was lost,abstract                                        void
com.android.billingclient.api.BillingClientStateListener,Callback for setup process.,onBillingSetupFinished(BillingResult billingResult),Called to notify that setup is complete.,abstract                                        void
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getAccountId(),Returns an optional obfuscated string that is uniquely associated with the user's account.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getDeveloperId(),This method is deprecated.    Developer Id is not longer supported. See Account Id and Profile Id.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getOldSku(),Returns the SKU that the user is upgrading or downgrading from.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getOldSkuPurchaseToken(),Returns the purchase token of the sku the user is upgrading or downgrading from.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getOldSkus(),This method is deprecated.    Use getOldSku() instead.,ArrayList<String>
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getReplaceSkusProrationMode(),Returns an optional integer that indicates the Replace SKU ProrationMode.,int
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getSku(),Returns the SKU that is being purchased or upgraded/downgraded to as published in the Google Developer console.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getSkuDetails(),Returns the full sku details for this purchase.,SkuDetails
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getSkuType(),Returns the billing type BillingClient.SkuType of the item being purchased.,String
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,getVrPurchaseFlow(),Returns an optional flag indicating whether you wish to launch a VR purchase flow.,boolean
com.android.billingclient.api.BillingFlowParams,Parameters to initiate a purchase flow.,newBuilder(),Constructs a new BillingFlowParams.Builder instance.,static                        BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,addOldSku(String oldSku),"This method is deprecated.    Use setOldSku(String, String) instead.",BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,build(),Returns BillingFlowParams reference to initiate a purchase flow.,BillingFlowParams
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setAccountId(String accountId),This method is deprecated.    This method has been renamed to setObfuscatedAccountId(String).,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setDeveloperId(String developerId),This method is deprecated.    Developer Id is not longer supported. See Account Id and Profile Id. See setObfuscatedAccountId(String) and setObfuscatedProfileId(String).,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setObfuscatedAccountId(String obfuscatedAccountid),Specifies an optional obfuscated string that is uniquely associated with the user's account in your app.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setObfuscatedProfileId(String obfuscatedProfileId),Specifies an optional obfuscated string that is uniquely associated with the user's profile in your app.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setOldSku(String oldSku),"This method is deprecated.    Use setOldSku(String, String) instead.",BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,"setOldSku(String oldSku, String purchaseToken)",Specifies the SKU and purchase token that the user is upgrading or downgrading from.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setOldSkus(ArrayList<String> oldSkus),"This method is deprecated.    Use setOldSku(String, String) instead.",BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setReplaceSkusProrationMode(int replaceSkusProrationMode),Specifies the mode of proration during subscription upgrade/downgrade.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setSkuDetails(SkuDetails skuDetails),Specifies the SkuDetails SkuDetails of the item being purchase.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.Builder,Helps to construct BillingFlowParams that are used to initiate a purchase flow.,setVrPurchaseFlow(boolean isVrPurchaseFlow),Specifies an optional flag indicating whether you wish to launch a VR purchase flow.,BillingFlowParams.Builder
com.android.billingclient.api.BillingFlowParams.ProrationMode,Replace SKU ProrationMode.,N/A,N/A,N/A
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForAcknowledgePurchase(AcknowledgePurchaseParams acknowledgePurchaseParams, String libraryVersion)","Constructs bundle to provide extra params to acknowledgePurchase(AcknowledgePurchaseParams, AcknowledgePurchaseResponseListener)",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForConsume(ConsumeParams consumeParams, boolean isIabV9Supported, String libraryVersion)","Constructs bundle to provide extra params to consumeAsync(ConsumeParams, ConsumeResponseListener)",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForGetSkuDetails(boolean isIabV9Supported, boolean enablePendingPurchases, String libraryVersion)","Constructs bundle to provide extra params to querySkuDetailsAsync(SkuDetailsParams, SkuDetailsResponseListener)",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForLaunchBillingFlow(BillingFlowParams params, boolean isIabV9Supported, boolean enablePendingPurchases, String libraryVersion)","Constructs bundle to provide extra params to launchBillingFlow(Activity, BillingFlowParams) }",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForLoadRewardedSku(String rewardToken, int childDirected, int underAgeOfConsent, String libraryVersion)","Constructs bundle to provide extra params to loadRewardedSku(RewardLoadParams, RewardResponseListener).",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"constructExtraParamsForQueryPurchases(boolean isIabV9Supported, boolean enablePendingPurchases, String libraryVersion)","Constructs bundle to provide extra params to queryPurchaseHistoryAsync(String, PurchaseHistoryResponseListener) and queryPurchases(String)",static                        Bundle
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,extractPurchases(Bundle bundle),Gets a purchase data and signature (or lists of them) from the Bundle and returns the constructed list of Purchase,static                        List<Purchase>
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"getBillingResultFromIntent(Intent intent, String tag)",Retrieves billingResult from the intent,static                        BillingResult
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"getDebugMessageFromBundle(Bundle bundle, String tag)",Retrieves a response code from the bundle,static                        String
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"getResponseCodeFromBundle(Bundle bundle, String tag)",Retrieves a response code from the bundle,static                        int
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"getResponseCodeFromIntent(Intent intent, String tag)",Retrieves a response code from the intent,static                        int
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"logVerbose(String tag, String msg)",Logs a verbose message,static                        void
com.android.billingclient.util.BillingHelper,Helper methods for billing client.,"logWarn(String tag, String msg)",Logs a warning message,static                        void
com.android.billingclient.api.BillingResult,Params containing the response code and the debug message from In-app Billing API response.,getDebugMessage(),Debug message returned in In-app Billing API calls.,String
com.android.billingclient.api.BillingResult,Params containing the response code and the debug message from In-app Billing API response.,getResponseCode(),Response code returned in In-app Billing API calls.,int
com.android.billingclient.api.BillingResult,Params containing the response code and the debug message from In-app Billing API response.,newBuilder(),Constructs a new BillingResult.Builder instance.,static                        BillingResult.Builder
com.android.billingclient.api.BillingResult.Builder,Helps to construct BillingResult that are used to return response from IAB api.,build(),Returns BillingResult reference.,BillingResult
com.android.billingclient.api.BillingResult.Builder,Helps to construct BillingResult that are used to return response from IAB api.,setDebugMessage(String debugMessage),N/A,BillingResult.Builder
com.android.billingclient.api.BillingResult.Builder,Helps to construct BillingResult that are used to return response from IAB api.,setResponseCode(int responseCode),N/A,BillingResult.Builder
com.android.billingclient.api.ConsumeParams,Parameters to consume a purchase.,getDeveloperPayload(),This method is deprecated.    Developer payload has been deprecated. See     https://developer.android.com/google/play/billing/billing_overview for recommended     alternatives.,String
com.android.billingclient.api.ConsumeParams,Parameters to consume a purchase.,getPurchaseToken(),Returns token that identifies the purchase to be consumed,String
com.android.billingclient.api.ConsumeParams,Parameters to consume a purchase.,newBuilder(),N/A,static                        ConsumeParams.Builder
com.android.billingclient.api.ConsumeParams.Builder,Helps construct ConsumeParams that are used to consume a purchase.,build(),Returns ConsumeParams reference to initiate consume action.,ConsumeParams
com.android.billingclient.api.ConsumeParams.Builder,Helps construct ConsumeParams that are used to consume a purchase.,setDeveloperPayload(String developerPayload),This method is deprecated.    Developer payload has been deprecated. See     https://developer.android.com/google/play/billing/billing_overview for recommended     alternatives.,ConsumeParams.Builder
com.android.billingclient.api.ConsumeParams.Builder,Helps construct ConsumeParams that are used to consume a purchase.,setPurchaseToken(String purchaseToken),Specify the token that identifies the purchase to be consumed.,ConsumeParams.Builder
com.android.billingclient.api.ConsumeResponseListener,Callback that notifies when a consumption operation finishes.,"onConsumeResponse(BillingResult billingResult, String purchaseToken)",Called to notify that a consume operation has finished.,abstract                                        void
com.android.billingclient.api.PriceChangeConfirmationListener,Listener to a result of the price change confirmation flow.,onPriceChangeConfirmationResult(BillingResult billingResult),Called to notify when a price change confirmation flow has finished.,abstract                                        void
com.android.billingclient.api.PriceChangeFlowParams,Parameters to launch a price change confirmation flow.,getSkuDetails(),N/A,SkuDetails
com.android.billingclient.api.PriceChangeFlowParams,Parameters to launch a price change confirmation flow.,newBuilder(),Constructs a new PriceChangeFlowParams.Builder instance.,static                        PriceChangeFlowParams.Builder
com.android.billingclient.api.PriceChangeFlowParams.Builder,Helps construct PriceChangeFlowParams that are used to launch a price change confirmation flow,build(),Returns the PriceChangeFlowParams to initiate price change confirmation flow.,PriceChangeFlowParams
com.android.billingclient.api.PriceChangeFlowParams.Builder,Helps construct PriceChangeFlowParams that are used to launch a price change confirmation flow,setSkuDetails(SkuDetails skuDetails),Specify the SKU that has the pending price change.,PriceChangeFlowParams.Builder
com.android.billingclient.api.ProxyBillingActivity,An invisible activity that launches another billing-related activity and delivers parsed result to the BillingClient via ResultReceiver.,N/A,N/A,N/A
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,equals(Object o),N/A,boolean
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getAccountIdentifiers(),Returns account identifiers that were provided when the purchase was made.,AccountIdentifiers
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getDeveloperPayload(),Returns the payload specified when the purchase was acknowledged or consumed.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getOrderId(),Returns an unique order identifier for the transaction.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getOriginalJson(),Returns a String in JSON format that contains details about the purchase order.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getPackageName(),Returns the application package from which the purchase originated.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getPurchaseState(),Returns the state of purchase.,int
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getPurchaseTime(),"Returns the time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).",long
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getPurchaseToken(),Returns a token that uniquely identifies a purchase for a given item and user pair.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getSignature(),Returns String containing the signature of the purchase data that was signed with the private key of the developer.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,getSku(),Returns the product Id.,String
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,hashCode(),N/A,int
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,isAcknowledged(),Indicates whether the purchase has been acknowledged.,boolean
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,isAutoRenewing(),Indicates whether the subscription renews automatically.,boolean
com.android.billingclient.api.Purchase,Represents an in-app billing purchase.,toString(),N/A,String
com.android.billingclient.api.Purchase.PurchasesResult,Result list and code for queryPurchases method,getBillingResult(),Returns the BillingResult of the operation.,BillingResult
com.android.billingclient.api.Purchase.PurchasesResult,Result list and code for queryPurchases method,getPurchasesList(),Returns the list of Purchase.,List<Purchase>
com.android.billingclient.api.Purchase.PurchasesResult,Result list and code for queryPurchases method,getResponseCode(),Returns the response code of In-app Billing API calls.,int
com.android.billingclient.api.Purchase.PurchaseState,Possible purchase states.,N/A,N/A,N/A
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,equals(Object o),N/A,boolean
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getDeveloperPayload(),Returns the payload specified when the purchase was acknowledged or consumed.,String
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getOriginalJson(),Returns a String in JSON format that contains details about the purchase order.,String
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getPurchaseTime(),"Returns the time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).",long
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getPurchaseToken(),Returns a token that uniquely identifies a purchase for a given item and user pair.,String
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getSignature(),Returns String containing the signature of the purchase data that was signed with the private key of the developer.,String
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,getSku(),Returns the product Id.,String
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,hashCode(),N/A,int
com.android.billingclient.api.PurchaseHistoryRecord,Represents an in-app billing purchase history record.,toString(),N/A,String
com.android.billingclient.api.PurchaseHistoryResponseListener,Listener to a result of purchases history query.,"onPurchaseHistoryResponse(BillingResult billingResult, List<PurchaseHistoryRecord> purchaseHistoryRecordList)",Called to notify that purchase history fetch operation has finished.,abstract                                        void
com.android.billingclient.api.PurchasesUpdatedListener,"Listener interface for purchase updates which happen when, for example, the user buys something within the app or by initiating a purchase from Google Play Store.","onPurchasesUpdated(BillingResult billingResult, List<Purchase> purchases)",Implement this method to get notifications for purchases updates.,abstract                                        void
com.android.billingclient.api.RewardLoadParams,Parameters to load a rewarded SKU.,getSkuDetails(),N/A,SkuDetails
com.android.billingclient.api.RewardLoadParams,Parameters to load a rewarded SKU.,newBuilder(),Constructs a new RewardLoadParams.Builder instance.,static                        RewardLoadParams.Builder
com.android.billingclient.api.RewardLoadParams.Builder,Helps construct RewardLoadParams that are used to load rewarded SKUs,build(),Returns RewardLoadParams reference to initiate load.,RewardLoadParams
com.android.billingclient.api.RewardLoadParams.Builder,Helps construct RewardLoadParams that are used to load rewarded SKUs,setSkuDetails(SkuDetails skuDetails),Specify the SKU to load,RewardLoadParams.Builder
com.android.billingclient.api.RewardResponseListener,Listener to a result of load reward request,onRewardResponse(BillingResult billingResult),Called to notify that a load reward operation has finished.,abstract                                        void
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,equals(Object o),N/A,boolean
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getDescription(),Returns the description of the product.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getFreeTrialPeriod(),"Trial period configured in Google Play Console, specified in ISO 8601 format.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getIconUrl(),Returns the icon of the product if present.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getIntroductoryPrice(),"Formatted introductory price of a subscription, including its currency sign, such as €3.99.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getIntroductoryPriceAmountMicros(),Introductory price in micro-units.,long
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getIntroductoryPriceCycles(),"The number of subscription billing periods for which the user will be given the introductory price, such as 3.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getIntroductoryPricePeriod(),"The billing period of the introductory price, specified in ISO 8601 format.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getOriginalJson(),Returns a String in JSON format that contains Sku details.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getOriginalPrice(),"Returns formatted original price of the item, including its currency sign.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getOriginalPriceAmountMicros(),"Returns the original price in micro-units, where 1,000,000 micro-units equal one unit of the currency.",long
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getPrice(),"Returns formatted price of the item, including its currency sign.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getPriceAmountMicros(),"Returns price in micro-units, where 1,000,000 micro-units equal one unit of the currency.",long
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getPriceCurrencyCode(),Returns ISO 4217 currency code for price and original price.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getSku(),Returns the product Id.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getSubscriptionPeriod(),"Subscription period, specified in ISO 8601 format.",String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getTitle(),Returns the title of the product.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,getType(),Returns SKU type.,String
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,hashCode(),N/A,int
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,isRewarded(),Returns true if sku is rewarded instead of paid.,boolean
com.android.billingclient.api.SkuDetails,Represents an in-app product's or subscription's listing details.,toString(),N/A,String
com.android.billingclient.api.SkuDetails.SkuDetailsResult,Result list and code for querySkuDetailsAsync method.,getDebugMessage(),N/A,String
com.android.billingclient.api.SkuDetails.SkuDetailsResult,Result list and code for querySkuDetailsAsync method.,getResponseCode(),N/A,int
com.android.billingclient.api.SkuDetails.SkuDetailsResult,Result list and code for querySkuDetailsAsync method.,getSkuDetailsList(),N/A,List<SkuDetails>
com.android.billingclient.api.SkuDetailsParams,Parameters to initiate a query for SKU details.,getSkuType(),N/A,String
com.android.billingclient.api.SkuDetailsParams,Parameters to initiate a query for SKU details.,getSkusList(),N/A,List<String>
com.android.billingclient.api.SkuDetailsParams,Parameters to initiate a query for SKU details.,newBuilder(),Constructs a new SkuDetailsParams.Builder instance.,static                        SkuDetailsParams.Builder
com.android.billingclient.api.SkuDetailsParams.Builder,Helps to construct SkuDetailsParams that are used to query for SKU details.,build(),Returns SkuDetailsParams reference to initiate a purchase flow.,SkuDetailsParams
com.android.billingclient.api.SkuDetailsParams.Builder,Helps to construct SkuDetailsParams that are used to query for SKU details.,setSkusList(List<String> skusList),Specify the SKUs that are queried for as published in the Google Developer console.,SkuDetailsParams.Builder
com.android.billingclient.api.SkuDetailsParams.Builder,Helps to construct SkuDetailsParams that are used to query for SKU details.,setType(String type),Specify the type BillingClient.SkuType of SKUs we are querying for.,SkuDetailsParams.Builder
com.android.billingclient.api.SkuDetailsResponseListener,Listener to a result of SKU details query,"onSkuDetailsResponse(BillingResult billingResult, List<SkuDetails> skuDetailsList)",Called to notify that a fetch SKU details operation has finished.,abstract                                        void
com.google.android.play.core.install.model.ActivityResult,Custom Activity results for the in-app update flow.,N/A,N/A,N/A
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,availableVersionCode(),"If an update is available or in progress, this method returns the version code of the update.",abstract                                        int
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,bytesDownloaded(),Returns the number of bytes downloaded so far.,abstract                                        long
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,clientVersionStalenessDays(),"If an update is available or in progress, this method returns the number of days since the Google Play Store app on the user's device has learnt about an available update.",abstract                                        Integer
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,installStatus(),Returns the progress status of the update.,abstract                                        int
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,isUpdateTypeAllowed(AppUpdateOptions appUpdateOptions),Returns whether an update with the provided options is allowed.,boolean
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,isUpdateTypeAllowed(int updateType),"Returns whether the desired update type, such as flexible or immediate, is allowed.",boolean
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,packageName(),Returns the package name for the app to be updated.,abstract                                        String
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,totalBytesToDownload(),Returns the total number of bytes to be downloaded for this update.,abstract                                        long
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,updateAvailability(),Returns whether an update is available for the app.,abstract                                        int
com.google.android.play.core.appupdate.AppUpdateInfo,Contains information about the avilability and progress of an app update.,updatePriority(),"Returns the in-app update priority for this update, as defined by the developer in the Google Play Developer API.",abstract                                        int
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,completeUpdate(),"For a flexible update flow, triggers the completion of the update.",abstract                                        Task<Void>
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,getAppUpdateInfo(),"Requests the update availability for the current app, an intent to start an update flow, and, if applicable, the state of updates currently in progress.",abstract                                        Task<AppUpdateInfo>
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,registerListener(InstallStateUpdatedListener listener),Registers a listener for this app that receives state changes for self-update operations.,abstract                                        void
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,"startUpdateFlow(AppUpdateInfo appUpdateInfo, Activity activity, AppUpdateOptions options)",Starts the desired update flow asynchronously.,abstract                                        Task<Integer>
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, int appUpdateType, IntentSenderForResultStarter starter, int requestCode)",Starts the desired update flow.,abstract                                        boolean
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, Activity activity, AppUpdateOptions options, int requestCode)",Starts the desired update flow.,abstract                                        boolean
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, int appUpdateType, Activity activity, int requestCode)",Starts the desired update flow.,abstract                                        boolean
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, IntentSenderForResultStarter starter, AppUpdateOptions options, int requestCode)",Starts the desired update flow.,abstract                                        boolean
com.google.android.play.core.appupdate.AppUpdateManager,Manages operations that allow your app to initiate its own updates.,unregisterListener(InstallStateUpdatedListener listener),Unregisters a listener you previously registered using registerListener(InstallStateUpdatedListener).,abstract                                        void
com.google.android.play.core.appupdate.AppUpdateManagerFactory,Creates instances of AppUpdateManager.,create(Context context),Creates an instance of AppUpdateManager.,static                        AppUpdateManager
com.google.android.play.core.appupdate.AppUpdateOptions,Options defining a specific in-app update flow and its parameters.,appUpdateType(),Represents the type of the update flow.,abstract                                        int
com.google.android.play.core.appupdate.AppUpdateOptions,Options defining a specific in-app update flow and its parameters.,defaultOptions(int appUpdateType),Returns an AppUpdateOptions instance with the default values for the provided update flow type.,static                        AppUpdateOptions
com.google.android.play.core.appupdate.AppUpdateOptions,Options defining a specific in-app update flow and its parameters.,newBuilder(int appUpdateType),Creates a AppUpdateOptions.Builder for the provided update flow type.,static                        AppUpdateOptions.Builder
com.google.android.play.core.appupdate.AppUpdateOptions.Builder,Builder for AppUpdateOptions.,build(),Builds AppUpdateOptions.,abstract                                        AppUpdateOptions
com.google.android.play.core.appupdate.AppUpdateOptions.Builder,Builder for AppUpdateOptions.,setAppUpdateType(int value),Sets the type of the update flow.,abstract                                        AppUpdateOptions.Builder
com.google.android.play.core.install.model.AppUpdateType,Identifiers for the different types of developer triggered updates.,N/A,N/A,N/A
com.google.android.play.core.assetpacks.AssetLocation,"Location of a single asset, belonging to an asset pack.",offset(),"Returns the file offset where the asset starts, in bytes.",abstract                                        long
com.google.android.play.core.assetpacks.AssetLocation,"Location of a single asset, belonging to an asset pack.",path(),Returns the path to the file containing the asset.,abstract                                        String
com.google.android.play.core.assetpacks.AssetLocation,"Location of a single asset, belonging to an asset pack.",size(),"Returns the size of the asset, in bytes.",abstract                                        long
com.google.android.play.core.assetpacks.model.AssetPackErrorCode,Error codes for the download of an asset pack.,N/A,N/A,N/A
com.google.android.play.core.assetpacks.model.AssetPackErrorCodeHelper,Class containing static helper methods for AssetPackErrorCode.,getErrorSummary(int errorCode),Short summary about each AssetPackErrorCode.,static                        String
com.google.android.play.core.assetpacks.AssetPackException,An exception indicating something went wrong with the Asset Delivery API.,getErrorCode(),Returns an error code value from AssetPackErrorCode.,int
com.google.android.play.core.assetpacks.AssetPackLocation,Location of an asset pack on the device.,assetsPath(),"Returns the file path to the folder containing the pack's assets, if the storage method is STORAGE_FILES.",abstract                                        String
com.google.android.play.core.assetpacks.AssetPackLocation,Location of an asset pack on the device.,packStorageMethod(),Returns whether the pack is installed as an APK or extracted into a folder on the filesystem.,abstract                                        int
com.google.android.play.core.assetpacks.AssetPackLocation,Location of an asset pack on the device.,path(),"Returns the file path to the folder containing the extracted asset pack, if the storage method is STORAGE_FILES.",abstract                                        String
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,cancel(List<String> packNames),Requests to cancel the download of the specified asset packs.,abstract                                        AssetPackStates
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,clearListeners(),Unregisters all listeners previously added using registerListener(AssetPackStateUpdateListener).,abstract                                        void
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,fetch(List<String> packNames),Requests to download the specified asset packs.,abstract                                        Task<AssetPackStates>
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,"getAssetLocation(String packName, String assetPath)","[advanced API] Returns the location of an asset in a pack, or null if the asset is not present in the given pack.",abstract                                        AssetLocation
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,getPackLocation(String packName),Returns the location of the specified asset pack on the device or null if this pack is not downloaded or is outdated.,abstract                                        AssetPackLocation
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,getPackLocations(),Returns the location of all installed asset packs as a mapping from the asset pack name to an AssetPackLocation.,"abstract                                        Map<String, AssetPackLocation>"
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,getPackStates(List<String> packNames),Requests download state or details for the specified asset packs.,abstract                                        Task<AssetPackStates>
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,registerListener(AssetPackStateUpdateListener listener),Registers a listener that will be notified of changes to the state of pack downloads for this app.,abstract                                        void
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,removePack(String packName),Deletes the specified asset pack from the internal storage of the app.,abstract                                        Task<Void>
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,showCellularDataConfirmation(Activity activity),Shows a confirmation dialog to resume all pack downloads that are currently in the WAITING_FOR_WIFI state.,abstract                                        Task<Integer>
com.google.android.play.core.assetpacks.AssetPackManager,Manages downloads of asset packs.,unregisterListener(AssetPackStateUpdateListener listener),Unregisters a listener previously added using registerListener(AssetPackStateUpdateListener).,abstract                                        void
com.google.android.play.core.assetpacks.AssetPackManagerFactory,Creates instances of AssetPackManager.,getInstance(Context applicationContext),Creates an instance of AssetPackManager.,static                        AssetPackManager
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,bytesDownloaded(),Returns the total number of bytes already downloaded for the pack.,abstract                                        long
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,errorCode(),"Returns the error code for the pack, if Play has failed to download the pack.",abstract                                        int
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,name(),Returns the name of the pack.,abstract                                        String
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,status(),Returns the download status of the pack.,abstract                                        int
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,totalBytesToDownload(),Returns the total size of the pack in bytes.,abstract                                        long
com.google.android.play.core.assetpacks.AssetPackState,The state of an individual asset pack.,transferProgressPercentage(),Returns the percentage of the asset pack already transferred to the app.,abstract                                        int
com.google.android.play.core.assetpacks.AssetPackStates,Contains the state for all requested packs.,packStates(),Returns a map from a pack's name to its state.,"abstract                                        Map<String, AssetPackState>"
com.google.android.play.core.assetpacks.AssetPackStates,Contains the state for all requested packs.,totalBytes(),Returns total size of all requested packs in bytes.,abstract                                        long
com.google.android.play.core.assetpacks.AssetPackStateUpdateListener,Listener that may be registered for updates on the state of the download of asset packs.,N/A,N/A,N/A
com.google.android.play.core.assetpacks.model.AssetPackStatus,Status of the download of an asset pack.,N/A,N/A,N/A
com.google.android.play.core.assetpacks.model.AssetPackStorageMethod,Method used to store an asset pack.,N/A,N/A,N/A
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,completeUpdate(),"For a flexible update flow, triggers the completion of the update.",Task<Void>
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,downloadCompletes(),Simulates the download completing.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,downloadFails(),Simulates a download failure.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,downloadStarts(),Simulates the download starting.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,getAppUpdateInfo(),"Requests the update availability for the current app, an intent to start an update flow, and, if applicable, the state of updates currently in progress.",Task<AppUpdateInfo>
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,getPartiallyAllowedUpdateType(),"Returns the type of update that's permitted or null, if no limitations exist.",Integer
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,getTypeForUpdateInProgress(),"Returns the type of update that's currently in progress or null, if no update is in progress.",Integer
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,installCompletes(),Simulates the download completing.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,installFails(),Simulates an update install failure.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,isConfirmationDialogVisible(),Returns whether the user confirmation dialog of the flexible update is visible to the user.,boolean
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,isImmediateFlowVisible(),Returns whether the user confirmation screen of the immediate update is visible to the user.,boolean
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,isInstallSplashScreenVisible(),Returns whether the splash screen is visible to the user.,boolean
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,registerListener(InstallStateUpdatedListener listener),Registers a listener for this app that receives state changes for self-update operations.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setBytesDownloaded(long bytesDownloaded),Simulates progress of the download by setting the number of bytes already downloaded.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setClientVersionStalenessDays(Integer clientVersionStaleness),Sets the staleness of the version installed on user's device.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setInstallErrorCode(int installErrorCode),Sets an error code which is returned by certain update flow API calls.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setPartiallyAllowedUpdateType(Integer allowedUpdate),"Simulates conditions where only the in-app update type you specify, such as flexible or immediate, is permitted.",void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setTotalBytesToDownload(long totalBytesToDownload),Sets the size of an available update in bytes.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setUpdateAvailable(int availableVersionCode),Declares that an update is available and provides its version code.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setUpdateNotAvailable(),Declares that no updates are available.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,setUpdatePriority(int updatePriority),Sets the priority of the available update.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, int appUpdateType, IntentSenderForResultStarter starter, int requestCode)",Starts the desired update flow.,boolean
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,"startUpdateFlowForResult(AppUpdateInfo appUpdateInfo, int appUpdateType, Activity activity, int requestCode)",Starts the desired update flow.,boolean
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,unregisterListener(InstallStateUpdatedListener listener),Unregisters a listener you previously registered using registerListener(InstallStateUpdatedListener).,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,userAcceptsUpdate(),Simulates that a user has accepted an update from the update confirmation dialog.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,userCancelsDownload(),Simulates the user canceling the download via the Play UI.,void
com.google.android.play.core.appupdate.testing.FakeAppUpdateManager,A fake implementation of the AppUpdateManager.,userRejectsUpdate(),Simulates that a user has declined an update from the update confirmation dialog.,void
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,cancelInstall(int sessionId),Starts a request to cancel a pending split install.,Task<Void>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,deferredInstall(List<String> moduleNames),Not implemented.,Task<Void>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,deferredLanguageInstall(List<Locale> languages),Not implemented.,Task<Void>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,deferredLanguageUninstall(List<Locale> languages),Not implemented.,Task<Void>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,deferredUninstall(List<String> moduleNames),Not implemented.,Task<Void>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,getInstalledLanguages(),Returns the languages that are currently installed.,Set<String>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,getInstalledModules(),Returns the modules that are currently installed (excluding the base module).,Set<String>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,getSessionState(int sessionId),Returns the current state of a split install session.,Task<SplitInstallSessionState>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,getSessionStates(),This fake implementation just support one session state.,Task<List<SplitInstallSessionState>>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,registerListener(SplitInstallStateUpdatedListener listener),Registers a listener for your app that is alerted of state changes for module install requests.,void
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,setShouldNetworkError(boolean shouldNetworkError),Sets whether the next split install should terminate in a network error.,void
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,"startConfirmationDialogForResult(SplitInstallSessionState sessionState, IntentSenderForResultStarter starter, int requestCode)",Not implemented.,boolean
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,"startConfirmationDialogForResult(SplitInstallSessionState sessionState, Activity activity, int requestCode)",Not implemented.,boolean
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,startInstall(SplitInstallRequest request),Initiates a request to download and install split APKs for additional features or language resources.,Task<Integer>
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManager,A fake implementation of the SplitInstallManager.,unregisterListener(SplitInstallStateUpdatedListener listener),Unregisters a listener you previously registered using registerListener(SplitInstallStateUpdatedListener).,void
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManagerFactory,Creates instances of FakeSplitInstallManager.,create(Context context),Creates a fake implementation of the SplitInstallManager.,static                        FakeSplitInstallManager
com.google.android.play.core.splitinstall.testing.FakeSplitInstallManagerFactory,Creates instances of FakeSplitInstallManager.,"create(Context context, File modulesDirectory)",Alternative version of create(Context) which allows for the splits directory to be set explicitly.,static                        FakeSplitInstallManager
com.google.android.play.core.install.model.InstallErrorCode,StatusCodes used by InstallService.,N/A,N/A,N/A
com.google.android.play.core.install.model.InstallErrorCodeHelper,Class containing static helper methods for InstallErrorCode.,getErrorSummary(int errorCode),Short summary about each InstallErrorCode.,static                        String
com.google.android.play.core.install.InstallException,An exception indicating something went wrong with an install/update.,getErrorCode(),Returns an error code value from InstallErrorCode.,int
com.google.android.play.core.install.InstallState,Reports the request state of a module install or update.,bytesDownloaded(),Returns the number of bytes downloaded so far.,abstract                                        long
com.google.android.play.core.install.InstallState,Reports the request state of a module install or update.,installErrorCode(),"Returns the error code for an install, or NO_ERROR if the install is successful or in progress.",abstract                                        int
com.google.android.play.core.install.InstallState,Reports the request state of a module install or update.,installStatus(),Returns the status of an install.,abstract                                        int
com.google.android.play.core.install.InstallState,Reports the request state of a module install or update.,packageName(),Returns the package name for the app being installed.,abstract                                        String
com.google.android.play.core.install.InstallState,Reports the request state of a module install or update.,totalBytesToDownload(),Returns the total number of bytes to be downloaded for this update.,abstract                                        long
com.google.android.play.core.install.InstallStateUpdatedListener,Listeners that you can register to monitor updates installs.,N/A,N/A,N/A
com.google.android.play.core.install.model.InstallStatus,Status of a download / install.,N/A,N/A,N/A
com.google.android.play.core.common.IntentSenderForResultStarter,Interface for an object able to start an IntentSender for result.,"startIntentSenderForResult(IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)",Starts the provided IntentSender for result.,abstract                                        void
com.google.android.play.core.common.LocalTestingException,Exception thrown for issues related to local testing mode.,N/A,N/A,N/A
com.google.android.play.core.missingsplits.MissingSplitsDetectingApplication,A convenience Application that avoids app crashes in situations where the installed app is missing required split APKs.,onCreate(),N/A,final                void
com.google.android.play.core.missingsplits.MissingSplitsDetectingApplication,A convenience Application that avoids app crashes in situations where the installed app is missing required split APKs.,onCreateCustom(),"Instead of using onCreate(), you can override this methos to define custom behavior.",void
com.google.android.play.core.missingsplits.MissingSplitsManager,Handles situations when the installed app is missing required split APKs.,disableAppIfMissingRequiredSplits(),"If your app is missing a required split APK, this API gracefully closes the app.",abstract                                        boolean
com.google.android.play.core.missingsplits.MissingSplitsManager,Handles situations when the installed app is missing required split APKs.,isMissingRequiredSplits(),"Checks whether the app is missing a required split APK, without any side effects, such as disabling the app.",abstract                                        boolean
com.google.android.play.core.missingsplits.MissingSplitsManagerFactory,Creates instances of MissingSplitsManager.,create(Context context),Creates an instance of MissingSplitsManager.,static                        MissingSplitsManager
com.google.android.play.core.tasks.OnCompleteListener,Listener called when a Task completes.,onComplete(Task<ResultT> task),Called when the Task completes.,abstract                                        void
com.google.android.play.core.tasks.OnFailureListener,Listener called when a Task fails with an exception.,onFailure(Exception e),Called when the Task fails with an exception.,abstract                                        void
com.google.android.play.core.tasks.OnSuccessListener,Listener called when a Task completes successfully.,onSuccess(ResultT result),Called when the Task completes successfully.,abstract                                        void
com.google.android.play.core.tasks.RuntimeExecutionException,TaskException version of ExecutionException.,getErrorCode(),Returns the error code associated with this exception.,int
com.google.android.play.core.splitcompat.SplitCompat,Enables immediate access to code and resources of split APKs installed through SplitInstallManager.,install(Context context),Emulates installation of split APKs to allow immediate access to their code and resources.,static                        boolean
com.google.android.play.core.splitcompat.SplitCompat,Enables immediate access to code and resources of split APKs installed through SplitInstallManager.,installActivity(Context context),Emulates installation of a split APK to allow immediate access to a given activity.,static                        boolean
com.google.android.play.core.splitcompat.SplitCompatApplication,Minimal SplitCompat capable Application.,N/A,N/A,N/A
com.google.android.play.core.splitinstall.model.SplitInstallErrorCode,Status of a download / install.,N/A,N/A,N/A
com.google.android.play.core.splitinstall.model.SplitInstallErrorCodeHelper,Class containing static helper methods for SplitInstallErrorCode.,getErrorSummary(int errorCode),Short summary about each SplitInstallErrorCode.,static                        String
com.google.android.play.core.splitinstall.SplitInstallException,An exception indicating something went wrong with the request to install a split APK.,getErrorCode(),Returns an error code value from SplitInstallErrorCode.,int
com.google.android.play.core.splitinstall.SplitInstallHelper,"Helper class that includes utilities that your app can use to retrieve information about available, installed split APKs.","loadLibrary(Context context, String libName)","Loads a native library using a classloader, or a full path if the library is not available in the class path.",static                        void
com.google.android.play.core.splitinstall.SplitInstallHelper,"Helper class that includes utilities that your app can use to retrieve information about available, installed split APKs.",updateAppInfo(Context context),Updates application info based on currently installed splits.,static                        void
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,cancelInstall(int sessionId),Starts a request to cancel a pending split install.,abstract                                        Task<Void>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,deferredInstall(List<String> moduleNames),Defers installation of given moduleNames.,abstract                                        Task<Void>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,deferredLanguageInstall(List<Locale> languages),Defers installation of given languages.,abstract                                        Task<Void>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,deferredLanguageUninstall(List<Locale> languages),Defers uninstallation of given languages.,abstract                                        Task<Void>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,deferredUninstall(List<String> moduleNames),Defers uninstallation of given moduleNames.,abstract                                        Task<Void>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,getInstalledLanguages(),Returns the languages that are currently installed.,abstract                                        Set<String>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,getInstalledModules(),Returns the modules that are currently installed (excluding the base module).,abstract                                        Set<String>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,getSessionState(int sessionId),Returns the current state of a split install session.,abstract                                        Task<SplitInstallSessionState>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,getSessionStates(),Returns the state for all active sessions belonging to the app.,abstract                                        Task<List<SplitInstallSessionState>>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,registerListener(SplitInstallStateUpdatedListener listener),Registers a listener for your app that is alerted of state changes for module install requests.,abstract                                        void
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,"startConfirmationDialogForResult(SplitInstallSessionState sessionState, IntentSenderForResultStarter starter, int requestCode)",Starts the user confirmation dialog from the provided SplitInstallSessionState.,abstract                                        boolean
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,"startConfirmationDialogForResult(SplitInstallSessionState sessionState, Activity activity, int requestCode)",Starts the user confirmation dialog from the provided SplitInstallSessionState.,abstract                                        boolean
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,startInstall(SplitInstallRequest request),Initiates a request to download and install split APKs for additional features or language resources.,abstract                                        Task<Integer>
com.google.android.play.core.splitinstall.SplitInstallManager,Manages sessions for requesting and installing split APKs for additional features or language resources.,unregisterListener(SplitInstallStateUpdatedListener listener),Unregisters a listener you previously registered using registerListener(SplitInstallStateUpdatedListener).,abstract                                        void
com.google.android.play.core.splitinstall.SplitInstallManagerFactory,"Creates instances of SplitInstallManager, which you use to request an on demand module.",create(Context context),Creates an instance of SplitInstallManager.,static                        SplitInstallManager
com.google.android.play.core.splitinstall.SplitInstallRequest,Creates a request to install split APKs.,getLanguages(),Returns languages that are included in the request.,List<Locale>
com.google.android.play.core.splitinstall.SplitInstallRequest,Creates a request to install split APKs.,getModuleNames(),Returns modules that are included in the request.,List<String>
com.google.android.play.core.splitinstall.SplitInstallRequest,Creates a request to install split APKs.,newBuilder(),Start building a SplitInstallRequest,static                        SplitInstallRequest.Builder
com.google.android.play.core.splitinstall.SplitInstallRequest,Creates a request to install split APKs.,toString(),N/A,String
com.google.android.play.core.splitinstall.SplitInstallRequest.Builder,A builder for a request to install split APKs.,addLanguage(Locale language),Adds a language to be installed.,SplitInstallRequest.Builder
com.google.android.play.core.splitinstall.SplitInstallRequest.Builder,A builder for a request to install split APKs.,addModule(String moduleName),Adds a module to be installed.,SplitInstallRequest.Builder
com.google.android.play.core.splitinstall.SplitInstallRequest.Builder,A builder for a request to install split APKs.,build(),Returns a new SplitInstallRequest object.,SplitInstallRequest
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,bytesDownloaded(),Returns the number of bytes downloaded so far.,abstract                                        long
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,"create(int sessionId, int status, int errorCode, long bytesDownloaded, long totalBytesToDownload, List<String> moduleNames, List<String> languages)",Creates a SplitInstallSessionState data object.,static                        SplitInstallSessionState
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,errorCode(),"Returns the error code for a split install, or NO_ERROR if the install is successful or in progress.",abstract                                        int
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,hasTerminalStatus(),N/A,boolean
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,languages(),Returns the languages that are included in this install session.,List<String>
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,moduleNames(),Returns the modules that are included in this install session.,List<String>
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,resolutionIntent(),"This method is deprecated.    please use startConfirmationDialogForResult(SplitInstallSessionState, Activity, int) instead.",abstract                                        PendingIntent
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,sessionId(),N/A,abstract                                        int
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,status(),Returns the status of a split install session.,abstract                                        int
com.google.android.play.core.splitinstall.SplitInstallSessionState,The current state of a split install request.,totalBytesToDownload(),Returns the total number of bytes to download in this session.,abstract                                        long
com.google.android.play.core.splitinstall.model.SplitInstallSessionStatus,Status of a download / install.,N/A,N/A,N/A
com.google.android.play.core.splitinstall.SplitInstallStateUpdatedListener,Listeners that you can register to receive updates to split install requests.,N/A,N/A,N/A
com.google.android.play.core.listener.StateUpdatedListener,Base interface for state update listeners.,onStateUpdate(StateT state),Callback triggered whenever the state has changed.,abstract                                        void
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,addOnCompleteListener(OnCompleteListener<ResultT> listener),Adds a listener that is called when the Task completes.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,"addOnCompleteListener(Executor executor, OnCompleteListener<ResultT> listener)",Adds a listener that is called when the Task completes.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,"addOnFailureListener(Executor executor, OnFailureListener listener)",Adds a listener that is called if the Task fails.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,addOnFailureListener(OnFailureListener listener),Adds a listener that is called if the Task fails.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,"addOnSuccessListener(Executor executor, OnSuccessListener<? super ResultT> listener)",Adds a listener that is called if the Task completes successfully.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,addOnSuccessListener(OnSuccessListener<? super ResultT> listener),Adds a listener that is called if the Task completes successfully.,abstract                                        Task<ResultT>
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,getException(),Returns the exception that caused the Task to fail.,abstract                                        Exception
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,getResult(),"Gets the result of the Task, if it has already completed.",abstract                                        ResultT
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,getResult(Class<X> exceptionType),"Gets the result of the Task, if it has already completed.",abstract                                <X extends Throwable>        ResultT
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,isComplete(),Returns true if the Task is complete; false otherwise.,abstract                                        boolean
com.google.android.play.core.tasks.Task,Represents an asynchronous operation.,isSuccessful(),Returns true if the Task has completed successfully; false otherwise.,abstract                                        boolean
com.google.android.play.core.tasks.TaskExecutors,Standard Executor instances for use with Task.,N/A,N/A,N/A
com.google.android.play.core.tasks.Tasks,Task utility methods.,"await(Task<ResultT> task, long timeout, TimeUnit unit)",Blocks until the specified Task is complete.,static                <ResultT>        ResultT
com.google.android.play.core.tasks.Tasks,Task utility methods.,await(Task<ResultT> task),Blocks until the specified Task is complete.,static                <ResultT>        ResultT
com.google.android.play.core.tasks.Tasks,Task utility methods.,whenAll(Collection<? extends Task<?>> tasks),Returns a Task that completes successfully when all of the specified Tasks complete successfully.,static                        Task<Void>
com.google.android.play.core.install.model.UpdateAvailability,Availability of an update for the requested package.,N/A,N/A,N/A
