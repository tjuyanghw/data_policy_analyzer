class_name,class_description,method,method_description,data_type
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,equals(java.lang.Object o),N/A,boolean
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,expiresIn(),Specifies how long this token can be used for placing API calls.,long
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,getAccessToken(),N/A,java.lang.String
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,getExpires(),N/A,long
com.paypal.base.rest.AccessToken,Specifies how long this token can be used for placing API calls.,hashCode(),N/A,int
com.paypal.api.openidconnect.Address,Default Constructor,getCountry(),Getter for country,java.lang.String
com.paypal.api.openidconnect.Address,Default Constructor,getLocality(),Getter for locality,java.lang.String
com.paypal.api.openidconnect.Address,Default Constructor,getPostalCode(),Getter for postalCode,java.lang.String
com.paypal.api.openidconnect.Address,Default Constructor,getRegion(),Getter for region,java.lang.String
com.paypal.api.openidconnect.Address,Default Constructor,getStreetAddress(),Getter for streetAddress,java.lang.String
com.paypal.api.openidconnect.Address,Default Constructor,setCountry(java.lang.String country),Setter for country,void
com.paypal.api.openidconnect.Address,Default Constructor,setLocality(java.lang.String locality),Setter for locality,void
com.paypal.api.openidconnect.Address,Default Constructor,setPostalCode(java.lang.String postalCode),Setter for postalCode,void
com.paypal.api.openidconnect.Address,Default Constructor,setRegion(java.lang.String region),Setter for region,void
com.paypal.api.openidconnect.Address,Default Constructor,setStreetAddress(java.lang.String streetAddress),Setter for streetAddress,void
com.paypal.api.payments.Address,Phone number in E.123 format.,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Address,Phone number in E.123 format.,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Address,Phone number in E.123 format.,getPhone(),Phone number in E.123 format.,java.lang.String
com.paypal.api.payments.Address,Phone number in E.123 format.,getType(),"Type of address (e.g., HOME_OR_WORK, GIFT etc).",java.lang.String
com.paypal.api.payments.Address,Phone number in E.123 format.,hashCode(),N/A,int
com.paypal.api.payments.Address,Phone number in E.123 format.,setPhone(java.lang.String phone),Phone number in E.123 format.,Address
com.paypal.api.payments.Address,Phone number in E.123 format.,setType(java.lang.String type),"Type of address (e.g., HOME_OR_WORK, GIFT etc).",Address
com.paypal.api.payments.Agreement,Default Constructor,"billBalance(APIContext apiContext,
           AgreementStateDescriptor agreementStateDescriptor)",Bill an outstanding amount for an agreement by passing the ID of the agreement to the request URI.,void
com.paypal.api.payments.Agreement,Default Constructor,"billBalance(java.lang.String accessToken,
           AgreementStateDescriptor agreementStateDescriptor)","Deprecated. 
Please use billBalance(APIContext, AgreementStateDescriptor) instead.
",void
com.paypal.api.payments.Agreement,Default Constructor,"cancel(APIContext apiContext,
      AgreementStateDescriptor agreementStateDescriptor)",Cancel a billing agreement by passing the ID of the agreement to the request URI.,void
com.paypal.api.payments.Agreement,Default Constructor,"cancel(java.lang.String accessToken,
      AgreementStateDescriptor agreementStateDescriptor)","Deprecated. 
Please use cancel(APIContext, AgreementStateDescriptor) instead.
",void
com.paypal.api.payments.Agreement,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Agreement,Default Constructor,create(APIContext apiContext),"Create a new billing agreement by passing the details for the agreement, including the name, description, start date, payer, and billing plan in the request JSON.",Agreement
com.paypal.api.payments.Agreement,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",Agreement
com.paypal.api.payments.Agreement,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Agreement,Default Constructor,"execute(APIContext apiContext,
       java.lang.String token)",Execute a billing agreement after buyer approval by passing the payment token to the request URI.,static Agreement
com.paypal.api.payments.Agreement,Default Constructor,execute(java.lang.String accessToken),"Deprecated. 
Please use execute(APIContext, String) instead.
",Agreement
com.paypal.api.payments.Agreement,Default Constructor,"get(APIContext apiContext,
   java.lang.String agreementId)",Retrieve details for a particular billing agreement by passing the ID of the agreement to the request URI.,static Agreement
com.paypal.api.payments.Agreement,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String agreementId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Agreement
com.paypal.api.payments.Agreement,Default Constructor,getAgreementDetails(),Details of the agreement.,AgreementDetails
com.paypal.api.payments.Agreement,Default Constructor,getCreateTime(),Date and time that this resource was created.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getDescription(),Description of the agreement.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getId(),Identifier of the agreement.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Agreement,Default Constructor,getName(),Name of the agreement.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getOverrideChargeModels(),Array of override_charge_model for this agreement if needed to change the default models from the billing plan.,java.util.List<OverrideChargeModel>
com.paypal.api.payments.Agreement,Default Constructor,getOverrideMerchantPreferences(),"Default merchant preferences from the billing plan are used, unless override preferences are provided here.",MerchantPreferences
com.paypal.api.payments.Agreement,Default Constructor,getPayer(),Details of the buyer who is enrolling in this agreement.,Payer
com.paypal.api.payments.Agreement,Default Constructor,getPlan(),Plan details for this agreement.,Plan
com.paypal.api.payments.Agreement,Default Constructor,getShippingAddress(),"Shipping address object of the agreement, which should be provided if it is different from the default address.",Address
com.paypal.api.payments.Agreement,Default Constructor,getStartDate(),Start date of the agreement.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getState(),State of the agreement,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getToken(),Payment token,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,getUpdateTime(),Date and time that this resource was updated.,java.lang.String
com.paypal.api.payments.Agreement,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Agreement,Default Constructor,"reActivate(APIContext apiContext,
          AgreementStateDescriptor agreementStateDescriptor)",Reactivate a suspended billing agreement by passing the ID of the agreement to the appropriate URI.,void
com.paypal.api.payments.Agreement,Default Constructor,"reActivate(java.lang.String accessToken,
          AgreementStateDescriptor agreementStateDescriptor)","Deprecated. 
Please use reActivate(APIContext, AgreementStateDescriptor)  instead.
",void
com.paypal.api.payments.Agreement,Default Constructor,setAgreementDetails(AgreementDetails agreementDetails),Details of the agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,"setBalance(APIContext apiContext,
          Currency currency)",Set the balance for an agreement by passing the ID of the agreement to the request URI.,void
com.paypal.api.payments.Agreement,Default Constructor,"setBalance(java.lang.String accessToken,
          Currency currency)","Deprecated. 
Please use setBalance(APIContext, Currency) instead.
",void
com.paypal.api.payments.Agreement,Default Constructor,setCreateTime(java.lang.String createTime),Date and time that this resource was created.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setDescription(java.lang.String description),Description of the agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setId(java.lang.String id),Identifier of the agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setLinks(java.util.List<Links> links),N/A,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setName(java.lang.String name),Name of the agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setOverrideChargeModels(java.util.List<OverrideChargeModel> overrideChargeModels),Array of override_charge_model for this agreement if needed to change the default models from the billing plan.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setOverrideMerchantPreferences(MerchantPreferences overrideMerchantPreferences),"Default merchant preferences from the billing plan are used, unless override preferences are provided here.",Agreement
com.paypal.api.payments.Agreement,Default Constructor,setPayer(Payer payer),Details of the buyer who is enrolling in this agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setPlan(Plan plan),Plan details for this agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setShippingAddress(Address shippingAddress),"Shipping address object of the agreement, which should be provided if it is different from the default address.",Agreement
com.paypal.api.payments.Agreement,Default Constructor,setStartDate(java.lang.String startDate),Start date of the agreement.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setState(java.lang.String state),State of the agreement,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setToken(java.lang.String token),Payment token,Agreement
com.paypal.api.payments.Agreement,Default Constructor,setUpdateTime(java.lang.String updateTime),Date and time that this resource was updated.,Agreement
com.paypal.api.payments.Agreement,Default Constructor,"suspend(APIContext apiContext,
       AgreementStateDescriptor agreementStateDescriptor)",Suspend a particular billing agreement by passing the ID of the agreement to the request URI.,void
com.paypal.api.payments.Agreement,Default Constructor,"suspend(java.lang.String accessToken,
       AgreementStateDescriptor agreementStateDescriptor)","Deprecated. 
Please use suspend(APIContext, AgreementStateDescriptor) instead.
",void
com.paypal.api.payments.Agreement,Default Constructor,"transactions(APIContext apiContext,
            java.lang.String agreementId,
            java.util.Date startDate,
            java.util.Date endDate)","List transactions for a billing agreement by passing the ID of the agreement, as well as the start and end dates of the range of transactions to list, to the request URI.",static AgreementTransactions
com.paypal.api.payments.Agreement,Default Constructor,"transactions(java.lang.String accessToken,
            java.lang.String agreementId,
            java.util.Date startDate,
            java.util.Date endDate)","Deprecated. 
Please use transactions(APIContext, String, Date, Date) instead.
",static AgreementTransactions
com.paypal.api.payments.Agreement,Default Constructor,"update(APIContext apiContext,
      java.util.List<Patch> patchRequest)","Update details of a billing agreement, such as the description, shipping address, and start date, by passing the ID of the agreement to the request URI.",Agreement
com.paypal.api.payments.Agreement,Default Constructor,"update(java.lang.String accessToken,
      java.util.List<Patch> patchRequest)","Deprecated. 
Please use update(APIContext, List) instead.
",Agreement
com.paypal.api.payments.AgreementDetails,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.AgreementDetails,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.AgreementDetails,Default Constructor,getCyclesCompleted(),Number of cycles completed for this agreement.,java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getCyclesRemaining(),Number of cycles remaining for this agreement.,java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getFailedPaymentCount(),Total number of failed payments for this agreement.,java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getFinalPaymentDate(),"Last payment date for this agreement, represented as 2015-02-19T10:00:00Z format.",java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getLastPaymentAmount(),Last payment amount for this agreement.,Currency
com.paypal.api.payments.AgreementDetails,Default Constructor,getLastPaymentDate(),"Last payment date for this agreement, represented as 2014-06-09T09:42:31Z format.",java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getNextBillingDate(),"The next billing date for this agreement, represented as 2014-02-19T10:00:00Z format.",java.lang.String
com.paypal.api.payments.AgreementDetails,Default Constructor,getOutstandingBalance(),The outstanding balance for this agreement.,Currency
com.paypal.api.payments.AgreementDetails,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.AgreementDetails,Default Constructor,setCyclesCompleted(java.lang.String cyclesCompleted),Number of cycles completed for this agreement.,AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setCyclesRemaining(java.lang.String cyclesRemaining),Number of cycles remaining for this agreement.,AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setFailedPaymentCount(java.lang.String failedPaymentCount),Total number of failed payments for this agreement.,AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setFinalPaymentDate(java.lang.String finalPaymentDate),"Last payment date for this agreement, represented as 2015-02-19T10:00:00Z format.",AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setLastPaymentAmount(Currency lastPaymentAmount),Last payment amount for this agreement.,AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setLastPaymentDate(java.lang.String lastPaymentDate),"Last payment date for this agreement, represented as 2014-06-09T09:42:31Z format.",AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setNextBillingDate(java.lang.String nextBillingDate),"The next billing date for this agreement, represented as 2014-02-19T10:00:00Z format.",AgreementDetails
com.paypal.api.payments.AgreementDetails,Default Constructor,setOutstandingBalance(Currency outstandingBalance),The outstanding balance for this agreement.,AgreementDetails
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,getAmount(),The amount and currency of the agreement.,Currency
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,getNote(),Reason for changing the state of the agreement.,java.lang.String
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,setAmount(Currency amount),The amount and currency of the agreement.,AgreementStateDescriptor
com.paypal.api.payments.AgreementStateDescriptor,Default Constructor,setNote(java.lang.String note),Reason for changing the state of the agreement.,AgreementStateDescriptor
com.paypal.api.payments.AgreementTransaction,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.AgreementTransaction,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.AgreementTransaction,Default Constructor,getAmount(),Amount for this transaction.,Currency
com.paypal.api.payments.AgreementTransaction,Default Constructor,getFeeAmount(),Fee amount for this transaction.,Currency
com.paypal.api.payments.AgreementTransaction,Default Constructor,getNetAmount(),Net amount for this transaction.,Currency
com.paypal.api.payments.AgreementTransaction,Default Constructor,getPayerEmail(),Email id of payer.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getPayerName(),Business name of payer.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getStatus(),State of the subscription at this time.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getTimeStamp(),Time at which this transaction happened.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getTimeUpdated(),"Deprecated. 
use getTimeStamp instead.
 Getter for timeUpdated
",java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getTimeZone(),Time zone of time_updated field.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getTransactionId(),Id corresponding to this transaction.,java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,getTransactionType(),"Type of transaction, usually Recurring Payment.",java.lang.String
com.paypal.api.payments.AgreementTransaction,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.AgreementTransaction,Default Constructor,setAmount(Currency amount),Amount for this transaction.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setFeeAmount(Currency feeAmount),Fee amount for this transaction.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setNetAmount(Currency netAmount),Net amount for this transaction.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setPayerEmail(java.lang.String payerEmail),Email id of payer.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setPayerName(java.lang.String payerName),Business name of payer.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setStatus(java.lang.String status),State of the subscription at this time.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setTimeStamp(java.lang.String timeStamp),Time at which this transaction happened.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setTimeUpdated(java.lang.String timeUpdated),"Deprecated. 
use setTimeStamp instead.
 Setter for timeUpdated
",AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setTimeZone(java.lang.String timeZone),Time zone of time_updated field.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setTransactionId(java.lang.String transactionId),Id corresponding to this transaction.,AgreementTransaction
com.paypal.api.payments.AgreementTransaction,Default Constructor,setTransactionType(java.lang.String transactionType),"Type of transaction, usually Recurring Payment.",AgreementTransaction
com.paypal.api.payments.AgreementTransactions,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.AgreementTransactions,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.AgreementTransactions,Default Constructor,getAgreementTransactionList(),Array of agreement_transaction object.,java.util.List<AgreementTransaction>
com.paypal.api.payments.AgreementTransactions,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.AgreementTransactions,Default Constructor,setAgreementTransactionList(java.util.List<AgreementTransaction> agreementTransactionList),Array of agreement_transaction object.,AgreementTransactions
com.paypal.api.payments.AlternatePayment,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.AlternatePayment,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.AlternatePayment,Default Constructor,getAlternatePaymentAccountId(),The unique identifier of the alternate payment account.,java.lang.String
com.paypal.api.payments.AlternatePayment,Default Constructor,getAlternatePaymentProviderId(),Alternate Payment provider id.,java.lang.String
com.paypal.api.payments.AlternatePayment,Default Constructor,getExternalCustomerId(),The unique identifier of the payer,java.lang.String
com.paypal.api.payments.AlternatePayment,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.AlternatePayment,Default Constructor,setAlternatePaymentAccountId(java.lang.String alternatePaymentAccountId),The unique identifier of the alternate payment account.,AlternatePayment
com.paypal.api.payments.AlternatePayment,Default Constructor,setAlternatePaymentProviderId(java.lang.String alternatePaymentProviderId),Alternate Payment provider id.,AlternatePayment
com.paypal.api.payments.AlternatePayment,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),The unique identifier of the payer,AlternatePayment
com.paypal.api.payments.Amount,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Amount,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Amount,Default Constructor,getCurrency(),3-letter [currency code](https://developer.paypal.com/docs/integration/direct/rest_api_payment_country_currency_support/).,java.lang.String
com.paypal.api.payments.Amount,Default Constructor,getDetails(),Additional details of the payment amount.,Details
com.paypal.api.payments.Amount,Default Constructor,getTotal(),Total amount charged from the payer to the payee.,java.lang.String
com.paypal.api.payments.Amount,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Amount,Default Constructor,setCurrency(java.lang.String currency),3-letter [currency code](https://developer.paypal.com/docs/integration/direct/rest_api_payment_country_currency_support/).,Amount
com.paypal.api.payments.Amount,Default Constructor,setDetails(Details details),Additional details of the payment amount.,Amount
com.paypal.api.payments.Amount,Default Constructor,setTotal(java.lang.String total),Total amount charged from the payer to the payee.,Amount
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",getConfigurationMap(),Return configurationMap,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",getCredential(),Returns OAuthTokenCredential configured for the api call,OAuthTokenCredential
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",getEndPoint(),Returns the endpoint for the API call.,java.lang.String
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",getHeaderMap(),Returns headers for HTTP call,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",getPayLoad(),Returns the payload for the API call.,java.lang.String
com.paypal.base.APICallPreHandler,"APICallPreHandler defines a high level abstraction for call
 specific operations. PayPal REST API is provided by RESTAPICallPreHandler",validate(),Validates settings and integrity before call,void
com.paypal.base.APICallPreHandlerFactory,"APICallPreHandlerFactory factory for returning implementations if
 APICallPreHandler",createAPICallPreHandler(),Creates an instance of APICallPreHandler,APICallPreHandler
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","addConfiguration(java.lang.String key,
                java.lang.String value)",Adds configuration,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","addConfigurations(java.util.Map<java.lang.String,java.lang.String> configurations)",Adds configurations,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","addHTTPHeader(java.lang.String key,
             java.lang.String value)",Adds HTTP Header to existing list,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","addHTTPHeaders(java.util.Map<java.lang.String,java.lang.String> httpHeaders)",Adds HTTP Headers to existing list,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",fetchAccessToken(),Returns the access Token.,java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getAccessToken(),"Deprecated. 
Please use fetchAccessToken() instead.
 Previously, this was a dumb getter method. However, we enabled the feature to re-generate the access Token if null, or expired.
 This required us to throw proper PayPalRESTException, with error information on failure.
",java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getClientID(),N/A,java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getClientSecret(),N/A,java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getConfiguration(java.lang.String key),Returns string value of specific configuration.,java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getConfigurationMap(),Returns Configuration Map,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getHeadersMap(),"Deprecated. 
Use getHTTPHeaders() instead
","java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getHTTPHeader(java.lang.String key),N/A,java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getHTTPHeaders(),Returns HTTP Headers.,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getRequestId(),"Returns the unique requestId set during creation, if not available and if
 maskRequestId is set to false returns a generated one, else returns null.",java.lang.String
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",getSdkVersion(),N/A,SDKVersion
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","setConfigurationMap(java.util.Map<java.lang.String,java.lang.String> configurationMap)",Replaces the existing configurations with provided one,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","setHeadersMap(java.util.Map<java.lang.String,java.lang.String> headersMap)","Deprecated. 
Please use setHTTPHeaders(Map) or addHTTPHeaders(Map) instead.
",void
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.","setHTTPHeaders(java.util.Map<java.lang.String,java.lang.String> httpHeaders)",Replaces existing headers with provided one.,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",setMaskRequestId(boolean maskRequestId),N/A,void
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",setMode(java.lang.String mode),Sets mode to either `live` or `sandbox`.,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",setRefreshToken(java.lang.String refreshToken),Sets refresh token to be used for third party OAuth operations.,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",setRequestId(java.lang.String requestId),Sets the requestId to be sent on each request.,APIContext
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",setSdkVersion(SDKVersion sdkVersion),N/A,void
com.paypal.base.rest.APIContext,"APIContext wraps wire-level parameters for the API call.
 AccessToken, which is essentially an OAuth token, is treated as a mandatory
 parameter for (PayPal REST APIs). RequestId is generated if not supplied for
 marking Idempotency of the API call. OAuth token can be generated using
 OAuthTokenCredential. The Application Header property may be used by
 clients to access application level headers. The clients are responsible to
 cast the Application Header property to appropriate type.",usingGoogleAppEngine(boolean usingGoogleAppEngine),Enables settings for Google App Engine.,APIContext
com.paypal.api.payments.Authorization,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Authorization,Default Constructor,"capture(APIContext apiContext,
       Capture capture)","Captures and processes an authorization, by ID.",Capture
com.paypal.api.payments.Authorization,Default Constructor,"capture(java.lang.String accessToken,
       Capture capture)","Deprecated. 
Please use capture(APIContext, Capture) instead.
",Capture
com.paypal.api.payments.Authorization,Default Constructor,doVoid(APIContext apiContext),"Voids, or cancels, an authorization, by ID.",Authorization
com.paypal.api.payments.Authorization,Default Constructor,doVoid(java.lang.String accessToken),"Deprecated. 
Please use doVoid(APIContext) instead.
",Authorization
com.paypal.api.payments.Authorization,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Authorization,Default Constructor,"get(APIContext apiContext,
   java.lang.String authorizationId)","Shows details for an authorization, by ID.",static Authorization
com.paypal.api.payments.Authorization,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String authorizationId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Authorization
com.paypal.api.payments.Authorization,Default Constructor,getAmount(),Amount being authorized.,Amount
com.paypal.api.payments.Authorization,Default Constructor,getCreateTime(),Time of authorization as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getFmfDetails(),"Fraud Management Filter (FMF) details applied for the payment that could result in accept, deny, or pending action.",FmfDetails
com.paypal.api.payments.Authorization,Default Constructor,getId(),ID of the authorization transaction.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Authorization,Default Constructor,getParentPayment(),ID of the Payment resource that this transaction is based on.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getPaymentMode(),Specifies the payment mode of the transaction.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getPendingReason(),[DEPRECATED] Reason code for the transaction state being Pending.Obsolete.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getProtectionEligibility(),The level of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getProtectionEligibilityType(),The kind of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getReasonCode(),"Reason code, `AUTHORIZATION`, for a transaction state of `pending`.",java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getReceiptId(),Receipt id is 16 digit number payment identification number returned for guest users to identify the payment.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getReferenceId(),Identifier to the purchase or transaction unit corresponding to this authorization transaction.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getState(),State of the authorization.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getUpdateTime(),Time that the resource was last updated.,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,getValidUntil(),Authorization expiration time and date as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,java.lang.String
com.paypal.api.payments.Authorization,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Authorization,Default Constructor,reauthorize(APIContext apiContext),"Reauthorizes a PayPal account payment, by authorization ID.",Authorization
com.paypal.api.payments.Authorization,Default Constructor,reauthorize(java.lang.String accessToken),"Deprecated. 
Please use reauthorize(APIContext) instead.
",Authorization
com.paypal.api.payments.Authorization,Default Constructor,setAmount(Amount amount),Amount being authorized.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setCreateTime(java.lang.String createTime),Time of authorization as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setFmfDetails(FmfDetails fmfDetails),"Fraud Management Filter (FMF) details applied for the payment that could result in accept, deny, or pending action.",Authorization
com.paypal.api.payments.Authorization,Default Constructor,setId(java.lang.String id),ID of the authorization transaction.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setLinks(java.util.List<Links> links),N/A,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setParentPayment(java.lang.String parentPayment),ID of the Payment resource that this transaction is based on.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setPaymentMode(java.lang.String paymentMode),Specifies the payment mode of the transaction.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setPendingReason(java.lang.String pendingReason),[DEPRECATED] Reason code for the transaction state being Pending.Obsolete.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setProtectionEligibility(java.lang.String protectionEligibility),The level of seller protection in force for the transaction.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setProtectionEligibilityType(java.lang.String protectionEligibilityType),The kind of seller protection in force for the transaction.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setReasonCode(java.lang.String reasonCode),"Reason code, `AUTHORIZATION`, for a transaction state of `pending`.",Authorization
com.paypal.api.payments.Authorization,Default Constructor,setReceiptId(java.lang.String receiptId),Receipt id is 16 digit number payment identification number returned for guest users to identify the payment.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setReferenceId(java.lang.String referenceId),Identifier to the purchase or transaction unit corresponding to this authorization transaction.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setState(java.lang.String state),State of the authorization.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setUpdateTime(java.lang.String updateTime),Time that the resource was last updated.,Authorization
com.paypal.api.payments.Authorization,Default Constructor,setValidUntil(java.lang.String validUntil),Authorization expiration time and date as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,Authorization
com.paypal.api.payments.BankAccount,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.BankAccount,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.BankAccount,Default Constructor,getAccountName(),A customer designated name.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getAccountNumber(),Account number in either IBAN (max length 34) or BBAN (max length 17) format.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getAccountNumberType(),Type of the bank account number (International or Basic Bank Account Number).,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getAccountType(),Type of the bank account.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getAuthCaptureTimestamp(),Time at which the authorization (or check) was captured.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getAuthType(),"How the check was obtained from the customer, if check was the source of the information provided.",java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getBankName(),Name of the bank.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getBillingAddress(),Billing address.,Address
com.paypal.api.payments.BankAccount,Default Constructor,getBirthDate(),Birth date of the bank account holder.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getCheckType(),Type of the check when this information was obtained through a check by the facilitator or merchant.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getConfirmationStatus(),Confirmation status of a bank account.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getCountryCode(),2 letter country code of the Bank.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getCreateTime(),Time the resource was created.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getExternalCustomerId(),A unique identifier of the customer to whom this bank account belongs to.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getFirstName(),Account holder's first name.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getId(),ID of the bank account being saved for later use.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getLastName(),Account holder's last name.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getLinks(),N/A,java.util.List<DefinitionsLinkdescription>
com.paypal.api.payments.BankAccount,Default Constructor,getMerchantId(),A unique identifier of the merchant for which this bank account has been stored for.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getPayerId(),[DEPRECATED] Use external_customer_id instead.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getRoutingNumber(),"Routing transit number (aka Bank Code) of the bank (typically for domestic use only - for international use, IBAN includes bank code).",java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getState(),State of this funding instrument.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getUpdateTime(),Time the resource was last updated.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,getValidUntil(),Date/Time until this resource can be used to fund a payment.,java.lang.String
com.paypal.api.payments.BankAccount,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.BankAccount,Default Constructor,setAccountName(java.lang.String accountName),A customer designated name.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setAccountNumber(java.lang.String accountNumber),Account number in either IBAN (max length 34) or BBAN (max length 17) format.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setAccountNumberType(java.lang.String accountNumberType),Type of the bank account number (International or Basic Bank Account Number).,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setAccountType(java.lang.String accountType),Type of the bank account.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setAuthCaptureTimestamp(java.lang.String authCaptureTimestamp),Time at which the authorization (or check) was captured.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setAuthType(java.lang.String authType),"How the check was obtained from the customer, if check was the source of the information provided.",BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setBankName(java.lang.String bankName),Name of the bank.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setBillingAddress(Address billingAddress),Billing address.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setBirthDate(java.lang.String birthDate),Birth date of the bank account holder.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setCheckType(java.lang.String checkType),Type of the check when this information was obtained through a check by the facilitator or merchant.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setConfirmationStatus(java.lang.String confirmationStatus),Confirmation status of a bank account.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setCountryCode(java.lang.String countryCode),2 letter country code of the Bank.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setCreateTime(java.lang.String createTime),Time the resource was created.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),A unique identifier of the customer to whom this bank account belongs to.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setFirstName(java.lang.String firstName),Account holder's first name.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setId(java.lang.String id),ID of the bank account being saved for later use.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setLastName(java.lang.String lastName),Account holder's last name.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setLinks(java.util.List<DefinitionsLinkdescription> links),N/A,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setMerchantId(java.lang.String merchantId),A unique identifier of the merchant for which this bank account has been stored for.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setPayerId(java.lang.String payerId),[DEPRECATED] Use external_customer_id instead.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setRoutingNumber(java.lang.String routingNumber),"Routing transit number (aka Bank Code) of the bank (typically for domestic use only - for international use, IBAN includes bank code).",BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setState(java.lang.String state),State of this funding instrument.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setUpdateTime(java.lang.String updateTime),Time the resource was last updated.,BankAccount
com.paypal.api.payments.BankAccount,Default Constructor,setValidUntil(java.lang.String validUntil),Date/Time until this resource can be used to fund a payment.,BankAccount
com.paypal.api.payments.BankToken,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.BankToken,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.BankToken,Default Constructor,getBankId(),ID of a previously saved Bank resource using /vault/bank API.,java.lang.String
com.paypal.api.payments.BankToken,Default Constructor,getExternalCustomerId(),The unique identifier of the payer used when saving this bank using /vault/bank API.,java.lang.String
com.paypal.api.payments.BankToken,Default Constructor,getMandateReferenceNumber(),Identifier of the direct debit mandate to validate.,java.lang.String
com.paypal.api.payments.BankToken,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.BankToken,Default Constructor,setBankId(java.lang.String bankId),ID of a previously saved Bank resource using /vault/bank API.,BankToken
com.paypal.api.payments.BankToken,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),The unique identifier of the payer used when saving this bank using /vault/bank API.,BankToken
com.paypal.api.payments.BankToken,Default Constructor,setMandateReferenceNumber(java.lang.String mandateReferenceNumber),Identifier of the direct debit mandate to validate.,BankToken
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",decodeBase64(byte[] base64Data),Decodes Base64 data into octets,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",decodeBase64(java.lang.String base64String),Decodes a Base64 String into octets,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",decodeInteger(byte[] pArray),Decodes a byte64-encoded integer according to crypto standards such as W3C's XML-Signature,static java.math.BigInteger
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeBase64(byte[] binaryData),Encodes binary data using the base64 algorithm but does not chunk the output.,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ","encodeBase64(byte[] binaryData,
            boolean isChunked)","Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.",static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ","encodeBase64(byte[] binaryData,
            boolean isChunked,
            boolean urlSafe)","Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.",static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ","encodeBase64(byte[] binaryData,
            boolean isChunked,
            boolean urlSafe,
            int maxResultSize)","Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.",static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeBase64Chunked(byte[] binaryData),Encodes binary data using the base64 algorithm and chunks the encoded output into 76 character blocks,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeBase64String(byte[] binaryData),Encodes binary data using the base64 algorithm but does not chunk the output.,static java.lang.String
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeBase64URLSafe(byte[] binaryData),Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output.,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeBase64URLSafeString(byte[] binaryData),Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output.,static java.lang.String
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",encodeInteger(java.math.BigInteger bigInt),Encodes to a byte64-encoded integer according to crypto standards such as W3C's XML-Signature,static byte[]
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isArrayByteBase64(byte[] arrayOctet),"Deprecated. 
1.5 Use isBase64(byte[]), will be removed in 2.0.
",static boolean
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isBase64(byte octet),Returns whether or not the octet is in the base 64 alphabet.,static boolean
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isBase64(byte[] arrayOctet),Tests a given byte array to see if it contains only valid characters within the Base64 alphabet.,static boolean
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isBase64(java.lang.String base64),Tests a given String to see if it contains only valid characters within the Base64 alphabet.,static boolean
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isInAlphabet(byte octet),Returns whether or not the octet is in the Base32 alphabet.,protected boolean
com.paypal.base.codec.binary.Base64,"Provides Base64 encoding and decoding as defined by RFC 2045.
 
 
 This class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose
 Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.
 

 The class can be parameterized in the following manner with various constructors:
 
URL-safe mode: Default off.
Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of
 4 in the encoded data.
 Line separator: Default is CRLF (""\r\n"")


 Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode
 character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).
 

 This class is not thread-safe. Each thread should use its own instance.
 ",isUrlSafe(),Returns our current encode mode.,boolean
com.paypal.api.payments.BaseAddress,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.BaseAddress,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.BaseAddress,Default Constructor,getCity(),City name.,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getCountryCode(),2 letter country code.,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getLine1(),Line 1 of the Address (eg.,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getLine2(),Optional line 2 of the Address (eg.,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getNormalizationStatus(),"BaseAddress normalization status, returned only for payers from Brazil.",java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getPostalCode(),Zip code or equivalent is usually required for countries that have them.,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getState(),"2 letter code for US states, and the equivalent for other countries.",java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,getStatus(),BaseAddress status,java.lang.String
com.paypal.api.payments.BaseAddress,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.BaseAddress,Default Constructor,setCity(java.lang.String city),City name.,BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setCountryCode(java.lang.String countryCode),2 letter country code.,BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setLine1(java.lang.String line1),Line 1 of the Address (eg.,BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setLine2(java.lang.String line2),Optional line 2 of the Address (eg.,BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setNormalizationStatus(java.lang.String normalizationStatus),"BaseAddress normalization status, returned only for payers from Brazil.",BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setPostalCode(java.lang.String postalCode),Zip code or equivalent is usually required for countries that have them.,BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setState(java.lang.String state),"2 letter code for US states, and the equivalent for other countries.",BaseAddress
com.paypal.api.payments.BaseAddress,Default Constructor,setStatus(java.lang.String status),BaseAddress status,BaseAddress
com.paypal.base.exception.BaseException,BaseException for SDK,N/A,N/A,N/A
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",containsAlphabetOrPad(byte[] arrayOctet),Tests a given byte array to see if it contains any characters within the alphabet or PAD.,protected boolean
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",decode(byte[] pArray),Decodes a byte[] containing characters in the Base-N alphabet.,byte[]
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",decode(java.lang.Object pObject),Decodes an Object using the Base-N algorithm.,java.lang.Object
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",decode(java.lang.String pArray),Decodes a String containing characters in the Base-N alphabet.,byte[]
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",encode(byte[] pArray),"Encodes a byte[] containing binary data, into a byte[] containing characters in the alphabet.",byte[]
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",encode(java.lang.Object pObject),Encodes an Object using the Base-N algorithm.,java.lang.Object
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",encodeAsString(byte[] pArray),"Encodes a byte[] containing binary data, into a String containing characters in the appropriate alphabet.",java.lang.String
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",encodeToString(byte[] pArray),"Encodes a byte[] containing binary data, into a String containing characters in the Base-N alphabet.",java.lang.String
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",ensureBufferSize(int size),Ensure that the buffer has room for size bytes,protected void
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",getDefaultBufferSize(),Get the default buffer size.,protected int
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",getEncodedLength(byte[] pArray),Calculates the amount of space needed to encode the supplied array.,long
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",isInAlphabet(byte value),Returns whether or not the octet is in the current alphabet.,protected abstract boolean
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ","isInAlphabet(byte[] arrayOctet,
            boolean allowWSPad)",Tests a given byte array to see if it contains only valid characters within the alphabet.,boolean
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",isInAlphabet(java.lang.String basen),Tests a given String to see if it contains only valid characters within the alphabet.,boolean
com.paypal.base.codec.binary.BaseNCodec,"Abstract superclass for Base-N encoders and decoders.

 
 This class is not thread-safe.
 Each thread should use its own instance.
 ",isWhiteSpace(byte byteToCheck),Checks if a byte value is whitespace or not.,protected static boolean
com.paypal.api.payments.Billing,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Billing,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Billing,Default Constructor,getBillingAgreementId(),Identifier of the instrument in PayPal Wallet,java.lang.String
com.paypal.api.payments.Billing,Default Constructor,getSelectedInstallmentOption(),Selected installment option for issuer based installments (BR and MX).,InstallmentOption
com.paypal.api.payments.Billing,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Billing,Default Constructor,setBillingAgreementId(java.lang.String billingAgreementId),Identifier of the instrument in PayPal Wallet,Billing
com.paypal.api.payments.Billing,Default Constructor,setSelectedInstallmentOption(InstallmentOption selectedInstallmentOption),Selected installment option for issuer based installments (BR and MX).,Billing
com.paypal.api.payments.BillingAgreementToken,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.BillingAgreementToken,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.BillingAgreementToken,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.BillingInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.BillingInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.BillingInfo,Default Constructor,getAdditionalInfo(),"Additional information, such as business hours.",java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getAddress(),The invoice recipient address.,InvoiceAddress
com.paypal.api.payments.BillingInfo,Default Constructor,getBusinessName(),The invoice recipient company business name.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getEmail(),The invoice recipient email address.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getFirstName(),The invoice recipient first name.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getLanguage(),The language in which the email was sent to the payer.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getLastName(),The invoice recipient last name.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getNotificationChannel(),Preferred notification channel of the payer.,java.lang.String
com.paypal.api.payments.BillingInfo,Default Constructor,getPhone(),Mobile Phone number of the recipient to which SMS will be sent if notification_channel is SMS.,Phone
com.paypal.api.payments.BillingInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.BillingInfo,Default Constructor,setAdditionalInfo(java.lang.String additionalInfo),"Additional information, such as business hours.",BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setAddress(InvoiceAddress address),The invoice recipient address.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setBusinessName(java.lang.String businessName),The invoice recipient company business name.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setEmail(java.lang.String email),The invoice recipient email address.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setFirstName(java.lang.String firstName),The invoice recipient first name.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setLanguage(java.lang.String language),The language in which the email was sent to the payer.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setLastName(java.lang.String lastName),The invoice recipient last name.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setNotificationChannel(java.lang.String notificationChannel),Preferred notification channel of the payer.,BillingInfo
com.paypal.api.payments.BillingInfo,Default Constructor,setPhone(Phone phone),Mobile Phone number of the recipient to which SMS will be sent if notification_channel is SMS.,BillingInfo
com.paypal.base.codec.BinaryDecoder,Defines common decoding methods for byte array decoders.,decode(byte[] source),Decodes a byte array and returns the results as a byte array.,byte[]
com.paypal.base.codec.BinaryEncoder,Defines common encoding methods for byte array encoders.,encode(byte[] source),"Encodes a byte array and return the encoded data
 as a byte array.",byte[]
com.paypal.api.payments.CancelNotification,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CancelNotification,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CancelNotification,Default Constructor,getCcEmails(),Applicable for invoices created with Cc emails.,java.util.List<java.lang.String>
com.paypal.api.payments.CancelNotification,Default Constructor,getNote(),Note to the payer.,java.lang.String
com.paypal.api.payments.CancelNotification,Default Constructor,getSendToMerchant(),Indicates whether to send a copy of the notification to the merchant.,java.lang.Boolean
com.paypal.api.payments.CancelNotification,Default Constructor,getSendToPayer(),Indicates whether to send a copy of the notification to the payer.,java.lang.Boolean
com.paypal.api.payments.CancelNotification,Default Constructor,getSubject(),Subject of the notification.,java.lang.String
com.paypal.api.payments.CancelNotification,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CancelNotification,Default Constructor,setCcEmails(java.util.List<java.lang.String> ccEmails),Applicable for invoices created with Cc emails.,CancelNotification
com.paypal.api.payments.CancelNotification,Default Constructor,setNote(java.lang.String note),Note to the payer.,CancelNotification
com.paypal.api.payments.CancelNotification,Default Constructor,setSendToMerchant(java.lang.Boolean sendToMerchant),Indicates whether to send a copy of the notification to the merchant.,CancelNotification
com.paypal.api.payments.CancelNotification,Default Constructor,setSendToPayer(java.lang.Boolean sendToPayer),Indicates whether to send a copy of the notification to the payer.,CancelNotification
com.paypal.api.payments.CancelNotification,Default Constructor,setSubject(java.lang.String subject),Subject of the notification.,CancelNotification
com.paypal.api.payments.Capture,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Capture,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Capture,Default Constructor,"get(APIContext apiContext,
   java.lang.String captureId)","Shows details for a captured payment, by ID.",static Capture
com.paypal.api.payments.Capture,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String captureId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Capture
com.paypal.api.payments.Capture,Default Constructor,getAmount(),The amount to capture.,Amount
com.paypal.api.payments.Capture,Default Constructor,getCreateTime(),"The date and time of capture, as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).",java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getId(),The ID of the capture transaction.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getInvoiceNumber(),The invoice number to track this payment.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getIsFinalCapture(),Indicates whether to release all remaining funds that the authorization holds in the funding instrument.,java.lang.Boolean
com.paypal.api.payments.Capture,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Capture,Default Constructor,getParentPayment(),The ID of the payment on which this transaction is based.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getReasonCode(),The reason code that describes why the transaction state is pending or reversed.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getState(),The state of the capture.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,getTransactionFee(),The transaction fee for this payment.,Currency
com.paypal.api.payments.Capture,Default Constructor,getUpdateTime(),The date and time when the resource was last updated.,java.lang.String
com.paypal.api.payments.Capture,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Capture,Default Constructor,"refund(APIContext apiContext,
      Refund refund)","Deprecated. 
Please use refund(APIContext, RefundRequest) instead
 Refunds a captured payment, by ID. Include an `amount` object in the JSON request body.
",Refund
com.paypal.api.payments.Capture,Default Constructor,"refund(APIContext apiContext,
      RefundRequest refundRequest)","Refunds a captured payment, by ID.",DetailedRefund
com.paypal.api.payments.Capture,Default Constructor,"refund(java.lang.String accessToken,
      Refund refund)","Deprecated. 
Please use refund(APIContext, Refund) instead.
",Refund
com.paypal.api.payments.Capture,Default Constructor,setAmount(Amount amount),The amount to capture.,Capture
com.paypal.api.payments.Capture,Default Constructor,setCreateTime(java.lang.String createTime),"The date and time of capture, as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).",Capture
com.paypal.api.payments.Capture,Default Constructor,setId(java.lang.String id),The ID of the capture transaction.,Capture
com.paypal.api.payments.Capture,Default Constructor,setInvoiceNumber(java.lang.String invoiceNumber),The invoice number to track this payment.,Capture
com.paypal.api.payments.Capture,Default Constructor,setIsFinalCapture(java.lang.Boolean isFinalCapture),Indicates whether to release all remaining funds that the authorization holds in the funding instrument.,Capture
com.paypal.api.payments.Capture,Default Constructor,setLinks(java.util.List<Links> links),N/A,Capture
com.paypal.api.payments.Capture,Default Constructor,setParentPayment(java.lang.String parentPayment),The ID of the payment on which this transaction is based.,Capture
com.paypal.api.payments.Capture,Default Constructor,setReasonCode(java.lang.String reasonCode),The reason code that describes why the transaction state is pending or reversed.,Capture
com.paypal.api.payments.Capture,Default Constructor,setState(java.lang.String state),The state of the capture.,Capture
com.paypal.api.payments.Capture,Default Constructor,setTransactionFee(Currency transactionFee),The transaction fee for this payment.,Capture
com.paypal.api.payments.Capture,Default Constructor,setUpdateTime(java.lang.String updateTime),The date and time when the resource was last updated.,Capture
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,getAuthStatus(),Authorization status from 3ds provider.,java.lang.String
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,getCavv(),Cardholder Authentication Verification Value (used by VISA).,java.lang.String
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,getEci(),Numeric flag to indicate how the payment should be processed in relationship to 3d-secure.,java.lang.String
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,getMpiVendor(),"Name of the actual 3ds vendor who processed the 3ds request, e.g.",java.lang.String
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,getXid(),Transaction identifier from authenticator.,java.lang.String
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,setAuthStatus(java.lang.String authStatus),Authorization status from 3ds provider.,Card3dSecureInfo
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,setCavv(java.lang.String cavv),Cardholder Authentication Verification Value (used by VISA).,Card3dSecureInfo
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,setEci(java.lang.String eci),Numeric flag to indicate how the payment should be processed in relationship to 3d-secure.,Card3dSecureInfo
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,setMpiVendor(java.lang.String mpiVendor),"Name of the actual 3ds vendor who processed the 3ds request, e.g.",Card3dSecureInfo
com.paypal.api.payments.Card3dSecureInfo,Default Constructor,setXid(java.lang.String xid),Transaction identifier from authenticator.,Card3dSecureInfo
com.paypal.api.payments.CarrierAccount,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CarrierAccount,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CarrierAccount,Default Constructor,getCountryCode(),The ISO 3166-1 alpha-2 country code where the phone number is registered.,CountryCode
com.paypal.api.payments.CarrierAccount,Default Constructor,getExternalCustomerId(),"The ID of the customer, as created by the merchant.",java.lang.String
com.paypal.api.payments.CarrierAccount,Default Constructor,getId(),The ID of the carrier account of the payer.,java.lang.String
com.paypal.api.payments.CarrierAccount,Default Constructor,getPhoneNumber(),"The phone number of the payer, in E.164 format.",java.lang.String
com.paypal.api.payments.CarrierAccount,Default Constructor,getPhoneSource(),The method used to obtain the phone number.,java.lang.String
com.paypal.api.payments.CarrierAccount,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CarrierAccount,Default Constructor,setCountryCode(CountryCode countryCode),The ISO 3166-1 alpha-2 country code where the phone number is registered.,CarrierAccount
com.paypal.api.payments.CarrierAccount,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),"The ID of the customer, as created by the merchant.",CarrierAccount
com.paypal.api.payments.CarrierAccount,Default Constructor,setId(java.lang.String id),The ID of the carrier account of the payer.,CarrierAccount
com.paypal.api.payments.CarrierAccount,Default Constructor,setPhoneNumber(java.lang.String phoneNumber),"The phone number of the payer, in E.164 format.",CarrierAccount
com.paypal.api.payments.CarrierAccount,Default Constructor,setPhoneSource(java.lang.String phoneSource),The method used to obtain the phone number.,CarrierAccount
com.paypal.api.payments.CarrierAccountToken,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CarrierAccountToken,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CarrierAccountToken,Default Constructor,getCarrierAccountId(),ID of a previously saved carrier account resource.,java.lang.String
com.paypal.api.payments.CarrierAccountToken,Default Constructor,getExternalCustomerId(),The unique identifier of the payer used when saving this carrier account instrument.,java.lang.String
com.paypal.api.payments.CarrierAccountToken,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CarrierAccountToken,Default Constructor,setCarrierAccountId(java.lang.String carrierAccountId),ID of a previously saved carrier account resource.,CarrierAccountToken
com.paypal.api.payments.CarrierAccountToken,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),The unique identifier of the payer used when saving this carrier account instrument.,CarrierAccountToken
com.paypal.api.payments.CartBase,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CartBase,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CartBase,Default Constructor,getAmount(),Amount being collected.,Amount
com.paypal.api.payments.CartBase,Default Constructor,getCustom(),free-form field for the use of clients,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getDescription(),Description of what is being paid for.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getExternalFunding(),List of external funding being applied to the purchase unit.,java.util.List<ExternalFunding>
com.paypal.api.payments.CartBase,Default Constructor,getInvoiceNumber(),invoice number to track this payment,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getItemList(),List of items being paid for.,ItemList
com.paypal.api.payments.CartBase,Default Constructor,getNoteToPayee(),Note to the recipient of the funds in this transaction.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getNotifyUrl(),URL to send payment notifications,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getOrderUrl(),Url on merchant site pertaining to this payment.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getPayee(),Recipient of the funds in this transaction.,Payee
com.paypal.api.payments.CartBase,Default Constructor,getPaymentOptions(),Payment options requested for this purchase unit,PaymentOptions
com.paypal.api.payments.CartBase,Default Constructor,getReferenceId(),Merchant identifier to the purchase unit.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getSoftDescriptor(),Soft descriptor used when charging this funding source.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,getSoftDescriptorCity(),Soft descriptor city used when charging this funding source.,java.lang.String
com.paypal.api.payments.CartBase,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CartBase,Default Constructor,setAmount(Amount amount),Amount being collected.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setCustom(java.lang.String custom),free-form field for the use of clients,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setDescription(java.lang.String description),Description of what is being paid for.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setExternalFunding(java.util.List<ExternalFunding> externalFunding),List of external funding being applied to the purchase unit.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setInvoiceNumber(java.lang.String invoiceNumber),invoice number to track this payment,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setItemList(ItemList itemList),List of items being paid for.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setNoteToPayee(java.lang.String noteToPayee),Note to the recipient of the funds in this transaction.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setNotifyUrl(java.lang.String notifyUrl),URL to send payment notifications,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setOrderUrl(java.lang.String orderUrl),Url on merchant site pertaining to this payment.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setPayee(Payee payee),Recipient of the funds in this transaction.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setPaymentOptions(PaymentOptions paymentOptions),Payment options requested for this purchase unit,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setReferenceId(java.lang.String referenceId),Merchant identifier to the purchase unit.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setSoftDescriptor(java.lang.String softDescriptor),Soft descriptor used when charging this funding source.,CartBase
com.paypal.api.payments.CartBase,Default Constructor,setSoftDescriptorCity(java.lang.String softDescriptorCity),Soft descriptor city used when charging this funding source.,CartBase
com.paypal.base.codec.CharEncoding,"Character encoding names required of every implementation of the Java platform.
 
 From the Java documentation Standard
 charsets:
 
Every implementation of the Java platform is required to support the following character encodings. Consult the
 release documentation for your implementation to see if any other encodings are supported. Consult the release
 documentation for your implementation to see if any other encodings are supported. 


US-ASCII
 Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.
ISO-8859-1
 ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.
UTF-8
 Eight-bit Unicode Transformation Format.
UTF-16BE
 Sixteen-bit Unicode Transformation Format, big-endian byte order.
UTF-16LE
 Sixteen-bit Unicode Transformation Format, little-endian byte order.
UTF-16
 Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order
 accepted on input, big-endian used on output.)

 
 This perhaps would best belong in the [lang] project. Even if a similar interface is defined in [lang], it is not
 foreseen that [codec] would be made to depend on [lang].",N/A,N/A,N/A
com.paypal.api.payments.ChargeModels,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ChargeModels,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ChargeModels,Default Constructor,getAmount(),Specific amount for this charge model.,Currency
com.paypal.api.payments.ChargeModels,Default Constructor,getId(),Identifier of the charge model.,java.lang.String
com.paypal.api.payments.ChargeModels,Default Constructor,getType(),Type of charge model.,java.lang.String
com.paypal.api.payments.ChargeModels,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ChargeModels,Default Constructor,setAmount(Currency amount),Specific amount for this charge model.,ChargeModels
com.paypal.api.payments.ChargeModels,Default Constructor,setId(java.lang.String id),Identifier of the charge model.,ChargeModels
com.paypal.api.payments.ChargeModels,Default Constructor,setType(java.lang.String type),Type of charge model.,ChargeModels
com.paypal.base.exception.ClientActionRequiredException,"ClientActionRequiredException, encapsulates instances where client has to
 take actions based or errors in API call.",toString(),N/A,java.lang.String
com.paypal.base.ClientCredentials,ClientCredentials holds Client ID and Client Secret,getClientID(),N/A,java.lang.String
com.paypal.base.ClientCredentials,ClientCredentials holds Client ID and Client Secret,getClientSecret(),N/A,java.lang.String
com.paypal.base.ClientCredentials,ClientCredentials holds Client ID and Client Secret,setClientID(java.lang.String clientID),N/A,void
com.paypal.base.ClientCredentials,ClientCredentials holds Client ID and Client Secret,setClientSecret(java.lang.String clientSecret),N/A,void
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",combineDefaultProperties(java.util.Properties receivedProperties),Combines some Properties with Default Properties,static java.util.Properties
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getConfigurationMap(),Constructs a Map object from the underlying Properties.,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getDefaultProperties(),Returns the Default Properties of System Configuration,static java.util.Properties
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getDefaultSDKMap(),Returns a Map view of Default Properties,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getInstance(),Singleton accessor method,static ConfigManager
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getNumOfAcct(),"Deprecated. 
This code is not used anymore. This was used for older sdk_config.properties parsing.
",java.util.Set<java.lang.String>
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getValue(java.lang.String key),"Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
",java.lang.String
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",getValuesByCategory(java.lang.String category),"Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
","java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)","getValueWithDefault(java.lang.String key,
                   java.lang.String defaultValue)","Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
",java.lang.String
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",isPropertyLoaded(),"Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
",boolean
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",load(java.io.InputStream is),"Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
",void
com.paypal.base.ConfigManager,"ConfigManager loads configuration from 'sdk_config.properties'
 file found in the classpath. There are certain default parameters that the
 system chooses to use if not seen a part of the configuration. They are
 enumerated below with the defaults is parenthesis
 
 http.ConnectionTimeOut(5000 ms), http.Retry(2), http.ReadTimeOut(30000 ms),
 http.MaxConnections(100), http.IPAddress(127.0.0.1),
 http.GoogleAppEngine(false)",load(java.util.Properties properties),"Deprecated. 
This code was used for older integrations. Not valid anymore. To be removed in the next major release.
",void
com.paypal.base.ConnectionManager,"ConnectionManager acts as a interface to retrieve HttpConnection
 objects used by API service",configureCustomSslContext(javax.net.ssl.SSLContext sslContext),N/A,void
com.paypal.base.ConnectionManager,"ConnectionManager acts as a interface to retrieve HttpConnection
 objects used by API service",getConnection(),N/A,HttpConnection
com.paypal.base.ConnectionManager,"ConnectionManager acts as a interface to retrieve HttpConnection
 objects used by API service",getConnection(HttpConfiguration httpConfig),Overloaded method used factory to load GoogleAppEngineSpecific connection,HttpConnection
com.paypal.base.ConnectionManager,"ConnectionManager acts as a interface to retrieve HttpConnection
 objects used by API service",getInstance(),Singleton accessor method,static ConnectionManager
com.paypal.base.Constants,N/A,N/A,N/A,N/A
com.paypal.api.payments.Cost,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Cost,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Cost,Default Constructor,getAmount(),"The cost, as an amount.",Currency
com.paypal.api.payments.Cost,Default Constructor,getPercent(),Cost in percent.,float
com.paypal.api.payments.Cost,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Cost,Default Constructor,setAmount(Currency amount),"The cost, as an amount.",Cost
com.paypal.api.payments.Cost,Default Constructor,setPercent(float percent),Cost in percent.,Cost
com.paypal.api.payments.CountryCode,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CountryCode,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CountryCode,Default Constructor,getCountryCode(),ISO country code based on 2-character IS0-3166-1 codes.,java.lang.String
com.paypal.api.payments.CountryCode,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CountryCode,Default Constructor,setCountryCode(java.lang.String countryCode),ISO country code based on 2-character IS0-3166-1 codes.,CountryCode
com.paypal.api.openidconnect.CreateFromAuthorizationCodeParameters,Set the code,getContainerMap(),N/A,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.api.openidconnect.CreateFromAuthorizationCodeParameters,Set the code,setCode(java.lang.String code),Set the code,void
com.paypal.api.openidconnect.CreateFromAuthorizationCodeParameters,Set the code,setGrantType(java.lang.String grantType),Set the Grant Type,void
com.paypal.api.openidconnect.CreateFromAuthorizationCodeParameters,Set the code,setRedirectURI(java.lang.String redirectURI),Set the redirect URI,void
com.paypal.api.openidconnect.CreateFromRefreshTokenParameters,Set the Grant Type,getContainerMap(),N/A,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.api.openidconnect.CreateFromRefreshTokenParameters,Set the Grant Type,setGrantType(java.lang.String grantType),Set the Grant Type,void
com.paypal.api.openidconnect.CreateFromRefreshTokenParameters,Set the Grant Type,setScope(java.lang.String scope),Set the Scope,void
com.paypal.api.payments.CreateProfileResponse,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CreateProfileResponse,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CreateProfileResponse,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Credit,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Credit,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Credit,Default Constructor,getId(),Unique identifier of credit resource.,java.lang.String
com.paypal.api.payments.Credit,Default Constructor,getType(),specifies type of credit,java.lang.String
com.paypal.api.payments.Credit,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Credit,Default Constructor,setId(java.lang.String id),Unique identifier of credit resource.,Credit
com.paypal.api.payments.Credit,Default Constructor,setType(java.lang.String type),specifies type of credit,Credit
com.paypal.api.payments.CreditCard,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CreditCard,Default Constructor,create(APIContext apiContext),Creates a new Credit Card Resource (aka Tokenize).,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,delete(APIContext apiContext),Delete the Credit Card resource for the given identifier.,void
com.paypal.api.payments.CreditCard,Default Constructor,delete(java.lang.String accessToken),"Deprecated. 
Please use delete(APIContext) instead.
",void
com.paypal.api.payments.CreditCard,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CreditCard,Default Constructor,"get(APIContext apiContext,
   java.lang.String creditCardId)",Obtain the Credit Card resource for the given identifier.,static CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String creditCardId)","Deprecated. 
Please use get(APIContext, String) instead.
",static CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,getBillingAddress(),Billing Address associated with this card.,Address
com.paypal.api.payments.CreditCard,Default Constructor,getCvv2(),"Deprecated. 
Please use getCvv2String() instead.
 Getter for cvv2
 Returns -1 if cvv2 is null.
 Not autogenerating using lombok as it includes logic to return -1 on null.
",int
com.paypal.api.payments.CreditCard,Default Constructor,getCvv2String(),Returns the cvv2,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getExpireMonth(),Expiration month with no leading zero.,int
com.paypal.api.payments.CreditCard,Default Constructor,getExpireYear(),4-digit expiration year.,int
com.paypal.api.payments.CreditCard,Default Constructor,getExternalCustomerId(),A unique identifier of the customer to whom this bank account belongs.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getFirstName(),Cardholder's first name.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getId(),ID of the credit card.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getLastName(),Cardholder's last name.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.CreditCard,Default Constructor,getNumber(),Credit card number.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getPayerId(),Payer ID,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getState(),State of the credit card funding instrument.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getType(),Credit card type.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,getValidUntil(),Funding instrument expiration date.,java.lang.String
com.paypal.api.payments.CreditCard,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CreditCard,Default Constructor,list(APIContext apiContext),Retrieves a list of Credit Card resources.,static CreditCardHistory
com.paypal.api.payments.CreditCard,Default Constructor,"list(APIContext apiContext,
    java.util.Map<java.lang.String,java.lang.String> containerMap)",Retrieves a list of Credit Card resources.,static CreditCardHistory
com.paypal.api.payments.CreditCard,Default Constructor,list(java.lang.String accessToken),"Deprecated. 
Please use list(APIContext, Map) instead.
",static CreditCardHistory
com.paypal.api.payments.CreditCard,Default Constructor,"list(java.lang.String accessToken,
    java.util.Map<java.lang.String,java.lang.String> containerMap)","Deprecated. 
Please use list(APIContext, Map) instead.
",static CreditCardHistory
com.paypal.api.payments.CreditCard,Default Constructor,setBillingAddress(Address billingAddress),Billing Address associated with this card.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setCvv2(java.lang.Integer cvv2),"Deprecated. 
The cvv2 needs to be a string, as any cvv2 starting with 0 is sent invalid to servers. Please use setCvv2(String) instead.
",CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setCvv2(java.lang.String cvv2),N/A,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setExpireMonth(int expireMonth),Expiration month with no leading zero.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setExpireYear(int expireYear),4-digit expiration year.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),A unique identifier of the customer to whom this bank account belongs.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setFirstName(java.lang.String firstName),Cardholder's first name.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setId(java.lang.String id),ID of the credit card.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setLastName(java.lang.String lastName),Cardholder's last name.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setLinks(java.util.List<Links> links),N/A,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setNumber(java.lang.String number),Credit card number.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setPayerId(java.lang.String payerId),Payer ID,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setState(java.lang.String state),State of the credit card funding instrument.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setType(java.lang.String type),Credit card type.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,setValidUntil(java.lang.String validUntil),Funding instrument expiration date.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,"update(APIContext apiContext,
      java.util.List<Patch> patchRequest)",Update information in a previously saved card.,CreditCard
com.paypal.api.payments.CreditCard,Default Constructor,"update(java.lang.String accessToken,
      java.util.List<Patch> patchRequest)","Deprecated. 
Please use update(APIContext, List) instead.
",CreditCard
com.paypal.api.payments.CreditCardHistory,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CreditCardHistory,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CreditCardHistory,Default Constructor,getItems(),A list of credit card resources,java.util.List<CreditCard>
com.paypal.api.payments.CreditCardHistory,Default Constructor,getLinks(),HATEOAS links related to this call.,java.util.List<Links>
com.paypal.api.payments.CreditCardHistory,Default Constructor,getTotalItems(),Total number of items.,int
com.paypal.api.payments.CreditCardHistory,Default Constructor,getTotalPages(),Total number of pages.,int
com.paypal.api.payments.CreditCardHistory,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CreditCardHistory,Default Constructor,setItems(java.util.List<CreditCard> items),A list of credit card resources,CreditCardHistory
com.paypal.api.payments.CreditCardHistory,Default Constructor,setLinks(java.util.List<Links> links),HATEOAS links related to this call.,CreditCardHistory
com.paypal.api.payments.CreditCardHistory,Default Constructor,setTotalItems(int totalItems),Total number of items.,CreditCardHistory
com.paypal.api.payments.CreditCardHistory,Default Constructor,setTotalPages(int totalPages),Total number of pages.,CreditCardHistory
com.paypal.api.payments.CreditCardToken,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CreditCardToken,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CreditCardToken,Default Constructor,getCreditCardId(),ID of credit card previously stored using `/vault/credit-card`.,java.lang.String
com.paypal.api.payments.CreditCardToken,Default Constructor,getExpireMonth(),Expiration month with no leading zero.,int
com.paypal.api.payments.CreditCardToken,Default Constructor,getExpireYear(),4-digit expiration year.,int
com.paypal.api.payments.CreditCardToken,Default Constructor,getLast4(),Last four digits of the stored credit card number.,java.lang.String
com.paypal.api.payments.CreditCardToken,Default Constructor,getPayerId(),A unique identifier that you can assign and track when storing a credit card or using a stored credit card.,java.lang.String
com.paypal.api.payments.CreditCardToken,Default Constructor,getType(),Credit card type.,java.lang.String
com.paypal.api.payments.CreditCardToken,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CreditCardToken,Default Constructor,setCreditCardId(java.lang.String creditCardId),ID of credit card previously stored using `/vault/credit-card`.,CreditCardToken
com.paypal.api.payments.CreditCardToken,Default Constructor,setExpireMonth(int expireMonth),Expiration month with no leading zero.,CreditCardToken
com.paypal.api.payments.CreditCardToken,Default Constructor,setExpireYear(int expireYear),4-digit expiration year.,CreditCardToken
com.paypal.api.payments.CreditCardToken,Default Constructor,setLast4(java.lang.String last4),Last four digits of the stored credit card number.,CreditCardToken
com.paypal.api.payments.CreditCardToken,Default Constructor,setPayerId(java.lang.String payerId),A unique identifier that you can assign and track when storing a credit card or using a stored credit card.,CreditCardToken
com.paypal.api.payments.CreditCardToken,Default Constructor,setType(java.lang.String type),Credit card type.,CreditCardToken
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getCartAmountImmutable(),Indicates whether the cart amount is editable after payer's acceptance on PayPal side,java.lang.Boolean
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getMonthlyPayment(),This is the estimated amount per month that the customer will need to pay including fees and interest.,Currency
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getPayerAcceptance(),Status on whether the customer ultimately was approved for and chose to make the payment using the approved installment credit.,java.lang.Boolean
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getTerm(),Length of financing terms in month,float
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getTotalCost(),This is the estimated total payment amount including interest and fees the user will pay during the lifetime of the loan.,Currency
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,getTotalInterest(),Estimated interest or fees amount the payer will have to pay during the lifetime of the loan.,Currency
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setCartAmountImmutable(java.lang.Boolean cartAmountImmutable),Indicates whether the cart amount is editable after payer's acceptance on PayPal side,CreditFinancingOffered
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setMonthlyPayment(Currency monthlyPayment),This is the estimated amount per month that the customer will need to pay including fees and interest.,CreditFinancingOffered
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setPayerAcceptance(java.lang.Boolean payerAcceptance),Status on whether the customer ultimately was approved for and chose to make the payment using the approved installment credit.,CreditFinancingOffered
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setTerm(float term),Length of financing terms in month,CreditFinancingOffered
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setTotalCost(Currency totalCost),This is the estimated total payment amount including interest and fees the user will pay during the lifetime of the loan.,CreditFinancingOffered
com.paypal.api.payments.CreditFinancingOffered,Default Constructor,setTotalInterest(Currency totalInterest),Estimated interest or fees amount the payer will have to pay during the lifetime of the loan.,CreditFinancingOffered
com.paypal.api.payments.Currency,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Currency,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Currency,Default Constructor,getCurrency(),3 letter currency code as defined by ISO 4217.,java.lang.String
com.paypal.api.payments.Currency,Default Constructor,getValue(),amount up to N digit after the decimals separator as defined in ISO 4217 for the appropriate currency code.,java.lang.String
com.paypal.api.payments.Currency,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Currency,Default Constructor,setCurrency(java.lang.String currency),3 letter currency code as defined by ISO 4217.,Currency
com.paypal.api.payments.Currency,Default Constructor,setValue(java.lang.String value),amount up to N digit after the decimals separator as defined in ISO 4217 for the appropriate currency code.,Currency
com.paypal.api.payments.CurrencyConversion,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CurrencyConversion,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CurrencyConversion,Default Constructor,getConversionDate(),Date of validity for the conversion rate.,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getConversionType(),Field indicating conversion type applied.,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getConversionTypeChangeable(),Allow Payer to change conversion type.,java.lang.Boolean
com.paypal.api.payments.CurrencyConversion,Default Constructor,getFromAmount(),"Amount participating in currency conversion, set to 1 as default",java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getFromCurrency(),3 letter currency code,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getLinks(),N/A,java.util.List<DefinitionsLinkdescription>
com.paypal.api.payments.CurrencyConversion,Default Constructor,getToAmount(),Amount resulting from currency conversion.,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getToCurrency(),3 letter currency code,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,getWebUrl(),Base URL to web applications endpoint,java.lang.String
com.paypal.api.payments.CurrencyConversion,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CurrencyConversion,Default Constructor,setConversionDate(java.lang.String conversionDate),Date of validity for the conversion rate.,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setConversionType(java.lang.String conversionType),Field indicating conversion type applied.,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setConversionTypeChangeable(java.lang.Boolean conversionTypeChangeable),Allow Payer to change conversion type.,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setFromAmount(java.lang.String fromAmount),"Amount participating in currency conversion, set to 1 as default",CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setFromCurrency(java.lang.String fromCurrency),3 letter currency code,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setLinks(java.util.List<DefinitionsLinkdescription> links),N/A,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setToAmount(java.lang.String toAmount),Amount resulting from currency conversion.,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setToCurrency(java.lang.String toCurrency),3 letter currency code,CurrencyConversion
com.paypal.api.payments.CurrencyConversion,Default Constructor,setWebUrl(java.lang.String webUrl),Base URL to web applications endpoint,CurrencyConversion
com.paypal.api.payments.CustomAmount,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.CustomAmount,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.CustomAmount,Default Constructor,getAmount(),The custom amount value.,Currency
com.paypal.api.payments.CustomAmount,Default Constructor,getLabel(),The custom amount label.,java.lang.String
com.paypal.api.payments.CustomAmount,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.CustomAmount,Default Constructor,setAmount(Currency amount),The custom amount value.,CustomAmount
com.paypal.api.payments.CustomAmount,Default Constructor,setLabel(java.lang.String label),The custom amount label.,CustomAmount
com.paypal.base.codec.Decoder,"Provides the highest level of abstraction for Decoders.
 This is the sister interface of Encoder.  All
 Decoders implement this common generic interface.
Allows a user to pass a generic Object to any Decoder 
 implementation in the codec package.
One of the two interfaces at the center of the codec package.",decode(java.lang.Object source),"Decodes an ""encoded"" Object and returns a ""decoded""
 Object.",java.lang.Object
com.paypal.base.codec.DecoderException,"Thrown when there is a failure condition during the decoding process. This exception is thrown when a Decoder
 encounters a decoding specific exception such as invalid data, or characters outside of the expected range.",N/A,N/A,N/A
com.paypal.base.DefaultHttpConnection,Wrapper class used for HttpsURLConnection,createAndconfigureHttpConnection(HttpConfiguration clientConfiguration),create and configure HttpsURLConnection object,void
com.paypal.base.DefaultHttpConnection,Wrapper class used for HttpsURLConnection,"setupClientSSL(java.lang.String certPath,
              java.lang.String certKey)",Set ssl parameters for client authentication,void
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getEncType(),The media type in which to submit data along with the request,java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getHref(),"a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getMediaType(),media type (as defined by RFC 2046) describing the link target,java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getMethod(),method for requesting the target of the link (e.g.,java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getRel(),relation to the target resource of the link,java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getSchema(),Schema describing the data to submit along with the request,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getTargetSchema(),JSON Schema describing the link target,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,getTitle(),a title for the link,java.lang.String
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setEncType(java.lang.String encType),The media type in which to submit data along with the request,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setHref(java.lang.String href),"a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setMediaType(java.lang.String mediaType),media type (as defined by RFC 2046) describing the link target,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setMethod(java.lang.String method),method for requesting the target of the link (e.g.,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setRel(java.lang.String rel),relation to the target resource of the link,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setSchema(DefinitionsLinkdescription schema),Schema describing the data to submit along with the request,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setTargetSchema(DefinitionsLinkdescription targetSchema),JSON Schema describing the link target,DefinitionsLinkdescription
com.paypal.api.payments.DefinitionsLinkdescription,Default Constructor,setTitle(java.lang.String title),a title for the link,DefinitionsLinkdescription
com.paypal.api.payments.DetailedRefund,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.DetailedRefund,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.DetailedRefund,Default Constructor,getCustom(),free-form field for the use of clients,java.lang.String
com.paypal.api.payments.DetailedRefund,Default Constructor,getRefundFromReceivedAmount(),"Amount subtracted from PayPal balance of the original recipient of payment, to make this refund.",Currency
com.paypal.api.payments.DetailedRefund,Default Constructor,getRefundFromTransactionFee(),Transaction fee refunded to original recipient of payment.,Currency
com.paypal.api.payments.DetailedRefund,Default Constructor,getRefundToExternalFunding(),List of external funding that were refunded by the Refund call.,java.util.List<ExternalFunding>
com.paypal.api.payments.DetailedRefund,Default Constructor,getRefundToPayer(),"Amount refunded to payer of the original transaction, in the current Refund call",Currency
com.paypal.api.payments.DetailedRefund,Default Constructor,getTotalRefundedAmount(),Total amount refunded so far from the original purchase.,Currency
com.paypal.api.payments.DetailedRefund,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.DetailedRefund,Default Constructor,setCustom(java.lang.String custom),free-form field for the use of clients,DetailedRefund
com.paypal.api.payments.DetailedRefund,Default Constructor,setRefundFromReceivedAmount(Currency refundFromReceivedAmount),"Amount subtracted from PayPal balance of the original recipient of payment, to make this refund.",DetailedRefund
com.paypal.api.payments.DetailedRefund,Default Constructor,setRefundFromTransactionFee(Currency refundFromTransactionFee),Transaction fee refunded to original recipient of payment.,DetailedRefund
com.paypal.api.payments.DetailedRefund,Default Constructor,setRefundToExternalFunding(java.util.List<ExternalFunding> refundToExternalFunding),List of external funding that were refunded by the Refund call.,DetailedRefund
com.paypal.api.payments.DetailedRefund,Default Constructor,setRefundToPayer(Currency refundToPayer),"Amount refunded to payer of the original transaction, in the current Refund call",DetailedRefund
com.paypal.api.payments.DetailedRefund,Default Constructor,setTotalRefundedAmount(Currency totalRefundedAmount),Total amount refunded so far from the original purchase.,DetailedRefund
com.paypal.api.payments.Details,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Details,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Details,Default Constructor,getFee(),Fee charged by PayPal.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getGiftWrap(),Amount being charged as gift wrap fee.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getHandlingFee(),Amount being charged for the handling fee.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getInsurance(),Amount being charged for the insurance fee.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getShipping(),Amount charged for shipping.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getShippingDiscount(),Amount being discounted for the shipping fee.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getSubtotal(),Amount of the subtotal of the items.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,getTax(),Amount charged for tax.,java.lang.String
com.paypal.api.payments.Details,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Details,Default Constructor,setFee(java.lang.String fee),Fee charged by PayPal.,Details
com.paypal.api.payments.Details,Default Constructor,setGiftWrap(java.lang.String giftWrap),Amount being charged as gift wrap fee.,Details
com.paypal.api.payments.Details,Default Constructor,setHandlingFee(java.lang.String handlingFee),Amount being charged for the handling fee.,Details
com.paypal.api.payments.Details,Default Constructor,setInsurance(java.lang.String insurance),Amount being charged for the insurance fee.,Details
com.paypal.api.payments.Details,Default Constructor,setShipping(java.lang.String shipping),Amount charged for shipping.,Details
com.paypal.api.payments.Details,Default Constructor,setShippingDiscount(java.lang.String shippingDiscount),Amount being discounted for the shipping fee.,Details
com.paypal.api.payments.Details,Default Constructor,setSubtotal(java.lang.String subtotal),Amount of the subtotal of the items.,Details
com.paypal.api.payments.Details,Default Constructor,setTax(java.lang.String tax),Amount charged for tax.,Details
com.paypal.base.codec.Encoder,"Provides the highest level of abstraction for Encoders.
 This is the sister interface of Decoder.  Every implementation of
 Encoder provides this common generic interface which allows a user to pass a 
 generic Object to any Encoder implementation in the codec package.",encode(java.lang.Object source),"Encodes an ""Object"" and returns the encoded content 
 as an Object.",java.lang.Object
com.paypal.base.codec.EncoderException,"Thrown when there is a failure condition during the encoding process. This exception is thrown when an
 Encoder encounters a encoding specific exception such as invalid data, inability to calculate a checksum,
 characters outside of the expected range.",N/A,N/A,N/A
com.paypal.api.openidconnect.Error,Default Constructor,getError(),Getter for error,java.lang.String
com.paypal.api.openidconnect.Error,Default Constructor,getErrorDescription(),Getter for errorDescription,java.lang.String
com.paypal.api.openidconnect.Error,Default Constructor,getErrorUri(),Getter for errorUri,java.lang.String
com.paypal.api.openidconnect.Error,Default Constructor,setError(java.lang.String error),Setter for error,void
com.paypal.api.openidconnect.Error,Default Constructor,setErrorDescription(java.lang.String errorDescription),Setter for errorDescription,void
com.paypal.api.openidconnect.Error,Default Constructor,setErrorUri(java.lang.String errorUri),Setter for errorUri,void
com.paypal.api.payments.Error,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Error,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Error,Default Constructor,getCode(),"Deprecated. 
This property is not available publicly
 PayPal internal error code.
",java.lang.String
com.paypal.api.payments.Error,Default Constructor,getDebugId(),PayPal internal identifier used for correlation purposes.,java.lang.String
com.paypal.api.payments.Error,Default Constructor,getDetails(),Additional details of the error,java.util.List<ErrorDetails>
com.paypal.api.payments.Error,Default Constructor,getFmfDetails(),"Deprecated. 
This property is not available publicly
 Fraud filter details.  Only supported when the `payment_method` is set to `credit_card`
",FmfDetails
com.paypal.api.payments.Error,Default Constructor,getInformationLink(),URI for detailed information related to this error for the developer.,java.lang.String
com.paypal.api.payments.Error,Default Constructor,getLinks(),Links,java.util.List<DefinitionsLinkdescription>
com.paypal.api.payments.Error,Default Constructor,getMessage(),Message describing the error.,java.lang.String
com.paypal.api.payments.Error,Default Constructor,getName(),"Human readable, unique name of the error.",java.lang.String
com.paypal.api.payments.Error,Default Constructor,getProcessorResponse(),"Deprecated. 
This property is not available publicly
 response codes returned from a payment processor such as avs, cvv, etc. Only supported when the `payment_method` is set to `credit_card`.
",ProcessorResponse
com.paypal.api.payments.Error,Default Constructor,getPurchaseUnitReferenceId(),"Deprecated. 
This property is not available publicly
 Reference ID of the purchase_unit associated with this error
",java.lang.String
com.paypal.api.payments.Error,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Error,Default Constructor,setCode(java.lang.String code),"Deprecated. 
This property is not available publicly
 PayPal internal error code.
",Error
com.paypal.api.payments.Error,Default Constructor,setDebugId(java.lang.String debugId),PayPal internal identifier used for correlation purposes.,Error
com.paypal.api.payments.Error,Default Constructor,setDetails(java.util.List<ErrorDetails> details),Additional details of the error,Error
com.paypal.api.payments.Error,Default Constructor,setFmfDetails(FmfDetails fmfDetails),"Deprecated. 
This property is not available publicly
 Fraud filter details.  Only supported when the `payment_method` is set to `credit_card`
",Error
com.paypal.api.payments.Error,Default Constructor,setInformationLink(java.lang.String informationLink),URI for detailed information related to this error for the developer.,Error
com.paypal.api.payments.Error,Default Constructor,setLinks(java.util.List<DefinitionsLinkdescription> links),Links,Error
com.paypal.api.payments.Error,Default Constructor,setMessage(java.lang.String message),Message describing the error.,Error
com.paypal.api.payments.Error,Default Constructor,setName(java.lang.String name),"Human readable, unique name of the error.",Error
com.paypal.api.payments.Error,Default Constructor,setProcessorResponse(ProcessorResponse processorResponse),"Deprecated. 
This property is not available publicly
 response codes returned from a payment processor such as avs, cvv, etc. Only supported when the `payment_method` is set to `credit_card`.
",Error
com.paypal.api.payments.Error,Default Constructor,setPurchaseUnitReferenceId(java.lang.String purchaseUnitReferenceId),"Deprecated. 
This property is not available publicly
 Reference ID of the purchase_unit associated with this error
",Error
com.paypal.api.payments.Error,Default Constructor,toString(),N/A,java.lang.String
com.paypal.api.payments.ErrorDetails,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ErrorDetails,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ErrorDetails,Default Constructor,getCode(),"Deprecated. 
This property is not publicly available
 PayPal internal error code.
",java.lang.String
com.paypal.api.payments.ErrorDetails,Default Constructor,getField(),Name of the field that caused the error.,java.lang.String
com.paypal.api.payments.ErrorDetails,Default Constructor,getIssue(),Reason for the error.,java.lang.String
com.paypal.api.payments.ErrorDetails,Default Constructor,getPurchaseUnitReferenceId(),"Deprecated. 
This property is not publicly available
 Reference ID of the purchase_unit associated with this error
",java.lang.String
com.paypal.api.payments.ErrorDetails,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ErrorDetails,Default Constructor,setCode(java.lang.String code),"Deprecated. 
This property is not publicly available
 PayPal internal error code.
",ErrorDetails
com.paypal.api.payments.ErrorDetails,Default Constructor,setField(java.lang.String field),Name of the field that caused the error.,ErrorDetails
com.paypal.api.payments.ErrorDetails,Default Constructor,setIssue(java.lang.String issue),Reason for the error.,ErrorDetails
com.paypal.api.payments.ErrorDetails,Default Constructor,setPurchaseUnitReferenceId(java.lang.String purchaseUnitReferenceId),"Deprecated. 
This property is not publicly available
 Reference ID of the purchase_unit associated with this error
",ErrorDetails
com.paypal.api.payments.Event,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Event,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Event,Default Constructor,"get(APIContext apiContext,
   java.lang.String eventId)",Retrieves the Webhooks event resource identified by event_id.,static Event
com.paypal.api.payments.Event,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String eventId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Event
com.paypal.api.payments.Event,Default Constructor,getCreateTime(),Time the resource was created.,java.lang.String
com.paypal.api.payments.Event,Default Constructor,getEventType(),"Name of the event type that occurred on resource, identified by data_resource element, to trigger the Webhooks event.",java.lang.String
com.paypal.api.payments.Event,Default Constructor,getId(),Identifier of the Webhooks event resource.,java.lang.String
com.paypal.api.payments.Event,Default Constructor,getLinks(),Hateoas links.,java.util.List<Links>
com.paypal.api.payments.Event,Default Constructor,getResource(),This contains the resource that is identified by resource_type element.,java.lang.Object
com.paypal.api.payments.Event,Default Constructor,getResourceType(),Name of the resource contained in resource element.,java.lang.String
com.paypal.api.payments.Event,Default Constructor,getSummary(),A summary description of the event.,java.lang.String
com.paypal.api.payments.Event,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Event,Default Constructor,"list(APIContext apiContext,
    java.lang.String queryParams)",Retrieves the list of Webhooks events resources for the application associated with token.,static EventList
com.paypal.api.payments.Event,Default Constructor,"list(java.lang.String accessToken,
    java.lang.String queryParams)","Deprecated. 
Please use list(APIContext, String) instead.
",static EventList
com.paypal.api.payments.Event,Default Constructor,resend(APIContext apiContext),Resends the Webhooks event resource identified by event_id.,Event
com.paypal.api.payments.Event,Default Constructor,resend(java.lang.String accessToken),"Deprecated. 
Please use resend(APIContext) instead.
",Event
com.paypal.api.payments.Event,Default Constructor,setCreateTime(java.lang.String createTime),Time the resource was created.,Event
com.paypal.api.payments.Event,Default Constructor,setEventType(java.lang.String eventType),"Name of the event type that occurred on resource, identified by data_resource element, to trigger the Webhooks event.",Event
com.paypal.api.payments.Event,Default Constructor,setId(java.lang.String id),Identifier of the Webhooks event resource.,Event
com.paypal.api.payments.Event,Default Constructor,setLinks(java.util.List<Links> links),Hateoas links.,Event
com.paypal.api.payments.Event,Default Constructor,setResource(java.lang.Object resource),This contains the resource that is identified by resource_type element.,Event
com.paypal.api.payments.Event,Default Constructor,setResourceType(java.lang.String resourceType),Name of the resource contained in resource element.,Event
com.paypal.api.payments.Event,Default Constructor,setSummary(java.lang.String summary),A summary description of the event.,Event
com.paypal.api.payments.Event,Default Constructor,"validateReceivedEvent(APIContext apiContext,
                     java.util.Map<java.lang.String,java.lang.String> headers,
                     java.lang.String requestBody)","Validates received event received from PayPal to webhook endpoint set for particular webhook Id with PayPal trust source, to verify Data and Certificate integrity.",static boolean
com.paypal.api.payments.EventList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.EventList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.EventList,Default Constructor,getCount(),Number of items returned in each range of results.,int
com.paypal.api.payments.EventList,Default Constructor,getEvents(),A list of Webhooks event resources,java.util.List<Event>
com.paypal.api.payments.EventList,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.EventList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.EventList,Default Constructor,setCount(int count),Number of items returned in each range of results.,EventList
com.paypal.api.payments.EventList,Default Constructor,setEvents(java.util.List<Event> events),A list of Webhooks event resources,EventList
com.paypal.api.payments.EventList,Default Constructor,setLinks(java.util.List<Links> links),N/A,EventList
com.paypal.api.payments.EventType,Default Constructor,availableEventTypes(APIContext apiContext),Retrieves the master list of available Webhooks events-types resources for any webhook to subscribe to.,static EventTypeList
com.paypal.api.payments.EventType,Default Constructor,availableEventTypes(java.lang.String accessToken),"Deprecated. 
Please use availableEventTypes(APIContext) instead.
",static EventTypeList
com.paypal.api.payments.EventType,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.EventType,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.EventType,Default Constructor,getDescription(),Human readable description of the event-type,java.lang.String
com.paypal.api.payments.EventType,Default Constructor,getName(),Unique event-type name.,java.lang.String
com.paypal.api.payments.EventType,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.EventType,Default Constructor,setDescription(java.lang.String description),Human readable description of the event-type,EventType
com.paypal.api.payments.EventType,Default Constructor,setName(java.lang.String name),Unique event-type name.,EventType
com.paypal.api.payments.EventType,Default Constructor,"subscribedEventTypes(APIContext apiContext,
                    java.lang.String webhookId)",Retrieves the list of events-types subscribed by the given Webhook.,static EventTypeList
com.paypal.api.payments.EventType,Default Constructor,"subscribedEventTypes(java.lang.String accessToken,
                    java.lang.String webhookId)","Deprecated. 
Please use subscribedEventTypes(APIContext, String) instead.
",static EventTypeList
com.paypal.api.payments.EventTypeList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.EventTypeList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.EventTypeList,Default Constructor,getEventTypes(),A list of Webhooks event-types,java.util.List<EventType>
com.paypal.api.payments.EventTypeList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.EventTypeList,Default Constructor,setEventTypes(java.util.List<EventType> eventTypes),A list of Webhooks event-types,EventTypeList
com.paypal.api.payments.ExtendedBankAccount,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ExtendedBankAccount,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ExtendedBankAccount,Default Constructor,getMandateReferenceNumber(),Identifier of the direct debit mandate to validate.,java.lang.String
com.paypal.api.payments.ExtendedBankAccount,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ExtendedBankAccount,Default Constructor,setMandateReferenceNumber(java.lang.String mandateReferenceNumber),Identifier of the direct debit mandate to validate.,ExtendedBankAccount
com.paypal.api.payments.ExternalFunding,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ExternalFunding,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ExternalFunding,Default Constructor,getAmount(),Amount being funded by the external funding account,Amount
com.paypal.api.payments.ExternalFunding,Default Constructor,getCode(),Generic identifier for the external funding,java.lang.String
com.paypal.api.payments.ExternalFunding,Default Constructor,getDisplayText(),Description of the external funding being applied,java.lang.String
com.paypal.api.payments.ExternalFunding,Default Constructor,getFundingAccountId(),Encrypted PayPal Account identifier for the funding account,java.lang.String
com.paypal.api.payments.ExternalFunding,Default Constructor,getFundingInstruction(),Indicates that the Payment should be fully funded by External Funded Incentive,java.lang.String
com.paypal.api.payments.ExternalFunding,Default Constructor,getReferenceId(),Unique identifier for the external funding,java.lang.String
com.paypal.api.payments.ExternalFunding,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ExternalFunding,Default Constructor,setAmount(Amount amount),Amount being funded by the external funding account,ExternalFunding
com.paypal.api.payments.ExternalFunding,Default Constructor,setCode(java.lang.String code),Generic identifier for the external funding,ExternalFunding
com.paypal.api.payments.ExternalFunding,Default Constructor,setDisplayText(java.lang.String displayText),Description of the external funding being applied,ExternalFunding
com.paypal.api.payments.ExternalFunding,Default Constructor,setFundingAccountId(java.lang.String fundingAccountId),Encrypted PayPal Account identifier for the funding account,ExternalFunding
com.paypal.api.payments.ExternalFunding,Default Constructor,setFundingInstruction(java.lang.String fundingInstruction),Indicates that the Payment should be fully funded by External Funded Incentive,ExternalFunding
com.paypal.api.payments.ExternalFunding,Default Constructor,setReferenceId(java.lang.String referenceId),Unique identifier for the external funding,ExternalFunding
com.paypal.api.payments.FileAttachment,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FileAttachment,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FileAttachment,Default Constructor,getName(),Name of the file attached.,java.lang.String
com.paypal.api.payments.FileAttachment,Default Constructor,getUrl(),URL of the attached file that can be downloaded.,java.lang.String
com.paypal.api.payments.FileAttachment,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FileAttachment,Default Constructor,setName(java.lang.String name),Name of the file attached.,FileAttachment
com.paypal.api.payments.FileAttachment,Default Constructor,setUrl(java.lang.String url),URL of the attached file that can be downloaded.,FileAttachment
com.paypal.api.payments.FlowConfig,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FlowConfig,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FlowConfig,Default Constructor,getBankTxnPendingUrl(),The merchant site URL to display after a bank transfer payment.,java.lang.String
com.paypal.api.payments.FlowConfig,Default Constructor,getLandingPageType(),The type of landing page to display on the PayPal site for user checkout.,java.lang.String
com.paypal.api.payments.FlowConfig,Default Constructor,getReturnUriHttpMethod(),Defines the HTTP method to use to redirect the user to a return URL.,java.lang.String
com.paypal.api.payments.FlowConfig,Default Constructor,getUserAction(),Defines whether buyers can complete purchases on the PayPal or merchant website.,java.lang.String
com.paypal.api.payments.FlowConfig,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FlowConfig,Default Constructor,setBankTxnPendingUrl(java.lang.String bankTxnPendingUrl),The merchant site URL to display after a bank transfer payment.,FlowConfig
com.paypal.api.payments.FlowConfig,Default Constructor,setLandingPageType(java.lang.String landingPageType),The type of landing page to display on the PayPal site for user checkout.,FlowConfig
com.paypal.api.payments.FlowConfig,Default Constructor,setReturnUriHttpMethod(java.lang.String returnUriHttpMethod),Defines the HTTP method to use to redirect the user to a return URL.,FlowConfig
com.paypal.api.payments.FlowConfig,Default Constructor,setUserAction(java.lang.String userAction),Defines whether buyers can complete purchases on the PayPal or merchant website.,FlowConfig
com.paypal.api.payments.FmfDetails,Description of the filter.,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FmfDetails,Description of the filter.,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FmfDetails,Description of the filter.,getDescription(),Description of the filter.,java.lang.String
com.paypal.api.payments.FmfDetails,Description of the filter.,getFilterId(),Filter Identifier.,java.lang.String
com.paypal.api.payments.FmfDetails,Description of the filter.,getFilterType(),Type of filter.,java.lang.String
com.paypal.api.payments.FmfDetails,Description of the filter.,getName(),Name of the filter,java.lang.String
com.paypal.api.payments.FmfDetails,Description of the filter.,hashCode(),N/A,int
com.paypal.api.payments.FmfDetails,Description of the filter.,setDescription(java.lang.String description),Description of the filter.,FmfDetails
com.paypal.api.payments.FmfDetails,Description of the filter.,setFilterId(java.lang.String filterId),Filter Identifier.,FmfDetails
com.paypal.api.payments.FmfDetails,Description of the filter.,setFilterType(java.lang.String filterType),Type of filter.,FmfDetails
com.paypal.api.payments.FmfDetails,Description of the filter.,setName(java.lang.String name),Name of the filter,FmfDetails
com.paypal.api.payments.FundingDetail,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FundingDetail,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FundingDetail,Default Constructor,getClearingTime(),Expected clearing time,java.lang.String
com.paypal.api.payments.FundingDetail,Default Constructor,getPaymentDebitDate(),Date when funds will be debited from the payer's account,java.lang.String
com.paypal.api.payments.FundingDetail,Default Constructor,getPaymentHoldDate(),[DEPRECATED] Hold-off duration of the payment.,java.lang.String
com.paypal.api.payments.FundingDetail,Default Constructor,getProcessingType(),Processing type of the payment card,java.lang.String
com.paypal.api.payments.FundingDetail,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FundingDetail,Default Constructor,setClearingTime(java.lang.String clearingTime),Expected clearing time,FundingDetail
com.paypal.api.payments.FundingDetail,Default Constructor,setPaymentDebitDate(java.lang.String paymentDebitDate),Date when funds will be debited from the payer's account,FundingDetail
com.paypal.api.payments.FundingDetail,Default Constructor,setPaymentHoldDate(java.lang.String paymentHoldDate),[DEPRECATED] Hold-off duration of the payment.,FundingDetail
com.paypal.api.payments.FundingDetail,Default Constructor,setProcessingType(java.lang.String processingType),Processing type of the payment card,FundingDetail
com.paypal.api.payments.FundingInstrument,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FundingInstrument,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FundingInstrument,Default Constructor,getAlternatePayment(),Alternate Payment  information - Mostly regional payment providers.,AlternatePayment
com.paypal.api.payments.FundingInstrument,Default Constructor,getBankAccount(),Bank Account information.,ExtendedBankAccount
com.paypal.api.payments.FundingInstrument,Default Constructor,getBankAccountToken(),Vaulted bank account instrument.,BankToken
com.paypal.api.payments.FundingInstrument,Default Constructor,getBilling(),Billing instrument that references pre-approval information for the payment,Billing
com.paypal.api.payments.FundingInstrument,Default Constructor,getCarrierAccount(),Carrier account instrument,CarrierAccount
com.paypal.api.payments.FundingInstrument,Default Constructor,getCarrierAccountToken(),Carrier account token instrument.,CarrierAccountToken
com.paypal.api.payments.FundingInstrument,Default Constructor,getCredit(),PayPal credit funding instrument.,Credit
com.paypal.api.payments.FundingInstrument,Default Constructor,getCreditCard(),Credit Card instrument.,CreditCard
com.paypal.api.payments.FundingInstrument,Default Constructor,getCreditCardToken(),PayPal vaulted credit Card instrument.,CreditCardToken
com.paypal.api.payments.FundingInstrument,Default Constructor,getExternalFunding(),External funding instrument.,ExternalFunding
com.paypal.api.payments.FundingInstrument,Default Constructor,getIncentive(),Incentive funding instrument.,Incentive
com.paypal.api.payments.FundingInstrument,Default Constructor,getPaymentCard(),Payment Card information.,PaymentCard
com.paypal.api.payments.FundingInstrument,Default Constructor,getPrivateLabelCard(),Private Label Card funding instrument.,PrivateLabelCard
com.paypal.api.payments.FundingInstrument,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FundingInstrument,Default Constructor,setAlternatePayment(AlternatePayment alternatePayment),Alternate Payment  information - Mostly regional payment providers.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setBankAccount(ExtendedBankAccount bankAccount),Bank Account information.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setBankAccountToken(BankToken bankAccountToken),Vaulted bank account instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setBilling(Billing billing),Billing instrument that references pre-approval information for the payment,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setCarrierAccount(CarrierAccount carrierAccount),Carrier account instrument,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setCarrierAccountToken(CarrierAccountToken carrierAccountToken),Carrier account token instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setCredit(Credit credit),PayPal credit funding instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setCreditCard(CreditCard creditCard),Credit Card instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setCreditCardToken(CreditCardToken creditCardToken),PayPal vaulted credit Card instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setExternalFunding(ExternalFunding externalFunding),External funding instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setIncentive(Incentive incentive),Incentive funding instrument.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setPaymentCard(PaymentCard paymentCard),Payment Card information.,FundingInstrument
com.paypal.api.payments.FundingInstrument,Default Constructor,setPrivateLabelCard(PrivateLabelCard privateLabelCard),Private Label Card funding instrument.,FundingInstrument
com.paypal.api.payments.FundingOption,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FundingOption,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FundingOption,Default Constructor,getBackupFundingInstrument(),Backup funding instrument which will be used for payment if primary fails.,FundingInstrument
com.paypal.api.payments.FundingOption,Default Constructor,getCurrencyConversion(),Currency conversion applicable to this funding option.,CurrencyConversion
com.paypal.api.payments.FundingOption,Default Constructor,getFundingSources(),List of funding sources that contributes to a payment.,java.util.List<FundingSource>
com.paypal.api.payments.FundingOption,Default Constructor,getId(),id of the funding option.,java.lang.String
com.paypal.api.payments.FundingOption,Default Constructor,getInstallmentInfo(),Installment options available for a funding option.,InstallmentInfo
com.paypal.api.payments.FundingOption,Default Constructor,getLinks(),N/A,java.util.List<DefinitionsLinkdescription>
com.paypal.api.payments.FundingOption,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FundingOption,Default Constructor,setBackupFundingInstrument(FundingInstrument backupFundingInstrument),Backup funding instrument which will be used for payment if primary fails.,FundingOption
com.paypal.api.payments.FundingOption,Default Constructor,setCurrencyConversion(CurrencyConversion currencyConversion),Currency conversion applicable to this funding option.,FundingOption
com.paypal.api.payments.FundingOption,Default Constructor,setFundingSources(java.util.List<FundingSource> fundingSources),List of funding sources that contributes to a payment.,FundingOption
com.paypal.api.payments.FundingOption,Default Constructor,setId(java.lang.String id),id of the funding option.,FundingOption
com.paypal.api.payments.FundingOption,Default Constructor,setInstallmentInfo(InstallmentInfo installmentInfo),Installment options available for a funding option.,FundingOption
com.paypal.api.payments.FundingOption,Default Constructor,setLinks(java.util.List<DefinitionsLinkdescription> links),N/A,FundingOption
com.paypal.api.payments.FundingSource,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FundingSource,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FundingSource,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.",canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.","create(APIContext apiContext,
      java.lang.String correlationId)","Creates a future payment using either authorization code or refresh token
 with correlation ID.",Payment
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.","create(java.lang.String accessToken,
      java.lang.String correlationId)","Creates a future payment using either authorization code or refresh token
 with correlation ID.",Payment
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.",equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.","fetchRefreshToken(APIContext context,
                 java.lang.String authorizationCode)","Fetches long lived refresh token from authorization code, for future payment use.",static java.lang.String
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.",getTokeninfo(CreateFromAuthorizationCodeParameters params),"Deprecated. 
Please use fetchRefreshToken(APIContext, String) instead.
 In this method, we need to pass clientID, secret information that is already known to apiContext. The newer method allows for better
 code readability, and make it less error prone.
",Tokeninfo
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.","getTokeninfo(CreateFromRefreshTokenParameters params,
            Tokeninfo info)","Deprecated. 
Please use fetchRefreshToken(APIContext, String) instead.
 In this method, we need to pass clientID, secret information that is already known to apiContext. The newer method allows for better
 code readability, and make it less error prone.
",Tokeninfo
com.paypal.api.payments.FuturePayment,"Creates a future payment using either authorization code or refresh token
 with correlation ID.",hashCode(),N/A,int
com.paypal.base.GoogleAppEngineHttpConnection,"A special HttpConnection for use on Google App Engine.

 In order to activate this feature, set 'http.GoogleAppEngine = true' in the
 SDK config file.",createAndconfigureHttpConnection(HttpConfiguration clientConfiguration),create and configure HttpsURLConnection object,void
com.paypal.base.GoogleAppEngineHttpConnection,"A special HttpConnection for use on Google App Engine.

 In order to activate this feature, set 'http.GoogleAppEngine = true' in the
 SDK config file.","executeWithStream(java.lang.String url,
                 java.lang.String payload,
                 java.util.Map<java.lang.String,java.lang.String> headers)",Executes HTTP request,java.io.InputStream
com.paypal.base.GoogleAppEngineHttpConnection,"A special HttpConnection for use on Google App Engine.

 In order to activate this feature, set 'http.GoogleAppEngine = true' in the
 SDK config file.","setupClientSSL(java.lang.String certPath,
              java.lang.String certKey)",Set ssl parameters for client authentication,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getConnectionTimeout(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getContentType(),"Deprecated. 
Set/Get Content-Type HTTP Header in APIContext HTTPHeaders parameter
",java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getEndPointUrl(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getHttpMethod(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getIpAddress(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getMaxHttpConnection(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getMaxRetry(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getProxyHost(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getProxyPassword(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getProxyPort(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getProxyUserName(),N/A,java.lang.String
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getReadTimeout(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,getRetryDelay(),N/A,int
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,isGoogleAppEngine(),N/A,boolean
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,isProxySet(),N/A,boolean
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setConnectionTimeout(int connectionTimeout),Sets the connectionTimeout,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setContentType(java.lang.String contentType),"Deprecated. 
Set/Get Content-Type HTTP Header in APIContext HTTPHeaders parameter
",void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setEndPointUrl(java.lang.String endPointUrl),Sets the endPointUrl,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setGoogleAppEngine(boolean googleAppEngine),Sets the googleAppEngine,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setHttpMethod(java.lang.String httpMethod),N/A,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setIpAddress(java.lang.String ipAddress),N/A,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setMaxHttpConnection(int maxHttpConnection),Sets the maxHttpConnection,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setMaxRetry(int maxRetry),Sets the maxRetry,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setProxyHost(java.lang.String proxyHost),Sets the proxyHost,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setProxyPassword(java.lang.String proxyPassword),Sets the proxyPassword,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setProxyPort(int proxyPort),Sets the proxyPort,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setProxySet(boolean proxySet),Sets the proxySet,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setProxyUserName(java.lang.String proxyUserName),Sets the proxyUserName,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setReadTimeout(int readTimeout),Sets the readTimeout,void
com.paypal.base.HttpConfiguration,Class contains http specific configuration parameters,setRetryDelay(int retryDelay),Sets the retryDelay,void
com.paypal.base.HttpConnection,Base HttpConnection class,createAndconfigureHttpConnection(HttpConfiguration clientConfiguration),create and configure HttpsURLConnection object,abstract void
com.paypal.base.HttpConnection,Base HttpConnection class,"execute(java.lang.String url,
       java.lang.String payload,
       java.util.Map<java.lang.String,java.lang.String> headers)",Executes HTTP request,java.lang.String
com.paypal.base.HttpConnection,Base HttpConnection class,"executeWithStream(java.lang.String url,
                 java.lang.String payload,
                 java.util.Map<java.lang.String,java.lang.String> headers)",Executes HTTP request,java.io.InputStream
com.paypal.base.HttpConnection,Base HttpConnection class,getResponseHeaderMap(),N/A,"java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
com.paypal.base.HttpConnection,Base HttpConnection class,read(java.io.BufferedReader reader),N/A,protected java.lang.String
com.paypal.base.HttpConnection,Base HttpConnection class,"setHttpHeaders(java.util.Map<java.lang.String,java.lang.String> headers)",Set headers for HttpsURLConnection object,protected void
com.paypal.base.HttpConnection,Base HttpConnection class,"setupClientSSL(java.lang.String certPath,
              java.lang.String certKey)",Set ssl parameters for client authentication,abstract void
com.paypal.base.exception.HttpErrorException,HttpErrorException denotes errors that occur in HTTP call,getErrorResponse(),N/A,java.lang.String
com.paypal.base.exception.HttpErrorException,HttpErrorException denotes errors that occur in HTTP call,getResponsecode(),N/A,int
com.paypal.base.rest.HttpMethod,HttpMethod enums used for HTTP method verbs,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static HttpMethod
com.paypal.base.rest.HttpMethod,HttpMethod enums used for HTTP method verbs,values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static HttpMethod[]
com.paypal.base.HttpStatusCodes,N/A,N/A,N/A,N/A
com.paypal.api.payments.HyperSchema,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.HyperSchema,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.HyperSchema,Default Constructor,getContentEncoding(),N/A,java.lang.String
com.paypal.api.payments.HyperSchema,Default Constructor,getFragmentResolution(),N/A,java.lang.String
com.paypal.api.payments.HyperSchema,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.HyperSchema,Default Constructor,getMediaType(),N/A,java.lang.String
com.paypal.api.payments.HyperSchema,Default Constructor,getPathStart(),N/A,java.lang.String
com.paypal.api.payments.HyperSchema,Default Constructor,getReadonly(),N/A,java.lang.Boolean
com.paypal.api.payments.HyperSchema,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.HyperSchema,Default Constructor,setContentEncoding(java.lang.String contentEncoding),N/A,HyperSchema
com.paypal.api.payments.HyperSchema,Default Constructor,setFragmentResolution(java.lang.String fragmentResolution),N/A,HyperSchema
com.paypal.api.payments.HyperSchema,Default Constructor,setLinks(java.util.List<Links> links),N/A,HyperSchema
com.paypal.api.payments.HyperSchema,Default Constructor,setMediaType(java.lang.String mediaType),N/A,HyperSchema
com.paypal.api.payments.HyperSchema,Default Constructor,setPathStart(java.lang.String pathStart),N/A,HyperSchema
com.paypal.api.payments.HyperSchema,Default Constructor,setReadonly(java.lang.Boolean readonly),N/A,HyperSchema
com.paypal.api.payments.Image,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Image,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Image,Default Constructor,getImage(),Image as base64 encoded String,java.lang.String
com.paypal.api.payments.Image,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Image,Default Constructor,saveToFile(java.lang.String fileName),Saves the image to a file.,boolean
com.paypal.api.payments.Image,Default Constructor,setImage(java.lang.String image),Image as base64 encoded String,Image
com.paypal.api.payments.Image,Default Constructor,toString(),N/A,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Incentive,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Incentive,Default Constructor,getCode(),Code that identifies the incentive.,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getDescription(),Description of the incentive.,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getExpiryDate(),expiry date of the incentive.,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getId(),Identifier of the instrument in PayPal Wallet,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getLogoImageUrl(),Logo image url for the incentive.,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getMinimumPurchaseAmount(),Indicates incentive is applicable for this minimum purchase amount.,Currency
com.paypal.api.payments.Incentive,Default Constructor,getName(),Name of the incentive.,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getTerms(),URI to the associated terms,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,getType(),Specifies type of incentive,java.lang.String
com.paypal.api.payments.Incentive,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Incentive,Default Constructor,setCode(java.lang.String code),Code that identifies the incentive.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setDescription(java.lang.String description),Description of the incentive.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setExpiryDate(java.lang.String expiryDate),expiry date of the incentive.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setId(java.lang.String id),Identifier of the instrument in PayPal Wallet,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setLogoImageUrl(java.lang.String logoImageUrl),Logo image url for the incentive.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setMinimumPurchaseAmount(Currency minimumPurchaseAmount),Indicates incentive is applicable for this minimum purchase amount.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setName(java.lang.String name),Name of the incentive.,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setTerms(java.lang.String terms),URI to the associated terms,Incentive
com.paypal.api.payments.Incentive,Default Constructor,setType(java.lang.String type),Specifies type of incentive,Incentive
com.paypal.api.payments.InputFields,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InputFields,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InputFields,Default Constructor,getAddressOverride(),Indicates whether to display the shipping address that is passed to this call rather than the one on file with PayPal for this buyer on the PayPal experience pages.,int
com.paypal.api.payments.InputFields,Default Constructor,getAllowNote(),Indicates whether the buyer can enter a note to the merchant on the PayPal page during checkout.,java.lang.Boolean
com.paypal.api.payments.InputFields,Default Constructor,getNoShipping(),Indicates whether PayPal displays shipping address fields on the experience pages.,int
com.paypal.api.payments.InputFields,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InputFields,Default Constructor,setAddressOverride(int addressOverride),Indicates whether to display the shipping address that is passed to this call rather than the one on file with PayPal for this buyer on the PayPal experience pages.,InputFields
com.paypal.api.payments.InputFields,Default Constructor,setAllowNote(java.lang.Boolean allowNote),Indicates whether the buyer can enter a note to the merchant on the PayPal page during checkout.,InputFields
com.paypal.api.payments.InputFields,Default Constructor,setNoShipping(int noShipping),Indicates whether PayPal displays shipping address fields on the experience pages.,InputFields
com.paypal.api.payments.InstallmentInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InstallmentInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InstallmentInfo,Default Constructor,getInstallmentId(),Installment id.,java.lang.String
com.paypal.api.payments.InstallmentInfo,Default Constructor,getInstallmentOptions(),List of available installment options and the cost associated with each one.,java.util.List<InstallmentOption>
com.paypal.api.payments.InstallmentInfo,Default Constructor,getIssuer(),Credit card issuer.,java.lang.String
com.paypal.api.payments.InstallmentInfo,Default Constructor,getNetwork(),Credit card network.,java.lang.String
com.paypal.api.payments.InstallmentInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InstallmentInfo,Default Constructor,setInstallmentId(java.lang.String installmentId),Installment id.,InstallmentInfo
com.paypal.api.payments.InstallmentInfo,Default Constructor,setInstallmentOptions(java.util.List<InstallmentOption> installmentOptions),List of available installment options and the cost associated with each one.,InstallmentInfo
com.paypal.api.payments.InstallmentInfo,Default Constructor,setIssuer(java.lang.String issuer),Credit card issuer.,InstallmentInfo
com.paypal.api.payments.InstallmentInfo,Default Constructor,setNetwork(java.lang.String network),Credit card network.,InstallmentInfo
com.paypal.api.payments.InstallmentOption,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InstallmentOption,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InstallmentOption,Default Constructor,getDiscountAmount(),"Discount amount applied to the payment, if any",Currency
com.paypal.api.payments.InstallmentOption,Default Constructor,getDiscountPercentage(),"Discount percentage applied to the payment, if any",Percentage
com.paypal.api.payments.InstallmentOption,Default Constructor,getMonthlyPayment(),Monthly payment,Currency
com.paypal.api.payments.InstallmentOption,Default Constructor,getTerm(),Number of installments,int
com.paypal.api.payments.InstallmentOption,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InstallmentOption,Default Constructor,setDiscountAmount(Currency discountAmount),"Discount amount applied to the payment, if any",InstallmentOption
com.paypal.api.payments.InstallmentOption,Default Constructor,setDiscountPercentage(Percentage discountPercentage),"Discount percentage applied to the payment, if any",InstallmentOption
com.paypal.api.payments.InstallmentOption,Default Constructor,setMonthlyPayment(Currency monthlyPayment),Monthly payment,InstallmentOption
com.paypal.api.payments.InstallmentOption,Default Constructor,setTerm(int term),Number of installments,InstallmentOption
com.paypal.base.exception.InvalidCredentialException,"InvalidCredentialException used to denote errors in credentials used in API
 call",N/A,N/A,N/A
com.paypal.base.exception.InvalidResponseDataException,InvalidResponseException used to denote errors in response data,N/A,N/A,N/A
com.paypal.api.payments.Invoice,Default Constructor,"cancel(APIContext apiContext,
      CancelNotification cancelNotification)","Cancels an invoice, by ID.",void
com.paypal.api.payments.Invoice,Default Constructor,"cancel(java.lang.String accessToken,
      CancelNotification cancelNotification)","Deprecated. 
Please use cancel(APIContext, CancelNotification) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Invoice,Default Constructor,create(APIContext apiContext),Creates an invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",Invoice
com.paypal.api.payments.Invoice,Default Constructor,delete(APIContext apiContext),Delete a particular invoice by passing the invoice ID to the request URI.,void
com.paypal.api.payments.Invoice,Default Constructor,delete(java.lang.String accessToken),"Deprecated. 
Please use delete(APIContext) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,deleteExternalPayment(APIContext apiContext),Delete external payment.,void
com.paypal.api.payments.Invoice,Default Constructor,deleteExternalRefund(APIContext apiContext),Delete external refund.,void
com.paypal.api.payments.Invoice,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Invoice,Default Constructor,"fetchRefreshToken(APIContext context,
                 java.lang.String authorizationCode)","Fetches long lived refresh token from authorization code, for third party merchant invoicing use.",static java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,generateNumber(APIContext apiContext),Generates the next invoice number.,InvoiceNumber
com.paypal.api.payments.Invoice,Default Constructor,"get(APIContext apiContext,
   java.lang.String invoiceId)","Gets the details for a specified invoice, by ID.",static Invoice
com.paypal.api.payments.Invoice,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String invoiceId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Invoice
com.paypal.api.payments.Invoice,Default Constructor,getAdditionalData(),Any miscellaneous invoice data.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getAll(APIContext apiContext),Lists some or all merchant invoices.,static Invoices
com.paypal.api.payments.Invoice,Default Constructor,"getAll(APIContext apiContext,
      java.util.Map<java.lang.String,java.lang.String> options)",Lists some or all merchant invoices.,static Invoices
com.paypal.api.payments.Invoice,Default Constructor,getAll(java.lang.String accessToken),"Deprecated. 
Please use getAll(APIContext) instead.
",static Invoices
com.paypal.api.payments.Invoice,Default Constructor,getAllowPartialPayment(),Indicates whether the invoice allows a partial payment.,java.lang.Boolean
com.paypal.api.payments.Invoice,Default Constructor,getAttachments(),List of files attached to the invoice.,java.util.List<FileAttachment>
com.paypal.api.payments.Invoice,Default Constructor,getBillingInfo(),The required invoice recipient email address and any optional billing information.,java.util.List<BillingInfo>
com.paypal.api.payments.Invoice,Default Constructor,getCcInfo(),"For invoices sent by email, one or more email addresses to which to send a Cc: copy of the notification.",java.util.List<Participant>
com.paypal.api.payments.Invoice,Default Constructor,getCustom(),The custom amount to apply on an invoice.,CustomAmount
com.paypal.api.payments.Invoice,Default Constructor,getDiscount(),"The invoice level discount, as a percent or an amount value.",Cost
com.paypal.api.payments.Invoice,Default Constructor,getGratuity(),Gratuity to include with the invoice.,Currency
com.paypal.api.payments.Invoice,Default Constructor,getId(),The unique invoice resource identifier.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getInvoiceDate(),The date when the invoice was enabled.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getItems(),The list of items to include in the invoice.,java.util.List<InvoiceItem>
com.paypal.api.payments.Invoice,Default Constructor,getLinks(),HATEOS links representing all the actions over the invoice resource based on the current invoice status.,java.util.List<Links>
com.paypal.api.payments.Invoice,Default Constructor,getLogoUrl(),Full URL of an external image to use as the logo.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getMerchantInfo(),Information about the merchant who is sending the invoice.,MerchantInfo
com.paypal.api.payments.Invoice,Default Constructor,getMerchantMemo(),A private bookkeeping memo for the merchant.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getMetadata(),Audit information for the invoice.,Metadata
com.paypal.api.payments.Invoice,Default Constructor,getMinimumAmountDue(),"If `allow_partial_payment` is set to `true`, the minimum amount allowed for a partial payment.",Currency
com.paypal.api.payments.Invoice,Default Constructor,getNote(),Note to the payer.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getNumber(),Unique number that appears on the invoice.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getPaidAmount(),Payment summary of the invoice including amount paid through PayPal and other sources.,PaymentSummary
com.paypal.api.payments.Invoice,Default Constructor,getPaymentDetails(),"Deprecated. 
Please use getPayments() instead.
",java.util.List<PaymentDetail>
com.paypal.api.payments.Invoice,Default Constructor,getPayments(),List of payment details for the invoice.,java.util.List<PaymentDetail>
com.paypal.api.payments.Invoice,Default Constructor,getPaymentTerm(),Optional.,PaymentTerm
com.paypal.api.payments.Invoice,Default Constructor,getReference(),"Reference data, such as PO number, to add to the invoice.",java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getRefundDetails(),"Deprecated. 
Please use getRefunds() instead.
",java.util.List<RefundDetail>
com.paypal.api.payments.Invoice,Default Constructor,getRefundedAmount(),Payment summary of the invoice including amount refunded through PayPal and other sources.,PaymentSummary
com.paypal.api.payments.Invoice,Default Constructor,getRefunds(),List of refund details for the invoice.,java.util.List<RefundDetail>
com.paypal.api.payments.Invoice,Default Constructor,getShippingCost(),"The shipping cost, as a percent or an amount value.",ShippingCost
com.paypal.api.payments.Invoice,Default Constructor,getShippingInfo(),The shipping information for entities to whom items are being shipped.,ShippingInfo
com.paypal.api.payments.Invoice,Default Constructor,getStatus(),Status of the invoice.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getTaxCalculatedAfterDiscount(),Indicates whether tax is calculated before or after a discount.,java.lang.Boolean
com.paypal.api.payments.Invoice,Default Constructor,getTaxInclusive(),Indicates whether the unit price includes tax.,java.lang.Boolean
com.paypal.api.payments.Invoice,Default Constructor,getTemplateId(),The template ID used for the invoice.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getTerms(),General terms of the invoice.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,getTotalAmount(),The total amount of the invoice.,Currency
com.paypal.api.payments.Invoice,Default Constructor,getUri(),URI of the invoice resource.,java.lang.String
com.paypal.api.payments.Invoice,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Invoice,Default Constructor,"qrCode(APIContext apiContext,
      java.lang.String invoiceId)","Deprecated. 
Please use qrCode(APIContext, String, Map) instead.
",static Image
com.paypal.api.payments.Invoice,Default Constructor,"qrCode(APIContext apiContext,
      java.lang.String invoiceId,
      java.util.Map<java.lang.String,java.lang.String> options)","Generates a QR code for an invoice, by ID.",static Image
com.paypal.api.payments.Invoice,Default Constructor,"recordPayment(APIContext apiContext,
             PaymentDetail paymentDetail)","Marks the status of a specified invoice, by ID, as paid.",void
com.paypal.api.payments.Invoice,Default Constructor,"recordPayment(java.lang.String accessToken,
             PaymentDetail paymentDetail)","Deprecated. 
Please use recordPayment(APIContext, PaymentDetail) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,"recordRefund(APIContext apiContext,
            RefundDetail refundDetail)","Marks the status of a specified invoice, by ID, as refunded.",void
com.paypal.api.payments.Invoice,Default Constructor,"recordRefund(java.lang.String accessToken,
            RefundDetail refundDetail)","Deprecated. 
Please use recordRefund(APIContext, RefundDetail) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,"remind(APIContext apiContext,
      Notification notification)","Sends a reminder about a specific invoice, by ID, to a recipient.",void
com.paypal.api.payments.Invoice,Default Constructor,"remind(java.lang.String accessToken,
      Notification notification)","Deprecated. 
Please use remind(APIContext, Notification) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,"search(APIContext apiContext,
      Search search)",Searches for an invoice or invoices.,Invoices
com.paypal.api.payments.Invoice,Default Constructor,"search(java.lang.String accessToken,
      Search search)","Deprecated. 
Please use search(APIContext, Search) instead.
",Invoices
com.paypal.api.payments.Invoice,Default Constructor,send(APIContext apiContext),"Sends an invoice, by ID, to a recipient.",void
com.paypal.api.payments.Invoice,Default Constructor,send(java.lang.String accessToken),"Deprecated. 
Please use send(APIContext) instead.
",void
com.paypal.api.payments.Invoice,Default Constructor,setAdditionalData(java.lang.String additionalData),Any miscellaneous invoice data.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setAllowPartialPayment(java.lang.Boolean allowPartialPayment),Indicates whether the invoice allows a partial payment.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setAttachments(java.util.List<FileAttachment> attachments),List of files attached to the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setBillingInfo(java.util.List<BillingInfo> billingInfo),The required invoice recipient email address and any optional billing information.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setCcInfo(java.util.List<Participant> ccInfo),"For invoices sent by email, one or more email addresses to which to send a Cc: copy of the notification.",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setCustom(CustomAmount custom),The custom amount to apply on an invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setDiscount(Cost discount),"The invoice level discount, as a percent or an amount value.",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setGratuity(Currency gratuity),Gratuity to include with the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setId(java.lang.String id),The unique invoice resource identifier.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setInvoiceDate(java.lang.String invoiceDate),The date when the invoice was enabled.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setItems(java.util.List<InvoiceItem> items),The list of items to include in the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setLinks(java.util.List<Links> links),HATEOS links representing all the actions over the invoice resource based on the current invoice status.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setLogoUrl(java.lang.String logoUrl),Full URL of an external image to use as the logo.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setMerchantInfo(MerchantInfo merchantInfo),Information about the merchant who is sending the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setMerchantMemo(java.lang.String merchantMemo),A private bookkeeping memo for the merchant.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setMetadata(Metadata metadata),Audit information for the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setMinimumAmountDue(Currency minimumAmountDue),"If `allow_partial_payment` is set to `true`, the minimum amount allowed for a partial payment.",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setNote(java.lang.String note),Note to the payer.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setNumber(java.lang.String number),Unique number that appears on the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setPaidAmount(PaymentSummary paidAmount),Payment summary of the invoice including amount paid through PayPal and other sources.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setPaymentDetails(java.util.List<PaymentDetail> details),"Deprecated. 
Please use setPayments(List) instead.
",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setPayments(java.util.List<PaymentDetail> payments),List of payment details for the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setPaymentTerm(PaymentTerm paymentTerm),Optional.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setReference(java.lang.String reference),"Reference data, such as PO number, to add to the invoice.",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setRefundDetails(java.util.List<RefundDetail> details),"Deprecated. 
Please use setRefunds(List) instead.
",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setRefundedAmount(PaymentSummary refundedAmount),Payment summary of the invoice including amount refunded through PayPal and other sources.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setRefunds(java.util.List<RefundDetail> refunds),List of refund details for the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setShippingCost(ShippingCost shippingCost),"The shipping cost, as a percent or an amount value.",Invoice
com.paypal.api.payments.Invoice,Default Constructor,setShippingInfo(ShippingInfo shippingInfo),The shipping information for entities to whom items are being shipped.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setStatus(java.lang.String status),Status of the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setTaxCalculatedAfterDiscount(java.lang.Boolean taxCalculatedAfterDiscount),Indicates whether tax is calculated before or after a discount.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setTaxInclusive(java.lang.Boolean taxInclusive),Indicates whether the unit price includes tax.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setTemplateId(java.lang.String templateId),The template ID used for the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setTerms(java.lang.String terms),General terms of the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setTotalAmount(Currency totalAmount),The total amount of the invoice.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,setUri(java.lang.String uri),URI of the invoice resource.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,update(APIContext apiContext),Fully updates an invoice by passing the invoice ID to the request URI.,Invoice
com.paypal.api.payments.Invoice,Default Constructor,update(java.lang.String accessToken),"Deprecated. 
Please use update(APIContext) instead.
",Invoice
com.paypal.api.payments.InvoiceAddress,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoiceAddress,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoiceAddress,Default Constructor,getPhone(),Phone number in E.123 format.,Phone
com.paypal.api.payments.InvoiceAddress,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoiceAddress,Default Constructor,setPhone(Phone phone),Phone number in E.123 format.,InvoiceAddress
com.paypal.api.payments.InvoiceItem,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoiceItem,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoiceItem,Default Constructor,getDate(),The date when the item or service was provided.,java.lang.String
com.paypal.api.payments.InvoiceItem,Default Constructor,getDescription(),Description of the item.,java.lang.String
com.paypal.api.payments.InvoiceItem,Default Constructor,getDiscount(),"The item discount, as a percent or an amount value.",Cost
com.paypal.api.payments.InvoiceItem,Default Constructor,getImageUrl(),The image URL.,java.lang.String
com.paypal.api.payments.InvoiceItem,Default Constructor,getName(),Name of the item.,java.lang.String
com.paypal.api.payments.InvoiceItem,Default Constructor,getQuantity(),Quantity of the item.,float
com.paypal.api.payments.InvoiceItem,Default Constructor,getTax(),Tax associated with the item.,Tax
com.paypal.api.payments.InvoiceItem,Default Constructor,getUnitOfMeasure(),The unit of measure of the item being invoiced.,java.lang.String
com.paypal.api.payments.InvoiceItem,Default Constructor,getUnitPrice(),Unit price of the item.,Currency
com.paypal.api.payments.InvoiceItem,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoiceItem,Default Constructor,setDate(java.lang.String date),The date when the item or service was provided.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setDescription(java.lang.String description),Description of the item.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setDiscount(Cost discount),"The item discount, as a percent or an amount value.",InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setImageUrl(java.lang.String imageUrl),The image URL.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setName(java.lang.String name),Name of the item.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setQuantity(float quantity),Quantity of the item.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setTax(Tax tax),Tax associated with the item.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setUnitOfMeasure(java.lang.String unitOfMeasure),The unit of measure of the item being invoiced.,InvoiceItem
com.paypal.api.payments.InvoiceItem,Default Constructor,setUnitPrice(Currency unitPrice),Unit price of the item.,InvoiceItem
com.paypal.api.payments.InvoiceNumber,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoiceNumber,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoiceNumber,Default Constructor,getNumber(),The next invoice number,java.lang.String
com.paypal.api.payments.InvoiceNumber,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoiceNumber,Default Constructor,setNumber(java.lang.String number),The next invoice number,InvoiceNumber
com.paypal.api.payments.InvoiceNumber,Default Constructor,toString(),N/A,java.lang.String
com.paypal.api.payments.Invoices,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Invoices,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Invoices,Default Constructor,getInvoices(),List of invoices belonging to a merchant.,java.util.List<Invoice>
com.paypal.api.payments.Invoices,Default Constructor,getTotalCount(),N/A,int
com.paypal.api.payments.Invoices,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Invoices,Default Constructor,setInvoices(java.util.List<Invoice> invoices),List of invoices belonging to a merchant.,Invoices
com.paypal.api.payments.Invoices,Default Constructor,setTotalCount(int totalCount),N/A,Invoices
com.paypal.api.payments.InvoicingMetaData,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoicingMetaData,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getCancelledBy(),Actor who cancelled the resource.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getCancelledDate(),Date when the resource was cancelled.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getCreatedBy(),Email address of the account that created the resource.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getCreatedDate(),Date when the resource was created.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getFirstSentDate(),Date when the resource was first sent.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getLastSentBy(),Email address of the account that last sent the resource.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getLastSentDate(),Date when the resource was last sent.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getLastUpdatedBy(),Email address of the account that last edited the resource.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,getLastUpdatedDate(),Date when the resource was last edited.,java.lang.String
com.paypal.api.payments.InvoicingMetaData,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setCancelledBy(java.lang.String cancelledBy),Actor who cancelled the resource.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setCancelledDate(java.lang.String cancelledDate),Date when the resource was cancelled.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setCreatedBy(java.lang.String createdBy),Email address of the account that created the resource.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setCreatedDate(java.lang.String createdDate),Date when the resource was created.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setFirstSentDate(java.lang.String firstSentDate),Date when the resource was first sent.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setLastSentBy(java.lang.String lastSentBy),Email address of the account that last sent the resource.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setLastSentDate(java.lang.String lastSentDate),Date when the resource was last sent.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setLastUpdatedBy(java.lang.String lastUpdatedBy),Email address of the account that last edited the resource.,InvoicingMetaData
com.paypal.api.payments.InvoicingMetaData,Default Constructor,setLastUpdatedDate(java.lang.String lastUpdatedDate),Date when the resource was last edited.,InvoicingMetaData
com.paypal.api.payments.InvoicingNotification,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoicingNotification,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoicingNotification,Default Constructor,getNote(),Note to the payer.,java.lang.String
com.paypal.api.payments.InvoicingNotification,Default Constructor,getSendToMerchant(),A flag indicating whether a copy of the email has to be sent to the merchant.,java.lang.Boolean
com.paypal.api.payments.InvoicingNotification,Default Constructor,getSubject(),Subject of the notification.,java.lang.String
com.paypal.api.payments.InvoicingNotification,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoicingNotification,Default Constructor,setNote(java.lang.String note),Note to the payer.,InvoicingNotification
com.paypal.api.payments.InvoicingNotification,Default Constructor,setSendToMerchant(java.lang.Boolean sendToMerchant),A flag indicating whether a copy of the email has to be sent to the merchant.,InvoicingNotification
com.paypal.api.payments.InvoicingNotification,Default Constructor,setSubject(java.lang.String subject),Subject of the notification.,InvoicingNotification
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getDate(),Date when the invoice was paid.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getMethod(),Payment mode or method.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getNote(),Optional note associated with the payment.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getTransactionId(),PayPal payment transaction id.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getTransactionType(),Type of the transaction.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,getType(),PayPal payment detail indicating whether payment was made in an invoicing flow via PayPal or externally.,java.lang.String
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setDate(java.lang.String date),Date when the invoice was paid.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setMethod(java.lang.String method),Payment mode or method.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setNote(java.lang.String note),Optional note associated with the payment.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setTransactionId(java.lang.String transactionId),PayPal payment transaction id.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setTransactionType(java.lang.String transactionType),Type of the transaction.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingPaymentDetail,Default Constructor,setType(java.lang.String type),PayPal payment detail indicating whether payment was made in an invoicing flow via PayPal or externally.,InvoicingPaymentDetail
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,getDate(),Date when the invoice was marked as refunded.,java.lang.String
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,getNote(),Optional note associated with the refund.,java.lang.String
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,getType(),PayPal refund type indicating whether refund was done in invoicing flow via PayPal or externally.,java.lang.String
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,setDate(java.lang.String date),Date when the invoice was marked as refunded.,InvoicingRefundDetail
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,setNote(java.lang.String note),Optional note associated with the refund.,InvoicingRefundDetail
com.paypal.api.payments.InvoicingRefundDetail,Default Constructor,setType(java.lang.String type),PayPal refund type indicating whether refund was done in invoicing flow via PayPal or externally.,InvoicingRefundDetail
com.paypal.api.payments.InvoicingSearch,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.InvoicingSearch,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.InvoicingSearch,Default Constructor,getEmail(),Initial letters of the email address.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getEndCreationDate(),End invoice creation date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getEndDueDate(),End invoice due date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getEndInvoiceDate(),End invoice date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getEndPaymentDate(),End invoice payment date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getLowerTotalAmount(),Lower limit of total amount.,Currency
com.paypal.api.payments.InvoicingSearch,Default Constructor,getNumber(),The invoice number that appears on the invoice.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getPage(),Offset of the search results.,float
com.paypal.api.payments.InvoicingSearch,Default Constructor,getPageSize(),Page size of the search results.,float
com.paypal.api.payments.InvoicingSearch,Default Constructor,getRecipientBusinessName(),Initial letters of the recipient's business name.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getRecipientFirstName(),Initial letters of the recipient's first name.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getRecipientLastName(),Initial letters of the recipient's last name.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getStartCreationDate(),Start invoice creation date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getStartDueDate(),Start invoice due date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getStartInvoiceDate(),Start invoice date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getStartPaymentDate(),Start invoice payment date.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getStatus(),Status of the invoice.,java.lang.String
com.paypal.api.payments.InvoicingSearch,Default Constructor,getTotalCountRequired(),A flag indicating whether total count is required in the response.,java.lang.Boolean
com.paypal.api.payments.InvoicingSearch,Default Constructor,getUpperTotalAmount(),Upper limit of total amount.,Currency
com.paypal.api.payments.InvoicingSearch,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.InvoicingSearch,Default Constructor,setEmail(java.lang.String email),Initial letters of the email address.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setEndCreationDate(java.lang.String endCreationDate),End invoice creation date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setEndDueDate(java.lang.String endDueDate),End invoice due date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setEndInvoiceDate(java.lang.String endInvoiceDate),End invoice date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setEndPaymentDate(java.lang.String endPaymentDate),End invoice payment date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setLowerTotalAmount(Currency lowerTotalAmount),Lower limit of total amount.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setNumber(java.lang.String number),The invoice number that appears on the invoice.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setPage(float page),Offset of the search results.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setPageSize(float pageSize),Page size of the search results.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setRecipientBusinessName(java.lang.String recipientBusinessName),Initial letters of the recipient's business name.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setRecipientFirstName(java.lang.String recipientFirstName),Initial letters of the recipient's first name.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setRecipientLastName(java.lang.String recipientLastName),Initial letters of the recipient's last name.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setStartCreationDate(java.lang.String startCreationDate),Start invoice creation date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setStartDueDate(java.lang.String startDueDate),Start invoice due date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setStartInvoiceDate(java.lang.String startInvoiceDate),Start invoice date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setStartPaymentDate(java.lang.String startPaymentDate),Start invoice payment date.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setStatus(java.lang.String status),Status of the invoice.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setTotalCountRequired(java.lang.Boolean totalCountRequired),A flag indicating whether total count is required in the response.,InvoicingSearch
com.paypal.api.payments.InvoicingSearch,Default Constructor,setUpperTotalAmount(Currency upperTotalAmount),Upper limit of total amount.,InvoicingSearch
com.paypal.api.payments.Item,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Item,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Item,Default Constructor,getCategory(),Category type of the item.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getCurrency(),3-letter [currency code](https://developer.paypal.com/docs/integration/direct/rest_api_payment_country_currency_support/).,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getDescription(),Description of the item.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getHeight(),Height of the item.,Measurement
com.paypal.api.payments.Item,Default Constructor,getLength(),Length of the item.,Measurement
com.paypal.api.payments.Item,Default Constructor,getName(),Item name.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getPostbackData(),Set of optional data used for PayPal post-transaction notifications.,java.util.List<NameValuePair>
com.paypal.api.payments.Item,Default Constructor,getPrice(),Item cost.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getQuantity(),Number of a particular item.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getSku(),Stock keeping unit corresponding (SKU) to item.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getSupplementaryData(),Set of optional data used for PayPal risk determination.,java.util.List<NameValuePair>
com.paypal.api.payments.Item,Default Constructor,getTax(),Tax of the item.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getUrl(),URL linking to item information.,java.lang.String
com.paypal.api.payments.Item,Default Constructor,getWeight(),Weight of the item.,Measurement
com.paypal.api.payments.Item,Default Constructor,getWidth(),Width of the item.,Measurement
com.paypal.api.payments.Item,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Item,Default Constructor,setCategory(java.lang.String category),Category type of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setCurrency(java.lang.String currency),3-letter [currency code](https://developer.paypal.com/docs/integration/direct/rest_api_payment_country_currency_support/).,Item
com.paypal.api.payments.Item,Default Constructor,setDescription(java.lang.String description),Description of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setHeight(Measurement height),Height of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setLength(Measurement length),Length of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setName(java.lang.String name),Item name.,Item
com.paypal.api.payments.Item,Default Constructor,setPostbackData(java.util.List<NameValuePair> postbackData),Set of optional data used for PayPal post-transaction notifications.,Item
com.paypal.api.payments.Item,Default Constructor,setPrice(java.lang.String price),Item cost.,Item
com.paypal.api.payments.Item,Default Constructor,setQuantity(java.lang.String quantity),Number of a particular item.,Item
com.paypal.api.payments.Item,Default Constructor,setSku(java.lang.String sku),Stock keeping unit corresponding (SKU) to item.,Item
com.paypal.api.payments.Item,Default Constructor,setSupplementaryData(java.util.List<NameValuePair> supplementaryData),Set of optional data used for PayPal risk determination.,Item
com.paypal.api.payments.Item,Default Constructor,setTax(java.lang.String tax),Tax of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setUrl(java.lang.String url),URL linking to item information.,Item
com.paypal.api.payments.Item,Default Constructor,setWeight(Measurement weight),Weight of the item.,Item
com.paypal.api.payments.Item,Default Constructor,setWidth(Measurement width),Width of the item.,Item
com.paypal.api.payments.ItemList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ItemList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ItemList,Default Constructor,getItems(),List of items.,java.util.List<Item>
com.paypal.api.payments.ItemList,Default Constructor,getShippingAddress(),Shipping address.,ShippingAddress
com.paypal.api.payments.ItemList,Default Constructor,getShippingMethod(),Shipping method used for this payment like USPSParcel etc.,java.lang.String
com.paypal.api.payments.ItemList,Default Constructor,getShippingPhoneNumber(),Allows merchant's to share payer’s contact number with PayPal for the current payment.,java.lang.String
com.paypal.api.payments.ItemList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ItemList,Default Constructor,setItems(java.util.List<Item> items),List of items.,ItemList
com.paypal.api.payments.ItemList,Default Constructor,setShippingAddress(ShippingAddress shippingAddress),Shipping address.,ItemList
com.paypal.api.payments.ItemList,Default Constructor,setShippingMethod(java.lang.String shippingMethod),Shipping method used for this payment like USPSParcel etc.,ItemList
com.paypal.api.payments.ItemList,Default Constructor,setShippingPhoneNumber(java.lang.String shippingPhoneNumber),Allows merchant's to share payer’s contact number with PayPal for the current payment.,ItemList
com.paypal.base.rest.JSONFormatter,"JSONFormatter converts objects to JSON representation and vice-versa. This
 class depends on Google's GSON library to do the transformation. This class
 is not thread-safe.","fromJSON(java.lang.String responseString,
        java.lang.Class<T> clazz)",Converts a JSON String to object representation,static <T> T
com.paypal.base.rest.JSONFormatter,"JSONFormatter converts objects to JSON representation and vice-versa. This
 class depends on Google's GSON library to do the transformation. This class
 is not thread-safe.",setFIELD_NAMING_POLICY(com.google.gson.FieldNamingPolicy FIELD_NAMING_POLICY),Set a format for gson FIELD_NAMING_POLICY.,static void
com.paypal.base.rest.JSONFormatter,"JSONFormatter converts objects to JSON representation and vice-versa. This
 class depends on Google's GSON library to do the transformation. This class
 is not thread-safe.",toJSON(T t),Converts a Raw Type to JSON String,static <T> java.lang.String
com.paypal.api.payments.Links,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Links,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Links,Default Constructor,getEnctype(),N/A,java.lang.String
com.paypal.api.payments.Links,Default Constructor,getHref(),N/A,java.lang.String
com.paypal.api.payments.Links,Default Constructor,getMethod(),N/A,java.lang.String
com.paypal.api.payments.Links,Default Constructor,getRel(),N/A,java.lang.String
com.paypal.api.payments.Links,Default Constructor,getSchema(),N/A,HyperSchema
com.paypal.api.payments.Links,Default Constructor,getTargetSchema(),N/A,HyperSchema
com.paypal.api.payments.Links,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Links,Default Constructor,setEnctype(java.lang.String enctype),N/A,Links
com.paypal.api.payments.Links,Default Constructor,setHref(java.lang.String href),N/A,Links
com.paypal.api.payments.Links,Default Constructor,setMethod(java.lang.String method),N/A,Links
com.paypal.api.payments.Links,Default Constructor,setRel(java.lang.String rel),N/A,Links
com.paypal.api.payments.Links,Default Constructor,setSchema(HyperSchema schema),N/A,Links
com.paypal.api.payments.Links,Default Constructor,setTargetSchema(HyperSchema targetSchema),N/A,Links
com.paypal.api.payments.Measurement,Unit in which the value is represented.,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Measurement,Unit in which the value is represented.,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Measurement,Unit in which the value is represented.,getUnit(),Unit in which the value is represented.,java.lang.String
com.paypal.api.payments.Measurement,Unit in which the value is represented.,getValue(),Value this measurement represents.,java.lang.String
com.paypal.api.payments.Measurement,Unit in which the value is represented.,hashCode(),N/A,int
com.paypal.api.payments.Measurement,Unit in which the value is represented.,setUnit(java.lang.String unit),Unit in which the value is represented.,Measurement
com.paypal.api.payments.Measurement,Unit in which the value is represented.,setValue(java.lang.String value),Value this measurement represents.,Measurement
com.paypal.api.payments.MerchantInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.MerchantInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.MerchantInfo,Default Constructor,getAdditionalInfo(),"Additional information, such as business hours.",java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getAdditionalInfoLabel(),Option to provide a label to the additional_info field.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getAddress(),The merchant address.,InvoiceAddress
com.paypal.api.payments.MerchantInfo,Default Constructor,getBusinessName(),The merchant company business name.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getEmail(),The merchant email address.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getFax(),The merchant fax number.,Phone
com.paypal.api.payments.MerchantInfo,Default Constructor,getFirstName(),The merchant first name.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getLastName(),The merchant last name.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getPhone(),The merchant phone number.,Phone
com.paypal.api.payments.MerchantInfo,Default Constructor,getTaxId(),The merchant tax ID.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,getWebsite(),The merchant website.,java.lang.String
com.paypal.api.payments.MerchantInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.MerchantInfo,Default Constructor,setAdditionalInfo(java.lang.String additionalInfo),"Additional information, such as business hours.",MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setAdditionalInfoLabel(java.lang.String additionalInfoLabel),Option to provide a label to the additional_info field.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setAddress(InvoiceAddress address),The merchant address.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setBusinessName(java.lang.String businessName),The merchant company business name.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setEmail(java.lang.String email),The merchant email address.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setFax(Phone fax),The merchant fax number.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setFirstName(java.lang.String firstName),The merchant first name.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setLastName(java.lang.String lastName),The merchant last name.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setPhone(Phone phone),The merchant phone number.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setTaxId(java.lang.String taxId),The merchant tax ID.,MerchantInfo
com.paypal.api.payments.MerchantInfo,Default Constructor,setWebsite(java.lang.String website),The merchant website.,MerchantInfo
com.paypal.api.payments.MerchantPreferences,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.MerchantPreferences,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.MerchantPreferences,Default Constructor,getAcceptedPaymentType(),Payment types that are accepted for this plan.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getAutoBillAmount(),Allow auto billing for the outstanding amount of the agreement in the next cycle.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getCancelUrl(),Redirect URL on cancellation of agreement request.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getCharSet(),char_set for this plan.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getId(),Identifier of the merchant_preferences.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getInitialFailAmountAction(),Action to take if a failure occurs during initial payment.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getMaxFailAttempts(),Total number of failed attempts allowed.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getNotifyUrl(),Notify URL on agreement creation.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getReturnUrl(),Redirect URL on creation of agreement request.,java.lang.String
com.paypal.api.payments.MerchantPreferences,Default Constructor,getSetupFee(),Setup fee amount.,Currency
com.paypal.api.payments.MerchantPreferences,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.MerchantPreferences,Default Constructor,setAcceptedPaymentType(java.lang.String acceptedPaymentType),Payment types that are accepted for this plan.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setAutoBillAmount(java.lang.String autoBillAmount),Allow auto billing for the outstanding amount of the agreement in the next cycle.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setCancelUrl(java.lang.String cancelUrl),Redirect URL on cancellation of agreement request.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setCharSet(java.lang.String charSet),char_set for this plan.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setId(java.lang.String id),Identifier of the merchant_preferences.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setInitialFailAmountAction(java.lang.String initialFailAmountAction),Action to take if a failure occurs during initial payment.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setMaxFailAttempts(java.lang.String maxFailAttempts),Total number of failed attempts allowed.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setNotifyUrl(java.lang.String notifyUrl),Notify URL on agreement creation.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setReturnUrl(java.lang.String returnUrl),Redirect URL on creation of agreement request.,MerchantPreferences
com.paypal.api.payments.MerchantPreferences,Default Constructor,setSetupFee(Currency setupFee),Setup fee amount.,MerchantPreferences
com.paypal.api.payments.Metadata,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Metadata,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Metadata,Default Constructor,getCancelledBy(),The actor who cancelled the resource.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getCancelledDate(),The date and time when the resource was cancelled.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getCreatedBy(),The email address of the account that created the resource.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getCreatedDate(),The date and time when the resource was created.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getFirstSentDate(),The date and time when the resource was first sent.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getLastSentBy(),The email address of the account that last sent the resource.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getLastSentDate(),The date and time when the resource was last sent.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getLastUpdatedBy(),The email address of the account that last edited the resource.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getLastUpdatedDate(),The date and time when the resource was last edited.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,getPayerViewUrl(),URL representing the payer's view of the invoice.,java.lang.String
com.paypal.api.payments.Metadata,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Metadata,Default Constructor,setCancelledBy(java.lang.String cancelledBy),The actor who cancelled the resource.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setCancelledDate(java.lang.String cancelledDate),The date and time when the resource was cancelled.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setCreatedBy(java.lang.String createdBy),The email address of the account that created the resource.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setCreatedDate(java.lang.String createdDate),The date and time when the resource was created.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setFirstSentDate(java.lang.String firstSentDate),The date and time when the resource was first sent.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setLastSentBy(java.lang.String lastSentBy),The email address of the account that last sent the resource.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setLastSentDate(java.lang.String lastSentDate),The date and time when the resource was last sent.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setLastUpdatedBy(java.lang.String lastUpdatedBy),The email address of the account that last edited the resource.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setLastUpdatedDate(java.lang.String lastUpdatedDate),The date and time when the resource was last edited.,Metadata
com.paypal.api.payments.Metadata,Default Constructor,setPayerViewUrl(java.lang.String payerViewUrl),URL representing the payer's view of the invoice.,Metadata
com.paypal.base.exception.MissingCredentialException,"MissingCredentialException is throw when the credential used are wrongly
 configured or not found in the application properties",N/A,N/A,N/A
com.paypal.api.payments.NameValuePair,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.NameValuePair,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.NameValuePair,Default Constructor,getName(),Key for the name value pair.,java.lang.String
com.paypal.api.payments.NameValuePair,Default Constructor,getValue(),Value for the name value pair.,java.lang.String
com.paypal.api.payments.NameValuePair,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.NameValuePair,Default Constructor,setName(java.lang.String name),Key for the name value pair.,NameValuePair
com.paypal.api.payments.NameValuePair,Default Constructor,setValue(java.lang.String value),Value for the name value pair.,NameValuePair
com.paypal.api.payments.Notification,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Notification,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Notification,Default Constructor,getCcEmails(),Applicable for invoices created with Cc emails.,java.util.List<java.lang.String>
com.paypal.api.payments.Notification,Default Constructor,getNote(),Note to the payer.,java.lang.String
com.paypal.api.payments.Notification,Default Constructor,getSendToMerchant(),Indicates whether to send a copy of the email to the merchant.,java.lang.Boolean
com.paypal.api.payments.Notification,Default Constructor,getSubject(),Subject of the notification.,java.lang.String
com.paypal.api.payments.Notification,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Notification,Default Constructor,setCcEmails(java.util.List<java.lang.String> ccEmails),Applicable for invoices created with Cc emails.,Notification
com.paypal.api.payments.Notification,Default Constructor,setNote(java.lang.String note),Note to the payer.,Notification
com.paypal.api.payments.Notification,Default Constructor,setSendToMerchant(java.lang.Boolean sendToMerchant),Indicates whether to send a copy of the email to the merchant.,Notification
com.paypal.api.payments.Notification,Default Constructor,setSubject(java.lang.String subject),Subject of the notification.,Notification
com.paypal.base.NVPUtil,Utility method used to decode the nvp response String,decode(java.lang.String nvpString),Utility method used to decode the nvp response String,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.NVPUtil,Utility method used to decode the nvp response String,encodeUrl(java.lang.String value),Utility method used to encode the value,static java.lang.String
com.paypal.base.exception.OAuthException,Constructs a new exception with the specified detail message.,getError(),N/A,java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","addConfiguration(java.lang.String key,
                java.lang.String value)",Adds configuration to list of configurations.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","addConfigurations(java.util.Map<java.lang.String,java.lang.String> configurations)",Adds configurations to list of configurations.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","addHeader(java.lang.String key,
         java.lang.String value)",Adds header to existing list of headers.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","addHeaders(java.util.Map<java.lang.String,java.lang.String> headers)",Adds headers.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",expiresIn(),Specifies how long this token can be used for placing API calls.,long
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getAccessToken(),"Computes Access Token by placing a call to OAuth server using ClientID
 and ClientSecret.",java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getAuthorizationHeader(),"Computes Access Token by doing a Base64 encoding on the ClientID and
 ClientSecret.",java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getClientID(),Returns clientID,java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getClientSecret(),Returns clientSecret,java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getConfiguration(java.lang.String key),Returns specific configuration.,java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getConfigurations(),Returns list of configurations.,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getHeader(java.lang.String key),Returns the header value,java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getHeaders(),Returns the list of headers,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getOAuthHttpConfiguration(),N/A,protected HttpConfiguration
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",getRequestPayload(),Returns the request payload for OAuth Service.,protected java.lang.String
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",hasCredentials(),Checks if clientID and secret are set.,boolean
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","setConfigurations(java.util.Map<java.lang.String,java.lang.String> configurations)",Replaces existing configurations with provided map of configurations.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.","setHeaders(java.util.Map<java.lang.String,java.lang.String> headers)",Sets Headers for every calls.,OAuthTokenCredential
com.paypal.base.rest.OAuthTokenCredential,"OAuthTokenCredential is used for generation of OAuth Token used by PayPal
 REST API service. ClientID and ClientSecret are required by the class to
 generate OAuth Token, the resulting token is of the form ""Bearer xxxxxx"". The
 class has two constructors, one of it taking an additional configuration map
 used for dynamic configuration. When using the constructor with out
 configuration map the endpoint is fetched from the configuration that is used
 during initialization. See PayPalResource for configuring the system.
 When using a configuration map the class expects an entry by the name
 ""oauth.EndPoint"" or ""service.EndPoint"" to retrieve the value of the endpoint
 for the OAuth Service. If either are not present the configuration should
 have a entry by the name ""mode"" with values sandbox or live wherein the
 corresponding endpoints are default to PayPal endpoints.",setOAUTH_TOKEN_PATH(java.lang.String oauthTokenPath),Sets the URI path for the OAuth Token service.,static void
com.paypal.api.payments.Order,Default Constructor,authorize(APIContext apiContext),"Authorizes an order, by ID.",Authorization
com.paypal.api.payments.Order,Default Constructor,authorize(java.lang.String accessToken),"Deprecated. 
Please use authorize(APIContext) instead.
",Authorization
com.paypal.api.payments.Order,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Order,Default Constructor,"capture(APIContext apiContext,
       Capture capture)","Captures a payment for an order, by ID.",Capture
com.paypal.api.payments.Order,Default Constructor,"capture(java.lang.String accessToken,
       Capture capture)","Deprecated. 
Please use capture(APIContext, Capture) instead.
",Capture
com.paypal.api.payments.Order,Default Constructor,doVoid(APIContext apiContext),"Voids, or cancels, an order, by ID.",Order
com.paypal.api.payments.Order,Default Constructor,doVoid(java.lang.String accessToken),"Deprecated. 
Please use doVoid(APIContext) instead.
",Order
com.paypal.api.payments.Order,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Order,Default Constructor,"get(APIContext apiContext,
   java.lang.String orderId)","Shows details for an order, by ID.",static Order
com.paypal.api.payments.Order,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String orderId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Order
com.paypal.api.payments.Order,Default Constructor,getAmount(),Amount being collected.,Amount
com.paypal.api.payments.Order,Default Constructor,getCreateTime(),Time the resource was created in UTC ISO8601 format.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getFmfDetails(),Fraud Management Filter (FMF) details applied for the payment that could result in accept/deny/pending action.,FmfDetails
com.paypal.api.payments.Order,Default Constructor,getId(),Identifier of the order transaction.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Order,Default Constructor,getParentPayment(),ID of the Payment resource that this transaction is based on.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getPaymentMode(),specifies payment mode of the transaction,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getPendingReason(),"Deprecated. 
Reason code for the transaction state being Pending. Obsolete. Retained for backward compatability. Use reason_code field above instead.
",java.lang.String
com.paypal.api.payments.Order,Default Constructor,getProtectionEligibility(),The level of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getProtectionEligibilityType(),The kind of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getPurchaseUnitReferenceId(),Identifier to the purchase unit associated with this object.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getReasonCode(),Reason code for the transaction state being Pending or Reversed.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getReferenceId(),"Deprecated. 
Use purchaseUnitReferenceId instead
 Identifier to the purchase unit associated with this object. Obsolete. Use one in cart_base.
",java.lang.String
com.paypal.api.payments.Order,Default Constructor,getState(),State of the order transaction.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,getUpdateTime(),Time the resource was last updated in UTC ISO8601 format.,java.lang.String
com.paypal.api.payments.Order,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Order,Default Constructor,setAmount(Amount amount),Amount being collected.,Order
com.paypal.api.payments.Order,Default Constructor,setCreateTime(java.lang.String createTime),Time the resource was created in UTC ISO8601 format.,Order
com.paypal.api.payments.Order,Default Constructor,setFmfDetails(FmfDetails fmfDetails),Fraud Management Filter (FMF) details applied for the payment that could result in accept/deny/pending action.,Order
com.paypal.api.payments.Order,Default Constructor,setId(java.lang.String id),Identifier of the order transaction.,Order
com.paypal.api.payments.Order,Default Constructor,setLinks(java.util.List<Links> links),N/A,Order
com.paypal.api.payments.Order,Default Constructor,setParentPayment(java.lang.String parentPayment),ID of the Payment resource that this transaction is based on.,Order
com.paypal.api.payments.Order,Default Constructor,setPaymentMode(java.lang.String paymentMode),specifies payment mode of the transaction,Order
com.paypal.api.payments.Order,Default Constructor,setPendingReason(java.lang.String pendingReason),"Deprecated. 
Reason code for the transaction state being Pending. Obsolete. Retained for backward compatability. Use reason_code field above instead.
",Order
com.paypal.api.payments.Order,Default Constructor,setProtectionEligibility(java.lang.String protectionEligibility),The level of seller protection in force for the transaction.,Order
com.paypal.api.payments.Order,Default Constructor,setProtectionEligibilityType(java.lang.String protectionEligibilityType),The kind of seller protection in force for the transaction.,Order
com.paypal.api.payments.Order,Default Constructor,setPurchaseUnitReferenceId(java.lang.String purchaseUnitReferenceId),Identifier to the purchase unit associated with this object.,Order
com.paypal.api.payments.Order,Default Constructor,setReasonCode(java.lang.String reasonCode),Reason code for the transaction state being Pending or Reversed.,Order
com.paypal.api.payments.Order,Default Constructor,setReferenceId(java.lang.String referenceId),"Deprecated. 
Use purchaseUnitReferenceId instead
 Identifier to the purchase unit associated with this object. Obsolete. Use one in cart_base.
",Order
com.paypal.api.payments.Order,Default Constructor,setState(java.lang.String state),State of the order transaction.,Order
com.paypal.api.payments.Order,Default Constructor,setUpdateTime(java.lang.String updateTime),Time the resource was last updated in UTC ISO8601 format.,Order
com.paypal.api.payments.OverrideChargeModel,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.OverrideChargeModel,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.OverrideChargeModel,Default Constructor,getAmount(),Updated Amount to be associated with this charge model.,Currency
com.paypal.api.payments.OverrideChargeModel,Default Constructor,getChargeId(),ID of charge model.,java.lang.String
com.paypal.api.payments.OverrideChargeModel,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.OverrideChargeModel,Default Constructor,setAmount(Currency amount),Updated Amount to be associated with this charge model.,OverrideChargeModel
com.paypal.api.payments.OverrideChargeModel,Default Constructor,setChargeId(java.lang.String chargeId),ID of charge model.,OverrideChargeModel
com.paypal.api.payments.Participant,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Participant,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Participant,Default Constructor,getAdditionalInfo(),"Additional information, such as business hours.",java.lang.String
com.paypal.api.payments.Participant,Default Constructor,getAddress(),The participant address.,InvoiceAddress
com.paypal.api.payments.Participant,Default Constructor,getBusinessName(),The participant company business name.,java.lang.String
com.paypal.api.payments.Participant,Default Constructor,getEmail(),The participant email address.,java.lang.String
com.paypal.api.payments.Participant,Default Constructor,getFax(),The participant fax number.,Phone
com.paypal.api.payments.Participant,Default Constructor,getFirstName(),The participant first name.,java.lang.String
com.paypal.api.payments.Participant,Default Constructor,getLastName(),The participant last name.,java.lang.String
com.paypal.api.payments.Participant,Default Constructor,getPhone(),The participant phone number.,Phone
com.paypal.api.payments.Participant,Default Constructor,getWebsite(),The participant website.,java.lang.String
com.paypal.api.payments.Participant,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Participant,Default Constructor,setAdditionalInfo(java.lang.String additionalInfo),"Additional information, such as business hours.",Participant
com.paypal.api.payments.Participant,Default Constructor,setAddress(InvoiceAddress address),The participant address.,Participant
com.paypal.api.payments.Participant,Default Constructor,setBusinessName(java.lang.String businessName),The participant company business name.,Participant
com.paypal.api.payments.Participant,Default Constructor,setEmail(java.lang.String email),The participant email address.,Participant
com.paypal.api.payments.Participant,Default Constructor,setFax(Phone fax),The participant fax number.,Participant
com.paypal.api.payments.Participant,Default Constructor,setFirstName(java.lang.String firstName),The participant first name.,Participant
com.paypal.api.payments.Participant,Default Constructor,setLastName(java.lang.String lastName),The participant last name.,Participant
com.paypal.api.payments.Participant,Default Constructor,setPhone(Phone phone),The participant phone number.,Participant
com.paypal.api.payments.Participant,Default Constructor,setWebsite(java.lang.String website),The participant website.,Participant
com.paypal.api.payments.Patch,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Patch,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Patch,Default Constructor,getFrom(),A string containing a JSON Pointer value that references the location in the target document to move the value from.,java.lang.String
com.paypal.api.payments.Patch,Default Constructor,getOp(),The operation to perform.,java.lang.String
com.paypal.api.payments.Patch,Default Constructor,getPath(),A JSON pointer that references a location in the target document where the operation is performed.,java.lang.String
com.paypal.api.payments.Patch,Default Constructor,getValue(),New value to apply based on the operation.,java.lang.Object
com.paypal.api.payments.Patch,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Patch,Default Constructor,setFrom(java.lang.String from),A string containing a JSON Pointer value that references the location in the target document to move the value from.,Patch
com.paypal.api.payments.Patch,Default Constructor,setOp(java.lang.String op),The operation to perform.,Patch
com.paypal.api.payments.Patch,Default Constructor,setPath(java.lang.String path),A JSON pointer that references a location in the target document where the operation is performed.,Patch
com.paypal.api.payments.Patch,Default Constructor,setValue(java.lang.Object value),New value to apply based on the operation.,Patch
com.paypal.api.payments.PatchRequest,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PatchRequest,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PatchRequest,Default Constructor,getFrom(),A string containing a JSON Pointer value that references the location in the target document to move the value from.,java.lang.String
com.paypal.api.payments.PatchRequest,Default Constructor,getOp(),The operation to perform.,java.lang.String
com.paypal.api.payments.PatchRequest,Default Constructor,getPath(),string containing a JSON-Pointer value that references a location within the target document (the target location) where the operation is performed.,java.lang.String
com.paypal.api.payments.PatchRequest,Default Constructor,getValue(),New value to apply based on the operation.,java.lang.String
com.paypal.api.payments.PatchRequest,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PatchRequest,Default Constructor,setFrom(java.lang.String from),A string containing a JSON Pointer value that references the location in the target document to move the value from.,PatchRequest
com.paypal.api.payments.PatchRequest,Default Constructor,setOp(java.lang.String op),The operation to perform.,PatchRequest
com.paypal.api.payments.PatchRequest,Default Constructor,setPath(java.lang.String path),string containing a JSON-Pointer value that references a location within the target document (the target location) where the operation is performed.,PatchRequest
com.paypal.api.payments.PatchRequest,Default Constructor,setValue(java.lang.String value),New value to apply based on the operation.,PatchRequest
com.paypal.api.payments.Payee,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Payee,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Payee,Default Constructor,getAccountNumber(),Unencrypted PayPal account Number of the Payee,java.lang.String
com.paypal.api.payments.Payee,Default Constructor,getEmail(),Email Address associated with the Payee's PayPal Account.,java.lang.String
com.paypal.api.payments.Payee,Default Constructor,getFirstName(),First Name of the Payee.,java.lang.String
com.paypal.api.payments.Payee,Default Constructor,getLastName(),Last Name of the Payee.,java.lang.String
com.paypal.api.payments.Payee,Default Constructor,getMerchantId(),Encrypted PayPal account identifier for the Payee.,java.lang.String
com.paypal.api.payments.Payee,Default Constructor,getPhone(),Information related to the Payee.,Phone
com.paypal.api.payments.Payee,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Payee,Default Constructor,setAccountNumber(java.lang.String accountNumber),Unencrypted PayPal account Number of the Payee,Payee
com.paypal.api.payments.Payee,Default Constructor,setEmail(java.lang.String email),Email Address associated with the Payee's PayPal Account.,Payee
com.paypal.api.payments.Payee,Default Constructor,setFirstName(java.lang.String firstName),First Name of the Payee.,Payee
com.paypal.api.payments.Payee,Default Constructor,setLastName(java.lang.String lastName),Last Name of the Payee.,Payee
com.paypal.api.payments.Payee,Default Constructor,setMerchantId(java.lang.String merchantId),Encrypted PayPal account identifier for the Payee.,Payee
com.paypal.api.payments.Payee,Default Constructor,setPhone(Phone phone),Information related to the Payee.,Payee
com.paypal.api.payments.Payer,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Payer,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Payer,Default Constructor,getAccountAge(),Duration since the payer established account relationship with PayPal in days.,java.lang.String
com.paypal.api.payments.Payer,Default Constructor,getAccountType(),Type of account relationship payer has with PayPal.,java.lang.String
com.paypal.api.payments.Payer,Default Constructor,getExternalSelectedFundingInstrumentType(),Instrument type pre-selected by the user outside of PayPal and passed along the payment creation.,java.lang.String
com.paypal.api.payments.Payer,Default Constructor,getFundingInstruments(),List of funding instruments to fund the payment.,java.util.List<FundingInstrument>
com.paypal.api.payments.Payer,Default Constructor,getFundingOption(),Deprecated. ,FundingOption
com.paypal.api.payments.Payer,Default Constructor,getFundingOptionId(),"Id of user selected funding option for the payment.'OneOf' funding_instruments,funding_option_id to be used to identify the specifics of payment method passed.",java.lang.String
com.paypal.api.payments.Payer,Default Constructor,getPayerInfo(),Information related to the Payer.,PayerInfo
com.paypal.api.payments.Payer,Default Constructor,getPaymentMethod(),"Payment method being used - PayPal Wallet payment, Bank Direct Debit  or Direct Credit card.",java.lang.String
com.paypal.api.payments.Payer,Default Constructor,getRelatedFundingOption(),Funding option related to default funding option.,FundingOption
com.paypal.api.payments.Payer,Default Constructor,getStatus(),Status of payer's PayPal Account.,java.lang.String
com.paypal.api.payments.Payer,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Payer,Default Constructor,setAccountAge(java.lang.String accountAge),Duration since the payer established account relationship with PayPal in days.,Payer
com.paypal.api.payments.Payer,Default Constructor,setAccountType(java.lang.String accountType),Type of account relationship payer has with PayPal.,Payer
com.paypal.api.payments.Payer,Default Constructor,setExternalSelectedFundingInstrumentType(java.lang.String externalSelectedFundingInstrumentType),Instrument type pre-selected by the user outside of PayPal and passed along the payment creation.,Payer
com.paypal.api.payments.Payer,Default Constructor,setFundingInstruments(java.util.List<FundingInstrument> fundingInstruments),List of funding instruments to fund the payment.,Payer
com.paypal.api.payments.Payer,Default Constructor,setFundingOption(FundingOption fundingOption),Deprecated. ,Payer
com.paypal.api.payments.Payer,Default Constructor,setFundingOptionId(java.lang.String fundingOptionId),"Id of user selected funding option for the payment.'OneOf' funding_instruments,funding_option_id to be used to identify the specifics of payment method passed.",Payer
com.paypal.api.payments.Payer,Default Constructor,setPayerInfo(PayerInfo payerInfo),Information related to the Payer.,Payer
com.paypal.api.payments.Payer,Default Constructor,setPaymentMethod(java.lang.String paymentMethod),"Payment method being used - PayPal Wallet payment, Bank Direct Debit  or Direct Credit card.",Payer
com.paypal.api.payments.Payer,Default Constructor,setRelatedFundingOption(FundingOption relatedFundingOption),Funding option related to default funding option.,Payer
com.paypal.api.payments.Payer,Default Constructor,setStatus(java.lang.String status),Status of payer's PayPal Account.,Payer
com.paypal.api.payments.PayerInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayerInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayerInfo,Default Constructor,getAccountNumber(),"Deprecated. 
use buyerAccountNumber instead
",java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getBillingAddress(),Billing address of the Payer.,Address
com.paypal.api.payments.PayerInfo,Default Constructor,getBirthDate(),Birth date of the Payer in ISO8601 format (yyyy-mm-dd).,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getBuyerAccountNumber(),Account Number representing the Payer,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getCountryCode(),Two-letter registered country code of the payer to identify the buyer country.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getEmail(),Email address representing the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getExternalRememberMeId(),External Remember Me id representing the payer,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getFirstName(),First name of the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getLastName(),Last name of the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getMiddleName(),Middle name of the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getPayerId(),PayPal assigned encrypted Payer ID.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getPhone(),Phone number representing the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getPhoneType(),Phone type,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getSalutation(),Salutation of the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getShippingAddress(),"Deprecated. 
Use shipping address present in purchase unit or at root level of checkout Session.
",ShippingAddress
com.paypal.api.payments.PayerInfo,Default Constructor,getSuffix(),Suffix of the payer.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getTaxId(),Payer’s tax ID.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,getTaxIdType(),Payer’s tax ID type.,java.lang.String
com.paypal.api.payments.PayerInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayerInfo,Default Constructor,setAccountNumber(java.lang.String accountNumber),"Deprecated. 
use buyerAccountNumber instead
",PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setBillingAddress(Address billingAddress),Billing address of the Payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setBirthDate(java.lang.String birthDate),Birth date of the Payer in ISO8601 format (yyyy-mm-dd).,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setBuyerAccountNumber(java.lang.String buyerAccountNumber),Account Number representing the Payer,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setCountryCode(java.lang.String countryCode),Two-letter registered country code of the payer to identify the buyer country.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setEmail(java.lang.String email),Email address representing the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setExternalRememberMeId(java.lang.String externalRememberMeId),External Remember Me id representing the payer,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setFirstName(java.lang.String firstName),First name of the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setLastName(java.lang.String lastName),Last name of the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setMiddleName(java.lang.String middleName),Middle name of the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setPayerId(java.lang.String payerId),PayPal assigned encrypted Payer ID.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setPhone(java.lang.String phone),Phone number representing the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setPhoneType(java.lang.String phoneType),Phone type,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setSalutation(java.lang.String salutation),Salutation of the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setShippingAddress(ShippingAddress shippingAddress),"Deprecated. 
Use shipping address present in purchase unit or at root level of checkout Session.
",PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setSuffix(java.lang.String suffix),Suffix of the payer.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setTaxId(java.lang.String taxId),Payer’s tax ID.,PayerInfo
com.paypal.api.payments.PayerInfo,Default Constructor,setTaxIdType(java.lang.String taxIdType),Payer’s tax ID type.,PayerInfo
com.paypal.api.payments.PayerNotification,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayerNotification,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayerNotification,Default Constructor,getEmail(),Email Address associated with the Payer's PayPal Account.,java.lang.String
com.paypal.api.payments.PayerNotification,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayerNotification,Default Constructor,setEmail(java.lang.String email),Email Address associated with the Payer's PayPal Account.,PayerNotification
com.paypal.api.payments.Payment,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Payment,Default Constructor,create(APIContext apiContext),Creates and processes a payment.,Payment
com.paypal.api.payments.Payment,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",Payment
com.paypal.api.payments.Payment,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Payment,Default Constructor,"execute(APIContext apiContext,
       PaymentExecution paymentExecution)","Executes, or completes, a PayPal payment that the payer has approved.",Payment
com.paypal.api.payments.Payment,Default Constructor,"execute(java.lang.String accessToken,
       PaymentExecution paymentExecution)","Deprecated. 
Please use execute(APIContext, PaymentExecution) instead.
",Payment
com.paypal.api.payments.Payment,Default Constructor,"get(APIContext apiContext,
   java.lang.String paymentId)","Shows details for a payment, by ID.",static Payment
com.paypal.api.payments.Payment,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String paymentId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Payment
com.paypal.api.payments.Payment,Default Constructor,getBillingAgreementTokens(),Collection of PayPal generated billing agreement tokens.,java.util.List<BillingAgreementToken>
com.paypal.api.payments.Payment,Default Constructor,getCart(),ID of the cart to execute the payment.,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getCreateTime(),Payment creation time as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getCreditFinancingOffered(),Credit financing offered to payer on PayPal side.,CreditFinancingOffered
com.paypal.api.payments.Payment,Default Constructor,getExperienceProfileId(),PayPal generated identifier for the merchant's payment experience profile.,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getFailedTransactions(),Applicable for advanced payments like multi seller payment (MSP) to support partial failures,java.util.List<Error>
com.paypal.api.payments.Payment,Default Constructor,getFailureReason(),Failure reason code returned when the payment failed for some valid reasons.,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getId(),Identifier of the payment resource created.,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getIntent(),Payment intent.,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Payment,Default Constructor,getNoteToPayer(),free-form field for the use of clients to pass in a message to the payer,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getPayee(),Receiver of funds for this payment.,Payee
com.paypal.api.payments.Payment,Default Constructor,getPayer(),Source of the funds for this payment represented by a PayPal account or a direct credit card.,Payer
com.paypal.api.payments.Payment,Default Constructor,getPaymentInstruction(),Instructions for the payer to complete this payment.,PaymentInstruction
com.paypal.api.payments.Payment,Default Constructor,getPotentialPayerInfo(),Information that the merchant knows about the payer.,PotentialPayerInfo
com.paypal.api.payments.Payment,Default Constructor,getRedirectUrls(),Set of redirect URLs you provide only for PayPal-based payments.,RedirectUrls
com.paypal.api.payments.Payment,Default Constructor,getState(),"The state of the payment, authorization, or order transaction.",java.lang.String
com.paypal.api.payments.Payment,Default Constructor,getTransactions(),Transactional details including the amount and item details.,java.util.List<Transaction>
com.paypal.api.payments.Payment,Default Constructor,getUpdateTime(),Payment update time as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,java.lang.String
com.paypal.api.payments.Payment,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Payment,Default Constructor,"list(APIContext apiContext,
    java.util.Map<java.lang.String,java.lang.String> containerMap)",List payments that were made to the merchant who issues the request.,static PaymentHistory
com.paypal.api.payments.Payment,Default Constructor,"list(java.lang.String accessToken,
    java.util.Map<java.lang.String,java.lang.String> containerMap)","Deprecated. 
Please use list(APIContext, Map) instead.
",static PaymentHistory
com.paypal.api.payments.Payment,Default Constructor,setBillingAgreementTokens(java.util.List<BillingAgreementToken> billingAgreementTokens),Collection of PayPal generated billing agreement tokens.,Payment
com.paypal.api.payments.Payment,Default Constructor,setCart(java.lang.String cart),ID of the cart to execute the payment.,Payment
com.paypal.api.payments.Payment,Default Constructor,setCreateTime(java.lang.String createTime),Payment creation time as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,Payment
com.paypal.api.payments.Payment,Default Constructor,setCreditFinancingOffered(CreditFinancingOffered creditFinancingOffered),Credit financing offered to payer on PayPal side.,Payment
com.paypal.api.payments.Payment,Default Constructor,setExperienceProfileId(java.lang.String experienceProfileId),PayPal generated identifier for the merchant's payment experience profile.,Payment
com.paypal.api.payments.Payment,Default Constructor,setFailedTransactions(java.util.List<Error> failedTransactions),Applicable for advanced payments like multi seller payment (MSP) to support partial failures,Payment
com.paypal.api.payments.Payment,Default Constructor,setFailureReason(java.lang.String failureReason),Failure reason code returned when the payment failed for some valid reasons.,Payment
com.paypal.api.payments.Payment,Default Constructor,setId(java.lang.String id),Identifier of the payment resource created.,Payment
com.paypal.api.payments.Payment,Default Constructor,setIntent(java.lang.String intent),Payment intent.,Payment
com.paypal.api.payments.Payment,Default Constructor,setLinks(java.util.List<Links> links),N/A,Payment
com.paypal.api.payments.Payment,Default Constructor,setNoteToPayer(java.lang.String noteToPayer),free-form field for the use of clients to pass in a message to the payer,Payment
com.paypal.api.payments.Payment,Default Constructor,setPayee(Payee payee),Receiver of funds for this payment.,Payment
com.paypal.api.payments.Payment,Default Constructor,setPayer(Payer payer),Source of the funds for this payment represented by a PayPal account or a direct credit card.,Payment
com.paypal.api.payments.Payment,Default Constructor,setPaymentInstruction(PaymentInstruction paymentInstruction),Instructions for the payer to complete this payment.,Payment
com.paypal.api.payments.Payment,Default Constructor,setPotentialPayerInfo(PotentialPayerInfo potentialPayerInfo),Information that the merchant knows about the payer.,Payment
com.paypal.api.payments.Payment,Default Constructor,setRedirectUrls(RedirectUrls redirectUrls),Set of redirect URLs you provide only for PayPal-based payments.,Payment
com.paypal.api.payments.Payment,Default Constructor,setState(java.lang.String state),"The state of the payment, authorization, or order transaction.",Payment
com.paypal.api.payments.Payment,Default Constructor,setTransactions(java.util.List<Transaction> transactions),Transactional details including the amount and item details.,Payment
com.paypal.api.payments.Payment,Default Constructor,setUpdateTime(java.lang.String updateTime),Payment update time as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,Payment
com.paypal.api.payments.Payment,Default Constructor,"update(APIContext apiContext,
      java.util.List<Patch> patchRequest)",Partially update a payment resource by by passing the payment_id in the request URI.,void
com.paypal.api.payments.Payment,Default Constructor,"update(java.lang.String accessToken,
      java.util.List<Patch> patchRequest)","Deprecated. 
Please use update(APIContext, List) instad.
",void
com.paypal.api.payments.PaymentCard,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentCard,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentCard,Default Constructor,get3dSecureInfo(),"Deprecated. 
Please use getCard3dSecureInfo() instead.

 Getter for 3dSecureInfo
",Card3dSecureInfo
com.paypal.api.payments.PaymentCard,Default Constructor,getBillingAddress(),The billing address for the card.,Address
com.paypal.api.payments.PaymentCard,Default Constructor,getBillingCountry(),The two-letter country code.,CountryCode
com.paypal.api.payments.PaymentCard,Default Constructor,getCard3dSecureInfo(),Fields required to support 3d secure information when processing credit card payments.,Card3dSecureInfo
com.paypal.api.payments.PaymentCard,Default Constructor,getCardProductClass(),The product class of the financial instrument issuer.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getCvv2(),The validation code for the card.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getExpireMonth(),The two-digit expiry month for the card.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getExpireYear(),The four-digit expiry year for the card.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getExternalCustomerId(),The ID of the customer who owns this card account.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getFirstName(),The first name of the card holder.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getId(),The ID of a credit card to save for later use.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getIssueNumber(),The one- to two-digit card issue number.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getLastName(),The last name of the card holder.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getLinks(),N/A,java.util.List<DefinitionsLinkdescription>
com.paypal.api.payments.PaymentCard,Default Constructor,getNumber(),The card number.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getStartMonth(),The two-digit start month for the card.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getStartYear(),The four-digit start year for the card.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getStatus(),The state of the funding instrument.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getType(),The card type.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,getValidUntil(),The date and time until when this instrument can be used fund a payment.,java.lang.String
com.paypal.api.payments.PaymentCard,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentCard,Default Constructor,set3dSecureInfo(Card3dSecureInfo card3dSecureInfo),"Deprecated. 
Please use setCard3dSecureInfo(Card3dSecureInfo) instead.

 Setter for 3dSecureInfo
",PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setBillingAddress(Address billingAddress),The billing address for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setBillingCountry(CountryCode billingCountry),The two-letter country code.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setCard3dSecureInfo(Card3dSecureInfo card3dSecureInfo),Fields required to support 3d secure information when processing credit card payments.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setCardProductClass(java.lang.String cardProductClass),The product class of the financial instrument issuer.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setCvv2(java.lang.String cvv2),The validation code for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setExpireMonth(java.lang.String expireMonth),The two-digit expiry month for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setExpireYear(java.lang.String expireYear),The four-digit expiry year for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),The ID of the customer who owns this card account.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setFirstName(java.lang.String firstName),The first name of the card holder.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setId(java.lang.String id),The ID of a credit card to save for later use.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setIssueNumber(java.lang.String issueNumber),The one- to two-digit card issue number.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setLastName(java.lang.String lastName),The last name of the card holder.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setLinks(java.util.List<DefinitionsLinkdescription> links),N/A,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setNumber(java.lang.String number),The card number.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setStartMonth(java.lang.String startMonth),The two-digit start month for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setStartYear(java.lang.String startYear),The four-digit start year for the card.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setStatus(java.lang.String status),The state of the funding instrument.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setType(java.lang.String type),The card type.,PaymentCard
com.paypal.api.payments.PaymentCard,Default Constructor,setValidUntil(java.lang.String validUntil),The date and time until when this instrument can be used fund a payment.,PaymentCard
com.paypal.api.payments.PaymentCardToken,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentCardToken,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentCardToken,Default Constructor,getExpireMonth(),card expiry month from the saved card with value 1 - 12,int
com.paypal.api.payments.PaymentCardToken,Default Constructor,getExpireYear(),4 digit card expiry year from the saved card,int
com.paypal.api.payments.PaymentCardToken,Default Constructor,getExternalCustomerId(),The unique identifier of the payer used when saving this payment card.,java.lang.String
com.paypal.api.payments.PaymentCardToken,Default Constructor,getLast4(),Last 4 digits of the card number from the saved card.,java.lang.String
com.paypal.api.payments.PaymentCardToken,Default Constructor,getPaymentCardId(),ID of a previously saved Payment Card resource.,java.lang.String
com.paypal.api.payments.PaymentCardToken,Default Constructor,getType(),Type of the Card.,java.lang.String
com.paypal.api.payments.PaymentCardToken,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentCardToken,Default Constructor,setExpireMonth(int expireMonth),card expiry month from the saved card with value 1 - 12,PaymentCardToken
com.paypal.api.payments.PaymentCardToken,Default Constructor,setExpireYear(int expireYear),4 digit card expiry year from the saved card,PaymentCardToken
com.paypal.api.payments.PaymentCardToken,Default Constructor,setExternalCustomerId(java.lang.String externalCustomerId),The unique identifier of the payer used when saving this payment card.,PaymentCardToken
com.paypal.api.payments.PaymentCardToken,Default Constructor,setLast4(java.lang.String last4),Last 4 digits of the card number from the saved card.,PaymentCardToken
com.paypal.api.payments.PaymentCardToken,Default Constructor,setPaymentCardId(java.lang.String paymentCardId),ID of a previously saved Payment Card resource.,PaymentCardToken
com.paypal.api.payments.PaymentCardToken,Default Constructor,setType(java.lang.String type),Type of the Card.,PaymentCardToken
com.paypal.api.payments.PaymentDefinition,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentDefinition,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentDefinition,Default Constructor,getAmount(),Amount that will be charged at the end of each cycle for this payment definition.,Currency
com.paypal.api.payments.PaymentDefinition,Default Constructor,getChargeModels(),Array of charge_models for this payment definition.,java.util.List<ChargeModels>
com.paypal.api.payments.PaymentDefinition,Default Constructor,getCycles(),Number of cycles in this payment definition.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,getFrequency(),Frequency of the payment definition offered.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,getFrequencyInterval(),How frequently the customer should be charged.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,getId(),Identifier of the payment_definition.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,getName(),Name of the payment definition.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,getType(),Type of the payment definition.,java.lang.String
com.paypal.api.payments.PaymentDefinition,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentDefinition,Default Constructor,setAmount(Currency amount),Amount that will be charged at the end of each cycle for this payment definition.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setChargeModels(java.util.List<ChargeModels> chargeModels),Array of charge_models for this payment definition.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setCycles(java.lang.String cycles),Number of cycles in this payment definition.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setFrequency(java.lang.String frequency),Frequency of the payment definition offered.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setFrequencyInterval(java.lang.String frequencyInterval),How frequently the customer should be charged.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setId(java.lang.String id),Identifier of the payment_definition.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setName(java.lang.String name),Name of the payment definition.,PaymentDefinition
com.paypal.api.payments.PaymentDefinition,Default Constructor,setType(java.lang.String type),Type of the payment definition.,PaymentDefinition
com.paypal.api.payments.PaymentDetail,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentDetail,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentDetail,Default Constructor,getAmount(),The amount to record as payment against invoice.,Currency
com.paypal.api.payments.PaymentDetail,Default Constructor,getDate(),The date when the invoice was paid.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,getMethod(),The payment mode or method.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,getNote(),Optional.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,getTransactionId(),The PayPal payment transaction ID.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,getTransactionType(),Type of the transaction.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,getType(),The PayPal payment detail.,java.lang.String
com.paypal.api.payments.PaymentDetail,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentDetail,Default Constructor,setAmount(Currency amount),The amount to record as payment against invoice.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setDate(java.lang.String date),The date when the invoice was paid.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setMethod(java.lang.String method),The payment mode or method.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setNote(java.lang.String note),Optional.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setTransactionId(java.lang.String transactionId),The PayPal payment transaction ID.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setTransactionType(java.lang.String transactionType),Type of the transaction.,PaymentDetail
com.paypal.api.payments.PaymentDetail,Default Constructor,setType(java.lang.String type),The PayPal payment detail.,PaymentDetail
com.paypal.api.payments.PaymentExecution,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentExecution,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentExecution,Default Constructor,getCarrierAccountId(),Carrier account id for a carrier billing payment.,java.lang.String
com.paypal.api.payments.PaymentExecution,Default Constructor,getPayerId(),"The ID of the Payer, passed in the `return_url` by PayPal.",java.lang.String
com.paypal.api.payments.PaymentExecution,Default Constructor,getTransactions(),Transactional details including the amount and item details.,java.util.List<Transactions>
com.paypal.api.payments.PaymentExecution,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentExecution,Default Constructor,setCarrierAccountId(java.lang.String carrierAccountId),Carrier account id for a carrier billing payment.,PaymentExecution
com.paypal.api.payments.PaymentExecution,Default Constructor,setPayerId(java.lang.String payerId),"The ID of the Payer, passed in the `return_url` by PayPal.",PaymentExecution
com.paypal.api.payments.PaymentExecution,Default Constructor,setTransactions(java.util.List<Transactions> transactions),Transactional details including the amount and item details.,PaymentExecution
com.paypal.api.payments.PaymentHistory,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentHistory,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentHistory,Default Constructor,getCount(),Number of items returned in each range of results.,int
com.paypal.api.payments.PaymentHistory,Default Constructor,getNextId(),Identifier of the next element to get the next range of results.,java.lang.String
com.paypal.api.payments.PaymentHistory,Default Constructor,getPayments(),A list of Payment resources,java.util.List<Payment>
com.paypal.api.payments.PaymentHistory,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentHistory,Default Constructor,setCount(int count),Number of items returned in each range of results.,PaymentHistory
com.paypal.api.payments.PaymentHistory,Default Constructor,setNextId(java.lang.String nextId),Identifier of the next element to get the next range of results.,PaymentHistory
com.paypal.api.payments.PaymentHistory,Default Constructor,setPayments(java.util.List<Payment> payments),A list of Payment resources,PaymentHistory
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getAmount(),Amount to be transferred,Currency
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getInstructionType(),Type of payment instruction,java.lang.String
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getNote(),Additional text regarding payment handling,java.lang.String
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getPaymentDueDate(),Date by which payment should be received,java.lang.String
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getRecipientBankingInstruction(),Recipient bank Details.,RecipientBankingInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,getReferenceNumber(),ID of payment instruction,java.lang.String
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setAmount(Currency amount),Amount to be transferred,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setInstructionType(java.lang.String instructionType),Type of payment instruction,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setLinks(java.util.List<Links> links),N/A,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setNote(java.lang.String note),Additional text regarding payment handling,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setPaymentDueDate(java.lang.String paymentDueDate),Date by which payment should be received,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setRecipientBankingInstruction(RecipientBankingInstruction recipientBankingInstruction),Recipient bank Details.,PaymentInstruction
com.paypal.api.payments.PaymentInstruction,Parameterized Constructor,setReferenceNumber(java.lang.String referenceNumber),ID of payment instruction,PaymentInstruction
com.paypal.api.payments.PaymentOptions,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentOptions,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentOptions,Default Constructor,getAllowedPaymentMethod(),Payment method requested for this purchase unit,java.lang.String
com.paypal.api.payments.PaymentOptions,Default Constructor,getRecurringFlag(),Indicator if this payment request is a recurring payment.,java.lang.Boolean
com.paypal.api.payments.PaymentOptions,Default Constructor,getSkipFmf(),Indicator if fraud management filters (fmf) should be skipped for this transaction.,java.lang.Boolean
com.paypal.api.payments.PaymentOptions,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentOptions,Default Constructor,setAllowedPaymentMethod(java.lang.String allowedPaymentMethod),Payment method requested for this purchase unit,PaymentOptions
com.paypal.api.payments.PaymentOptions,Default Constructor,setRecurringFlag(java.lang.Boolean recurringFlag),Indicator if this payment request is a recurring payment.,PaymentOptions
com.paypal.api.payments.PaymentOptions,Default Constructor,setSkipFmf(java.lang.Boolean skipFmf),Indicator if fraud management filters (fmf) should be skipped for this transaction.,PaymentOptions
com.paypal.api.payments.PaymentSummary,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentSummary,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentSummary,Default Constructor,getOther(),Total Amount paid/refunded via other sources.,Currency
com.paypal.api.payments.PaymentSummary,Default Constructor,getPaypal(),Total Amount paid/refunded via PayPal.,Currency
com.paypal.api.payments.PaymentSummary,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentSummary,Default Constructor,setOther(Currency other),Total Amount paid/refunded via other sources.,PaymentSummary
com.paypal.api.payments.PaymentSummary,Default Constructor,setPaypal(Currency paypal),Total Amount paid/refunded via PayPal.,PaymentSummary
com.paypal.api.payments.PaymentTerm,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PaymentTerm,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PaymentTerm,Default Constructor,getDueDate(),The date when the invoice payment is due.,java.lang.String
com.paypal.api.payments.PaymentTerm,Default Constructor,getTermType(),The terms by which the invoice payment is due.,java.lang.String
com.paypal.api.payments.PaymentTerm,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PaymentTerm,Default Constructor,setDueDate(java.lang.String dueDate),The date when the invoice payment is due.,PaymentTerm
com.paypal.api.payments.PaymentTerm,Default Constructor,setTermType(java.lang.String termType),The terms by which the invoice payment is due.,PaymentTerm
com.paypal.api.payments.Payout,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Payout,Default Constructor,"create(APIContext apiContext,
      java.util.Map<java.lang.String,java.lang.String> parameters)","Create a payout batch resource by passing a sender_batch_header and an
 items array to the request URI.",PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,"create(java.lang.String accessToken,
      java.util.Map<java.lang.String,java.lang.String> parameters)","Deprecated. 
Please use create(APIContext, Map) instead.
",PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,createSynchronous(APIContext apiContext),"You can submit a payout with a synchronous API call, which immediately returns the results of a PayPal payment.",PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,createSynchronous(java.lang.String accessToken),"Deprecated. 
Please use createSynchronous(APIContext) instead.
",PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Payout,Default Constructor,"get(APIContext apiContext,
   java.lang.String payoutBatchId)","Obtain the status of a specific batch resource by passing the payout
 batch ID to the request URI.",static PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String payoutBatchId)","Deprecated. 
Please use get(APIContext, String) instead.
",static PayoutBatch
com.paypal.api.payments.Payout,Default Constructor,getItems(),"An array of payout items (that is, a set of individual payouts).",java.util.List<PayoutItem>
com.paypal.api.payments.Payout,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Payout,Default Constructor,getSenderBatchHeader(),The original batch header as provided by the payment sender.,PayoutSenderBatchHeader
com.paypal.api.payments.Payout,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Payout,Default Constructor,setItems(java.util.List<PayoutItem> items),"An array of payout items (that is, a set of individual payouts).",Payout
com.paypal.api.payments.Payout,Default Constructor,setLinks(java.util.List<Links> links),N/A,Payout
com.paypal.api.payments.Payout,Default Constructor,setSenderBatchHeader(PayoutSenderBatchHeader senderBatchHeader),The original batch header as provided by the payment sender.,Payout
com.paypal.api.payments.PayoutBatch,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayoutBatch,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayoutBatch,Default Constructor,getBatchHeader(),A batch header.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatch,Default Constructor,getItems(),An array of items in a batch payout.,java.util.List<PayoutItemDetails>
com.paypal.api.payments.PayoutBatch,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.PayoutBatch,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayoutBatch,Default Constructor,setBatchHeader(PayoutBatchHeader batchHeader),A batch header.,PayoutBatch
com.paypal.api.payments.PayoutBatch,Default Constructor,setItems(java.util.List<PayoutItemDetails> items),An array of items in a batch payout.,PayoutBatch
com.paypal.api.payments.PayoutBatch,Default Constructor,setLinks(java.util.List<Links> links),N/A,PayoutBatch
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getAmount(),"Total amount, in U.S.",Currency
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getBatchStatus(),The PayPal-generated batch payout status.,java.lang.String
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getErrors(),N/A,Error
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getFees(),Total estimate in U.S.,Currency
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getPayoutBatchId(),The PayPal-generated ID for a batch payout.,java.lang.String
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getSenderBatchHeader(),The original batch header as provided by the payment sender.,PayoutSenderBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getTimeCompleted(),The time that processing for the batch was completed.,java.lang.String
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,getTimeCreated(),The time the batch entered processing.,java.lang.String
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setAmount(Currency amount),"Total amount, in U.S.",PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setBatchStatus(java.lang.String batchStatus),The PayPal-generated batch payout status.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setErrors(Error errors),N/A,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setFees(Currency fees),Total estimate in U.S.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setLinks(java.util.List<Links> links),N/A,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setPayoutBatchId(java.lang.String payoutBatchId),The PayPal-generated ID for a batch payout.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setSenderBatchHeader(PayoutSenderBatchHeader senderBatchHeader),The original batch header as provided by the payment sender.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setTimeCompleted(java.lang.String timeCompleted),The time that processing for the batch was completed.,PayoutBatchHeader
com.paypal.api.payments.PayoutBatchHeader,Default Constructor,setTimeCreated(java.lang.String timeCreated),The time the batch entered processing.,PayoutBatchHeader
com.paypal.api.payments.PayoutItem,Default Constructor,"cancel(APIContext apiContext,
      java.lang.String payoutItemId)","Cancels the unclaimed payment using the items id passed in the request
 URI.",static PayoutItemDetails
com.paypal.api.payments.PayoutItem,Default Constructor,"cancel(java.lang.String accessToken,
      java.lang.String payoutItemId)","Deprecated. 
Please use cancel(APIContext, String) instead.
",static PayoutItemDetails
com.paypal.api.payments.PayoutItem,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayoutItem,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayoutItem,Default Constructor,"get(APIContext apiContext,
   java.lang.String payoutItemId)","Obtain the status of a payout item by passing the item ID to the request
 URI.",static PayoutItemDetails
com.paypal.api.payments.PayoutItem,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String payoutItemId)","Deprecated. 
Please use get(APIContext, String) instead.
",static PayoutItemDetails
com.paypal.api.payments.PayoutItem,Default Constructor,getAmount(),The amount of money to pay the receiver.,Currency
com.paypal.api.payments.PayoutItem,Default Constructor,getNote(),Optional.,java.lang.String
com.paypal.api.payments.PayoutItem,Default Constructor,getReceiver(),The receiver of the payment.,java.lang.String
com.paypal.api.payments.PayoutItem,Default Constructor,getRecipientType(),The type of ID that identifies the payment receiver.,java.lang.String
com.paypal.api.payments.PayoutItem,Default Constructor,getSenderItemId(),A sender-specified ID number.,java.lang.String
com.paypal.api.payments.PayoutItem,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayoutItem,Default Constructor,setAmount(Currency amount),The amount of money to pay the receiver.,PayoutItem
com.paypal.api.payments.PayoutItem,Default Constructor,setNote(java.lang.String note),Optional.,PayoutItem
com.paypal.api.payments.PayoutItem,Default Constructor,setReceiver(java.lang.String receiver),The receiver of the payment.,PayoutItem
com.paypal.api.payments.PayoutItem,Default Constructor,setRecipientType(java.lang.String recipientType),The type of ID that identifies the payment receiver.,PayoutItem
com.paypal.api.payments.PayoutItem,Default Constructor,setSenderItemId(java.lang.String senderItemId),A sender-specified ID number.,PayoutItem
com.paypal.api.payments.PayoutItemDetails,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayoutItemDetails,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getError(),Getter for error.,Error
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getErrors(),N/A,Error
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getLinks(),The HATEOAS links related to the call.,java.util.List<Links>
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getPayoutBatchId(),The PayPal-generated ID for the batch payout.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getPayoutItem(),The sender-provided information for the payout item.,PayoutItem
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getPayoutItemFee(),"The amount of money, in U.S.",Currency
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getPayoutItemId(),The ID for the payout item.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getSenderBatchId(),A sender-specified ID number.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getTimeProcessed(),The date and time when this item was last processed.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getTransactionId(),The PayPal-generated ID for the transaction.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,getTransactionStatus(),The transaction status.,java.lang.String
com.paypal.api.payments.PayoutItemDetails,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setError(Error error),Setter for error.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setErrors(Error errors),N/A,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setLinks(java.util.List<Links> links),The HATEOAS links related to the call.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setPayoutBatchId(java.lang.String payoutBatchId),The PayPal-generated ID for the batch payout.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setPayoutItem(PayoutItem payoutItem),The sender-provided information for the payout item.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setPayoutItemFee(Currency payoutItemFee),"The amount of money, in U.S.",PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setPayoutItemId(java.lang.String payoutItemId),The ID for the payout item.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setSenderBatchId(java.lang.String senderBatchId),A sender-specified ID number.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setTimeProcessed(java.lang.String timeProcessed),The date and time when this item was last processed.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setTransactionId(java.lang.String transactionId),The PayPal-generated ID for the transaction.,PayoutItemDetails
com.paypal.api.payments.PayoutItemDetails,Default Constructor,setTransactionStatus(java.lang.String transactionStatus),The transaction status.,PayoutItemDetails
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,getEmailSubject(),The subject line text for the email that PayPal sends when a payout item completes.,java.lang.String
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,getRecipientType(),The type of ID that identifies the payment receiver.,java.lang.String
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,getSenderBatchId(),A sender-specified ID number.,java.lang.String
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,setEmailSubject(java.lang.String emailSubject),The subject line text for the email that PayPal sends when a payout item completes.,PayoutSenderBatchHeader
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,setRecipientType(java.lang.String recipientType),The type of ID that identifies the payment receiver.,PayoutSenderBatchHeader
com.paypal.api.payments.PayoutSenderBatchHeader,Default Constructor,setSenderBatchId(java.lang.String senderBatchId),A sender-specified ID number.,PayoutSenderBatchHeader
com.paypal.base.exception.PayPalException,A PayPalException is thrown to signal a problem during SDK execution.,N/A,N/A,N/A
com.paypal.base.rest.PayPalModel,Returns a JSON string corresponding to object state,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.base.rest.PayPalModel,Returns a JSON string corresponding to object state,equals(java.lang.Object o),N/A,boolean
com.paypal.base.rest.PayPalModel,Returns a JSON string corresponding to object state,hashCode(),N/A,int
com.paypal.base.rest.PayPalModel,Returns a JSON string corresponding to object state,toJSON(),Returns a JSON string corresponding to object state,java.lang.String
com.paypal.base.rest.PayPalModel,Returns a JSON string corresponding to object state,toString(),N/A,java.lang.String
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,"configureAndExecute(APIContext apiContext,
                   HttpMethod httpMethod,
                   java.lang.String resourcePath,
                   java.util.Map<java.lang.String,java.lang.String> headersMap,
                   java.lang.String payLoad,
                   java.lang.Class<T> clazz)","Deprecated. 
Please use configureAndExecute(APIContext, HttpMethod, String, String, Class) instead. Headers could be passed directly
 to #APIContext itself.
",static <T> T
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,"configureAndExecute(APIContext apiContext,
                   HttpMethod httpMethod,
                   java.lang.String resourcePath,
                   java.lang.String payLoad,
                   java.lang.Class<T> clazz)",Configures and executes REST call,static <T> T
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,"configureAndExecute(APIContext apiContext,
                   HttpMethod httpMethod,
                   java.lang.String resourcePath,
                   java.lang.String payLoad,
                   java.lang.Class<T> clazz,
                   java.lang.String accessToken)",Configures and executes REST call: Supports JSON,static <T> T
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,"configureAndExecute(java.lang.String accessToken,
                   HttpMethod httpMethod,
                   java.lang.String resourcePath,
                   java.lang.String payLoad,
                   java.lang.Class<T> clazz)","Deprecated. 
Please use configureAndExecute(APIContext, HttpMethod, String, String, Class) instead.
 Passing APIContext gives us better information than just raw access token.
",static <T> T
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,"createAPICallPreHandler(java.util.Map<java.lang.String,java.lang.String> configurationMap,
                       java.lang.String payLoad,
                       java.lang.String resourcePath,
                       java.util.Map<java.lang.String,java.lang.String> headersMap,
                       java.lang.String accessToken,
                       java.lang.String requestId,
                       SDKVersion sdkVersion)","Returns a implementation of APICallPreHandler for the underlying
 layer.",static APICallPreHandler
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getClientCredential(),"Deprecated. 
Please use static method `getCredential` instead.

 Returns ClientCredentials with client id and client secret from configuration Map.
",ClientCredentials
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getClientID(),Return Client ID from configuration Map,static java.lang.String
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getClientSecret(),Returns Client Secret from configuration Map,static java.lang.String
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getConfigurations(),N/A,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getCredential(),Returns ClientCredentials with client id and client secret from configuration Map,static ClientCredentials
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getLastRequest(),Returns the last request sent to the Service,static java.lang.String
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getLastResponse(),Returns the last response returned by the Service,static java.lang.String
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,getOAuthTokenCredential(),Returns OAuthTokenCredential instance using client ID and client secret loaded from configuration.,static OAuthTokenCredential
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,initConfig(java.io.File file),Initialize the system using a File(Properties file).,static OAuthTokenCredential
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,initConfig(java.io.InputStream inputStream),Initialize using InputStream(of a Properties file)..,static OAuthTokenCredential
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,initConfig(java.util.Properties properties),Initialize using Properties.,static OAuthTokenCredential
com.paypal.base.rest.PayPalResource,PayPalResource acts as a base class for REST enabled resources.,initializeToDefault(),Initialize to default properties,static void
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,createFromHttpErrorException(HttpErrorException httpErrorException),Utility method that creates a PayPalRESTException object from HttpErrorException.,protected static PayPalRESTException
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,getDetails(),N/A,Error
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,getResponsecode(),N/A,int
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,setDetails(Error details),N/A,void
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,setResponsecode(int responsecode),N/A,void
com.paypal.base.rest.PayPalRESTException,PayPalException handles all exceptions related to REST services,toString(),N/A,java.lang.String
com.paypal.base.util.PayPalURLEncoder,"Encodes the given string s in a x-www-form-urlencoded string
 using the specified encoding scheme enc.","encode(java.lang.String s,
      java.lang.String enc)","Encodes the given string s in a x-www-form-urlencoded string
 using the specified encoding scheme enc.",static java.lang.String
com.paypal.api.payments.Percentage,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Percentage,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Percentage,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Phone,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Phone,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Phone,Default Constructor,getCountryCode(),Country code (from in E.164 format),java.lang.String
com.paypal.api.payments.Phone,Default Constructor,getExtension(),Phone extension,java.lang.String
com.paypal.api.payments.Phone,Default Constructor,getNationalNumber(),In-country phone number (from in E.164 format),java.lang.String
com.paypal.api.payments.Phone,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Phone,Default Constructor,setCountryCode(java.lang.String countryCode),Country code (from in E.164 format),Phone
com.paypal.api.payments.Phone,Default Constructor,setExtension(java.lang.String extension),Phone extension,Phone
com.paypal.api.payments.Phone,Default Constructor,setNationalNumber(java.lang.String nationalNumber),In-country phone number (from in E.164 format),Phone
com.paypal.api.payments.Plan,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Plan,Default Constructor,create(APIContext apiContext),"Create a new billing plan by passing the details for the plan, including the plan name, description, and type, to the request URI.",Plan
com.paypal.api.payments.Plan,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",Plan
com.paypal.api.payments.Plan,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Plan,Default Constructor,"get(APIContext apiContext,
   java.lang.String planId)",Retrieve the details for a particular billing plan by passing the billing plan ID to the request URI.,static Plan
com.paypal.api.payments.Plan,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String planId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Plan
com.paypal.api.payments.Plan,Default Constructor,getCreateTime(),Time when the billing plan was created.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getDescription(),Description of the billing plan.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getId(),Identifier of the billing plan.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Plan,Default Constructor,getMerchantPreferences(),"Specific preferences such as: set up fee, max fail attempts, autobill amount, and others that are configured for this billing plan.",MerchantPreferences
com.paypal.api.payments.Plan,Default Constructor,getName(),Name of the billing plan.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getPaymentDefinitions(),Array of payment definitions for this billing plan.,java.util.List<PaymentDefinition>
com.paypal.api.payments.Plan,Default Constructor,getState(),Status of the billing plan.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getTerms(),Array of terms for this billing plan.,java.util.List<Terms>
com.paypal.api.payments.Plan,Default Constructor,getType(),Type of the billing plan.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,getUpdateTime(),Time when this billing plan was updated.,java.lang.String
com.paypal.api.payments.Plan,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Plan,Default Constructor,"list(APIContext apiContext,
    java.util.Map<java.lang.String,java.lang.String> containerMap)",List billing plans according to optional query string parameters specified.,static PlanList
com.paypal.api.payments.Plan,Default Constructor,"list(java.lang.String accessToken,
    java.util.Map<java.lang.String,java.lang.String> containerMap)","Deprecated. 
Please use list(APIContext, Map) instead.
",static PlanList
com.paypal.api.payments.Plan,Default Constructor,setCreateTime(java.lang.String createTime),Time when the billing plan was created.,Plan
com.paypal.api.payments.Plan,Default Constructor,setDescription(java.lang.String description),Description of the billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setId(java.lang.String id),Identifier of the billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setLinks(java.util.List<Links> links),N/A,Plan
com.paypal.api.payments.Plan,Default Constructor,setMerchantPreferences(MerchantPreferences merchantPreferences),"Specific preferences such as: set up fee, max fail attempts, autobill amount, and others that are configured for this billing plan.",Plan
com.paypal.api.payments.Plan,Default Constructor,setName(java.lang.String name),Name of the billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setPaymentDefinitions(java.util.List<PaymentDefinition> paymentDefinitions),Array of payment definitions for this billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setState(java.lang.String state),Status of the billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setTerms(java.util.List<Terms> terms),Array of terms for this billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setType(java.lang.String type),Type of the billing plan.,Plan
com.paypal.api.payments.Plan,Default Constructor,setUpdateTime(java.lang.String updateTime),Time when this billing plan was updated.,Plan
com.paypal.api.payments.Plan,Default Constructor,"update(APIContext apiContext,
      java.util.List<Patch> patchRequest)",Replace specific fields within a billing plan by passing the ID of the billing plan to the request URI.,void
com.paypal.api.payments.Plan,Default Constructor,"update(java.lang.String accessToken,
      java.util.List<Patch> patchRequest)","Deprecated. 
Please use update(APIContext, List) instead.
",void
com.paypal.api.payments.PlanList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PlanList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PlanList,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.PlanList,Default Constructor,getPlans(),Array of billing plans.,java.util.List<Plan>
com.paypal.api.payments.PlanList,Default Constructor,getTotalItems(),Total number of items.,java.lang.String
com.paypal.api.payments.PlanList,Default Constructor,getTotalPages(),Total number of pages.,java.lang.String
com.paypal.api.payments.PlanList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PlanList,Default Constructor,setLinks(java.util.List<Links> links),N/A,PlanList
com.paypal.api.payments.PlanList,Default Constructor,setPlans(java.util.List<Plan> plans),Array of billing plans.,PlanList
com.paypal.api.payments.PlanList,Default Constructor,setTotalItems(java.lang.String totalItems),Total number of items.,PlanList
com.paypal.api.payments.PlanList,Default Constructor,setTotalPages(java.lang.String totalPages),Total number of pages.,PlanList
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,getAccountNumber(),Account Number representing the potential payer,java.lang.String
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,getBillingAddress(),Billing address of the potential payer.,Address
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,getEmail(),Email address representing the potential payer.,java.lang.String
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,getExternalRememberMeId(),ExternalRememberMe id representing the potential payer,java.lang.String
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,setAccountNumber(java.lang.String accountNumber),Account Number representing the potential payer,PotentialPayerInfo
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,setBillingAddress(Address billingAddress),Billing address of the potential payer.,PotentialPayerInfo
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,setEmail(java.lang.String email),Email address representing the potential payer.,PotentialPayerInfo
com.paypal.api.payments.PotentialPayerInfo,Default Constructor,setExternalRememberMeId(java.lang.String externalRememberMeId),ExternalRememberMe id representing the potential payer,PotentialPayerInfo
com.paypal.api.payments.Presentation,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Presentation,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Presentation,Default Constructor,getBrandName(),A label that overrides the business name in the PayPal account on the PayPal pages.,java.lang.String
com.paypal.api.payments.Presentation,Default Constructor,getLocaleCode(),The locale of pages displayed by PayPal payment experience.,java.lang.String
com.paypal.api.payments.Presentation,Default Constructor,getLogoImage(),A URL to the logo image.,java.lang.String
com.paypal.api.payments.Presentation,Default Constructor,getNoteToSellerLabel(),A label to use as the title for the note to seller field.,java.lang.String
com.paypal.api.payments.Presentation,Default Constructor,getReturnUrlLabel(),A label to use as hypertext for the return to merchant link.,java.lang.String
com.paypal.api.payments.Presentation,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Presentation,Default Constructor,setBrandName(java.lang.String brandName),A label that overrides the business name in the PayPal account on the PayPal pages.,Presentation
com.paypal.api.payments.Presentation,Default Constructor,setLocaleCode(java.lang.String localeCode),The locale of pages displayed by PayPal payment experience.,Presentation
com.paypal.api.payments.Presentation,Default Constructor,setLogoImage(java.lang.String logoImage),A URL to the logo image.,Presentation
com.paypal.api.payments.Presentation,Default Constructor,setNoteToSellerLabel(java.lang.String noteToSellerLabel),A label to use as the title for the note to seller field.,Presentation
com.paypal.api.payments.Presentation,Default Constructor,setReturnUrlLabel(java.lang.String returnUrlLabel),A label to use as hypertext for the return to merchant link.,Presentation
com.paypal.api.payments.PrivateLabelCard,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.PrivateLabelCard,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.PrivateLabelCard,Default Constructor,getCardNumber(),last 4 digits of the card number.,java.lang.String
com.paypal.api.payments.PrivateLabelCard,Default Constructor,getId(),encrypted identifier of the private label card instrument.,java.lang.String
com.paypal.api.payments.PrivateLabelCard,Default Constructor,getImageKey(),This value indicates URL to access PLCC program logo image,java.lang.String
com.paypal.api.payments.PrivateLabelCard,Default Constructor,getIssuerId(),Merchants providing private label store cards have associated issuer account.,java.lang.String
com.paypal.api.payments.PrivateLabelCard,Default Constructor,getIssuerName(),Merchants providing private label store cards have associated issuer account.,java.lang.String
com.paypal.api.payments.PrivateLabelCard,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.PrivateLabelCard,Default Constructor,setCardNumber(java.lang.String cardNumber),last 4 digits of the card number.,PrivateLabelCard
com.paypal.api.payments.PrivateLabelCard,Default Constructor,setId(java.lang.String id),encrypted identifier of the private label card instrument.,PrivateLabelCard
com.paypal.api.payments.PrivateLabelCard,Default Constructor,setImageKey(java.lang.String imageKey),This value indicates URL to access PLCC program logo image,PrivateLabelCard
com.paypal.api.payments.PrivateLabelCard,Default Constructor,setIssuerId(java.lang.String issuerId),Merchants providing private label store cards have associated issuer account.,PrivateLabelCard
com.paypal.api.payments.PrivateLabelCard,Default Constructor,setIssuerName(java.lang.String issuerName),Merchants providing private label store cards have associated issuer account.,PrivateLabelCard
com.paypal.api.payments.ProcessorResponse,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ProcessorResponse,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ProcessorResponse,Default Constructor,getAdviceCode(),Provides merchant advice on how to handle declines related to recurring payments,java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,getAvsCode(),Address Verification System response code.,java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,getCvvCode(),CVV System response code.,java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,getEciSubmitted(),Response back from the authorization.,java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,getResponseCode(),"Paypal normalized response code, generated from the processor's specific response code",java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,getVpas(),Visa Payer Authentication Service status.,java.lang.String
com.paypal.api.payments.ProcessorResponse,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ProcessorResponse,Default Constructor,setAdviceCode(java.lang.String adviceCode),Provides merchant advice on how to handle declines related to recurring payments,ProcessorResponse
com.paypal.api.payments.ProcessorResponse,Default Constructor,setAvsCode(java.lang.String avsCode),Address Verification System response code.,ProcessorResponse
com.paypal.api.payments.ProcessorResponse,Default Constructor,setCvvCode(java.lang.String cvvCode),CVV System response code.,ProcessorResponse
com.paypal.api.payments.ProcessorResponse,Default Constructor,setEciSubmitted(java.lang.String eciSubmitted),Response back from the authorization.,ProcessorResponse
com.paypal.api.payments.ProcessorResponse,Default Constructor,setResponseCode(java.lang.String responseCode),"Paypal normalized response code, generated from the processor's specific response code",ProcessorResponse
com.paypal.api.payments.ProcessorResponse,Default Constructor,setVpas(java.lang.String vpas),Visa Payer Authentication Service status.,ProcessorResponse
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",getContainerMap(),N/A,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setCount(java.lang.String count),Set the count,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setEndTime(java.lang.String endTime),Set the endTime,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setPayeeId(java.lang.String payeeId),Set the payeeId,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setSortBy(java.lang.String sortBy),Set the sortBy,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setSortOrder(java.lang.String sortOrder),Set the sortOrder,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setStartId(java.lang.String startId),Set the startId,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setStartIndex(java.lang.String startIndex),Set the startIndex,void
com.paypal.base.rest.QueryParameters,"QueryParameters holds query parameters used for retrieving
 PaymentHistory object.",setStartTime(java.lang.String startTime),Set the startTime,void
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getAccountHolderName(),Name of the account holder,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getAccountNumber(),bank account number,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getBankIdentifierCode(),BIC identifier of the financial institution,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getBankName(),Name of the financial institution.,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getInternationalBankAccountNumber(),IBAN equivalent of the bank,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,getRoutingNumber(),bank routing number,java.lang.String
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setAccountHolderName(java.lang.String accountHolderName),Name of the account holder,RecipientBankingInstruction
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setAccountNumber(java.lang.String accountNumber),bank account number,RecipientBankingInstruction
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setBankIdentifierCode(java.lang.String bankIdentifierCode),BIC identifier of the financial institution,RecipientBankingInstruction
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setBankName(java.lang.String bankName),Name of the financial institution.,RecipientBankingInstruction
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setInternationalBankAccountNumber(java.lang.String internationalBankAccountNumber),IBAN equivalent of the bank,RecipientBankingInstruction
com.paypal.api.payments.RecipientBankingInstruction,Default Constructor,setRoutingNumber(java.lang.String routingNumber),bank routing number,RecipientBankingInstruction
com.paypal.api.payments.RedirectUrls,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.RedirectUrls,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.RedirectUrls,Default Constructor,getCancelUrl(),Url where the payer would be redirected to after canceling the payment.,java.lang.String
com.paypal.api.payments.RedirectUrls,Default Constructor,getReturnUrl(),Url where the payer would be redirected to after approving the payment.,java.lang.String
com.paypal.api.payments.RedirectUrls,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.RedirectUrls,Default Constructor,setCancelUrl(java.lang.String cancelUrl),Url where the payer would be redirected to after canceling the payment.,RedirectUrls
com.paypal.api.payments.RedirectUrls,Default Constructor,setReturnUrl(java.lang.String returnUrl),Url where the payer would be redirected to after approving the payment.,RedirectUrls
com.paypal.base.ReflectionUtil,N/A,"decodeResponseObject(java.lang.Object responseType,
                    java.lang.String prefix)",N/A,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.ReflectionUtil,N/A,"generateMapFromResponse(java.lang.Object responseType,
                       java.lang.String prefix)",N/A,"static java.util.Map<java.lang.String,java.lang.Object>"
com.paypal.api.payments.Refund,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Refund,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Refund,Default Constructor,"get(APIContext apiContext,
   java.lang.String refundId)","Shows details for a refund, by ID.",static Refund
com.paypal.api.payments.Refund,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String refundId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Refund
com.paypal.api.payments.Refund,Default Constructor,getAmount(),Details including both refunded amount (to payer) and refunded fee (to payee).,Amount
com.paypal.api.payments.Refund,Default Constructor,getCaptureId(),ID of the sale transaction being refunded.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getCreateTime(),Time of refund as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getDescription(),Description of what is being refunded for.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getId(),ID of the refund transaction.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getInvoiceNumber(),Your own invoice or tracking ID number.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Refund,Default Constructor,getParentPayment(),ID of the payment resource on which this transaction is based.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getReason(),Reason description for the Sale transaction being refunded.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getReasonCode(),The reason code for the refund state being pending,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getSaleId(),ID of the Sale transaction being refunded.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getState(),State of the refund.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,getUpdateTime(),Time that the resource was last updated.,java.lang.String
com.paypal.api.payments.Refund,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Refund,Default Constructor,setAmount(Amount amount),Details including both refunded amount (to payer) and refunded fee (to payee).,Refund
com.paypal.api.payments.Refund,Default Constructor,setCaptureId(java.lang.String captureId),ID of the sale transaction being refunded.,Refund
com.paypal.api.payments.Refund,Default Constructor,setCreateTime(java.lang.String createTime),Time of refund as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6).,Refund
com.paypal.api.payments.Refund,Default Constructor,setDescription(java.lang.String description),Description of what is being refunded for.,Refund
com.paypal.api.payments.Refund,Default Constructor,setId(java.lang.String id),ID of the refund transaction.,Refund
com.paypal.api.payments.Refund,Default Constructor,setInvoiceNumber(java.lang.String invoiceNumber),Your own invoice or tracking ID number.,Refund
com.paypal.api.payments.Refund,Default Constructor,setLinks(java.util.List<Links> links),N/A,Refund
com.paypal.api.payments.Refund,Default Constructor,setParentPayment(java.lang.String parentPayment),ID of the payment resource on which this transaction is based.,Refund
com.paypal.api.payments.Refund,Default Constructor,setReason(java.lang.String reason),Reason description for the Sale transaction being refunded.,Refund
com.paypal.api.payments.Refund,Default Constructor,setReasonCode(java.lang.String reasonCode),The reason code for the refund state being pending,Refund
com.paypal.api.payments.Refund,Default Constructor,setSaleId(java.lang.String saleId),ID of the Sale transaction being refunded.,Refund
com.paypal.api.payments.Refund,Default Constructor,setState(java.lang.String state),State of the refund.,Refund
com.paypal.api.payments.Refund,Default Constructor,setUpdateTime(java.lang.String updateTime),Time that the resource was last updated.,Refund
com.paypal.api.payments.RefundDetail,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.RefundDetail,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.RefundDetail,Default Constructor,getAmount(),Amount to be recorded as refund against invoice.,Currency
com.paypal.api.payments.RefundDetail,Default Constructor,getDate(),Date on which the invoice was refunded.,java.lang.String
com.paypal.api.payments.RefundDetail,Default Constructor,getNote(),Optional note associated with the refund.,java.lang.String
com.paypal.api.payments.RefundDetail,Default Constructor,getTransactionId(),The PayPal refund transaction ID.,java.lang.String
com.paypal.api.payments.RefundDetail,Default Constructor,getType(),The PayPal refund type.,java.lang.String
com.paypal.api.payments.RefundDetail,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.RefundDetail,Default Constructor,setAmount(Currency amount),Amount to be recorded as refund against invoice.,RefundDetail
com.paypal.api.payments.RefundDetail,Default Constructor,setDate(java.lang.String date),Date on which the invoice was refunded.,RefundDetail
com.paypal.api.payments.RefundDetail,Default Constructor,setNote(java.lang.String note),Optional note associated with the refund.,RefundDetail
com.paypal.api.payments.RefundDetail,Default Constructor,setTransactionId(java.lang.String transactionId),The PayPal refund transaction ID.,RefundDetail
com.paypal.api.payments.RefundDetail,Default Constructor,setType(java.lang.String type),The PayPal refund type.,RefundDetail
com.paypal.api.payments.RefundRequest,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.RefundRequest,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.RefundRequest,Default Constructor,getAmount(),Details including both refunded amount (to payer) and refunded fee (to payee).,Amount
com.paypal.api.payments.RefundRequest,Default Constructor,getDescription(),Description of what is being refunded for.,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,getInvoiceNumber(),The invoice number that is used to track this payment.,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,getIsNonPlatformTransaction(),It indicates that the resource id passed is not processed by payments platform,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,getReason(),Reason description for the Sale transaction being refunded.,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,getRefundAdvice(),Flag to indicate that the buyer was already given store credit for a given transaction.,java.lang.Boolean
com.paypal.api.payments.RefundRequest,Default Constructor,getRefundSource(),Type of PayPal funding source (balance or eCheck) that can be used for auto refund.,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,getRefundType(),Type of refund you are making.,java.lang.String
com.paypal.api.payments.RefundRequest,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.RefundRequest,Default Constructor,setAmount(Amount amount),Details including both refunded amount (to payer) and refunded fee (to payee).,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setDescription(java.lang.String description),Description of what is being refunded for.,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setInvoiceNumber(java.lang.String invoiceNumber),The invoice number that is used to track this payment.,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setIsNonPlatformTransaction(java.lang.String isNonPlatformTransaction),It indicates that the resource id passed is not processed by payments platform,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setReason(java.lang.String reason),Reason description for the Sale transaction being refunded.,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setRefundAdvice(java.lang.Boolean refundAdvice),Flag to indicate that the buyer was already given store credit for a given transaction.,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setRefundSource(java.lang.String refundSource),Type of PayPal funding source (balance or eCheck) that can be used for auto refund.,RefundRequest
com.paypal.api.payments.RefundRequest,Default Constructor,setRefundType(java.lang.String refundType),Type of refund you are making.,RefundRequest
com.paypal.api.payments.RelatedResources,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.RelatedResources,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.RelatedResources,Default Constructor,getAuthorization(),Authorization transaction,Authorization
com.paypal.api.payments.RelatedResources,Default Constructor,getCapture(),Capture transaction,Capture
com.paypal.api.payments.RelatedResources,Default Constructor,getOrder(),Order transaction,Order
com.paypal.api.payments.RelatedResources,Default Constructor,getRefund(),Refund transaction,Refund
com.paypal.api.payments.RelatedResources,Default Constructor,getSale(),Sale transaction,Sale
com.paypal.api.payments.RelatedResources,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.RelatedResources,Default Constructor,setAuthorization(Authorization authorization),Authorization transaction,RelatedResources
com.paypal.api.payments.RelatedResources,Default Constructor,setCapture(Capture capture),Capture transaction,RelatedResources
com.paypal.api.payments.RelatedResources,Default Constructor,setOrder(Order order),Order transaction,RelatedResources
com.paypal.api.payments.RelatedResources,Default Constructor,setRefund(Refund refund),Refund transaction,RelatedResources
com.paypal.api.payments.RelatedResources,Default Constructor,setSale(Sale sale),Sale transaction,RelatedResources
com.paypal.base.util.ResourceLoader,"A class to locate resources and retrieve their contents. To find the resource
 the class searches the CLASSPATH first, then Resource.class.getResource(""/"" +
 name). If the Resource finds a ""file:"" URL, the file path will be treated as
 a file. Otherwise, the path is treated as a URL.",getInputStream(),N/A,java.io.InputStream
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",formUserAgentHeader(),Returns User-Agent header,"protected java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getBaseURL(),"Returns the base URL configured in application resources or Map
 passed for dynamic configuration",java.net.URL
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getConfigurationMap(),Return configurationMap,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getCredential(),Returns OAuthTokenCredential configured for the api call,OAuthTokenCredential
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getEndPoint(),Returns the endpoint for the API call.,java.lang.String
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getHeaderMap(),Returns HTTP headers as a Map,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getPayLoad(),Returns the payload for the API call.,java.lang.String
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getProcessedHeaderMap(),Override this method to return a Map of HTTP headers,"protected java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",getProcessedPayLoad(),Override this method to process payload for processing,protected java.lang.String
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setAuthorizationToken(java.lang.String authorizationToken),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setPayLoad(java.lang.String payLoad),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setRequestId(java.lang.String requestId),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setResourcePath(java.lang.String resourcePath),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setSdkVersion(SDKVersion sdkVersion),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",setUrl(java.lang.String urlString),N/A,void
com.paypal.base.rest.RESTAPICallPreHandler,"RESTApiCallPreHandler acts as a APICallPreHandler for REST API calls.
 The implementation is PayPal specific, To do custom implementation override
 the protected methods",validate(),Validates settings and integrity before call,void
com.paypal.base.rest.RESTUtil,RESTUtil acts as utility class used by REST API system,"formatURIPath(java.lang.String pattern,
             java.util.Map<java.lang.String,java.lang.String> pathParameters)",Formats the URI path for REST calls.,static java.lang.String
com.paypal.base.rest.RESTUtil,RESTUtil acts as utility class used by REST API system,"formatURIPath(java.lang.String pattern,
             java.util.Map<java.lang.String,java.lang.String> pathParameters,
             java.util.Map<java.lang.String,java.lang.String> queryParameters)",Formats the URI path for REST calls.,static java.lang.String
com.paypal.base.rest.RESTUtil,RESTUtil acts as utility class used by REST API system,"formatURIPath(java.lang.String pattern,
             java.util.Map<java.lang.String,java.lang.String> queryParameters,
             java.lang.String... pathParameters)",Formats the URI path for REST calls.,static java.lang.String
com.paypal.base.rest.RESTUtil,RESTUtil acts as utility class used by REST API system,"formatURIPath(java.lang.String pattern,
             java.lang.Object[] parameters)",Formats the URI path for REST calls.,static java.lang.String
com.paypal.api.payments.Sale,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Sale,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Sale,Default Constructor,"get(APIContext apiContext,
   java.lang.String saleId)","Shows details for a sale, by ID.",static Sale
com.paypal.api.payments.Sale,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String saleId)","Deprecated. 
Please use get(APIContext, String) instead.
",static Sale
com.paypal.api.payments.Sale,Default Constructor,getAmount(),Amount being collected.,Amount
com.paypal.api.payments.Sale,Default Constructor,getBillingAgreementId(),ID of the billing agreement used as reference to execute this transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getClearingTime(),Expected clearing time for eCheck Transactions.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getCreateTime(),Time of sale as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6),java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getExchangeRate(),Exchange rate applied for this transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getFmfDetails(),"Fraud Management Filter (FMF) details applied for the payment that could result in accept, deny, or pending action.",FmfDetails
com.paypal.api.payments.Sale,Default Constructor,getId(),Identifier of the sale transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getLinks(),N/A,java.util.List<Links>
com.paypal.api.payments.Sale,Default Constructor,getParentPayment(),ID of the payment resource on which this transaction is based.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getPaymentHoldReasons(),Reasons for PayPal holding recipient fund.,java.util.List<java.lang.String>
com.paypal.api.payments.Sale,Default Constructor,getPaymentHoldStatus(),Status of the Recipient Fund.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getPaymentMode(),Specifies payment mode of the transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getProcessorResponse(),Response codes returned by the processor concerning the submitted payment.,ProcessorResponse
com.paypal.api.payments.Sale,Default Constructor,getProtectionEligibility(),The level of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getProtectionEligibilityType(),The kind of seller protection in force for the transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getPurchaseUnitReferenceId(),Identifier to the purchase or transaction unit corresponding to this sale transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getReasonCode(),Reason code for the transaction state being Pending or Reversed.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getReceiptId(),Receipt id is a payment identification number returned for guest users to identify the payment.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getReceivableAmount(),Net amount the merchant receives for this transaction in their receivable currency.,Currency
com.paypal.api.payments.Sale,Default Constructor,getState(),State of the sale transaction.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,getTransactionFee(),Transaction fee applicable for this payment.,Currency
com.paypal.api.payments.Sale,Default Constructor,getUpdateTime(),Time the resource was last updated in UTC ISO8601 format.,java.lang.String
com.paypal.api.payments.Sale,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Sale,Default Constructor,"refund(APIContext apiContext,
      Refund refund)","Deprecated. 
Please use refund(APIContext, RefundRequest) instead

 Refunds a sale, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an `amount` object in the JSON request body.
",Refund
com.paypal.api.payments.Sale,Default Constructor,"refund(APIContext apiContext,
      RefundRequest refundRequest)","Refunds a sale, by ID.",DetailedRefund
com.paypal.api.payments.Sale,Default Constructor,"refund(java.lang.String accessToken,
      Refund refund)","Deprecated. 
Please use refund(APIContext, Refund) instead.
",Refund
com.paypal.api.payments.Sale,Default Constructor,setAmount(Amount amount),Amount being collected.,Sale
com.paypal.api.payments.Sale,Default Constructor,setBillingAgreementId(java.lang.String billingAgreementId),ID of the billing agreement used as reference to execute this transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setClearingTime(java.lang.String clearingTime),Expected clearing time for eCheck Transactions.,Sale
com.paypal.api.payments.Sale,Default Constructor,setCreateTime(java.lang.String createTime),Time of sale as defined in [RFC 3339 Section 5.6](http://tools.ietf.org/html/rfc3339#section-5.6),Sale
com.paypal.api.payments.Sale,Default Constructor,setExchangeRate(java.lang.String exchangeRate),Exchange rate applied for this transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setFmfDetails(FmfDetails fmfDetails),"Fraud Management Filter (FMF) details applied for the payment that could result in accept, deny, or pending action.",Sale
com.paypal.api.payments.Sale,Default Constructor,setId(java.lang.String id),Identifier of the sale transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setLinks(java.util.List<Links> links),N/A,Sale
com.paypal.api.payments.Sale,Default Constructor,setParentPayment(java.lang.String parentPayment),ID of the payment resource on which this transaction is based.,Sale
com.paypal.api.payments.Sale,Default Constructor,setPaymentHoldReasons(java.util.List<java.lang.String> paymentHoldReasons),Reasons for PayPal holding recipient fund.,Sale
com.paypal.api.payments.Sale,Default Constructor,setPaymentHoldStatus(java.lang.String paymentHoldStatus),Status of the Recipient Fund.,Sale
com.paypal.api.payments.Sale,Default Constructor,setPaymentMode(java.lang.String paymentMode),Specifies payment mode of the transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setProcessorResponse(ProcessorResponse processorResponse),Response codes returned by the processor concerning the submitted payment.,Sale
com.paypal.api.payments.Sale,Default Constructor,setProtectionEligibility(java.lang.String protectionEligibility),The level of seller protection in force for the transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setProtectionEligibilityType(java.lang.String protectionEligibilityType),The kind of seller protection in force for the transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setPurchaseUnitReferenceId(java.lang.String purchaseUnitReferenceId),Identifier to the purchase or transaction unit corresponding to this sale transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setReasonCode(java.lang.String reasonCode),Reason code for the transaction state being Pending or Reversed.,Sale
com.paypal.api.payments.Sale,Default Constructor,setReceiptId(java.lang.String receiptId),Receipt id is a payment identification number returned for guest users to identify the payment.,Sale
com.paypal.api.payments.Sale,Default Constructor,setReceivableAmount(Currency receivableAmount),Net amount the merchant receives for this transaction in their receivable currency.,Sale
com.paypal.api.payments.Sale,Default Constructor,setState(java.lang.String state),State of the sale transaction.,Sale
com.paypal.api.payments.Sale,Default Constructor,setTransactionFee(Currency transactionFee),Transaction fee applicable for this payment.,Sale
com.paypal.api.payments.Sale,Default Constructor,setUpdateTime(java.lang.String updateTime),Time the resource was last updated in UTC ISO8601 format.,Sale
com.paypal.base.SDKUtil,SDKUtil class holds utility methods for processing data transformation,"combineDefaultMap(java.util.Map<java.lang.String,java.lang.String> receivedMap)",Combines some Map with default values.,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.SDKUtil,SDKUtil class holds utility methods for processing data transformation,"combineMap(java.util.Map<java.lang.String,java.lang.String> highMap,
          java.util.Map<java.lang.String,java.lang.String> lowMap)",N/A,"static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.SDKUtil,SDKUtil class holds utility methods for processing data transformation,constructMap(java.util.Properties properties),"Constructs a Map from a Properties object by
 combining the default values.","static java.util.Map<java.lang.String,java.lang.String>"
com.paypal.base.SDKUtil,SDKUtil class holds utility methods for processing data transformation,"validateAndGet(java.util.Map<java.lang.String,java.lang.String> map,
              java.lang.String key)","Utility method to validate if the key exists in the provided map, and
 returns string value of the object",static java.lang.String
com.paypal.base.SDKVersion,Returns the SDK Id,getSDKId(),Returns the SDK Id,java.lang.String
com.paypal.base.SDKVersion,Returns the SDK Id,getSDKVersion(),Returns the SDK Version,java.lang.String
com.paypal.base.sdk.info.SDKVersionImpl,Implementation of SDKVersion,getSDKId(),Returns the SDK Id,java.lang.String
com.paypal.base.sdk.info.SDKVersionImpl,Implementation of SDKVersion,getSDKVersion(),Returns the SDK Version,java.lang.String
com.paypal.api.payments.Search,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Search,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Search,Default Constructor,getArchived(),A flag indicating whether search is on invoices archived by merchant.,java.lang.Boolean
com.paypal.api.payments.Search,Default Constructor,getEmail(),The initial letters of the email address.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getEndCreationDate(),The end creation date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getEndDueDate(),The end due date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getEndInvoiceDate(),The end date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getEndPaymentDate(),The end payment date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getLowerTotalAmount(),The lower limit of the total amount.,Currency
com.paypal.api.payments.Search,Default Constructor,getNumber(),The invoice number.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getPage(),The offset for the search results.,float
com.paypal.api.payments.Search,Default Constructor,getPageSize(),The page size for the search results.,float
com.paypal.api.payments.Search,Default Constructor,getRecipientBusinessName(),The initial letters of the recipient's business name.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getRecipientFirstName(),The initial letters of the recipient's first name.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getRecipientLastName(),The initial letters of the recipient's last name.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getStartCreationDate(),The start creation date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getStartDueDate(),The start due date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getStartInvoiceDate(),The start date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getStartPaymentDate(),The start payment date for the invoice.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getStatus(),The invoice status.,java.lang.String
com.paypal.api.payments.Search,Default Constructor,getTotalCountRequired(),Indicates whether the total count appears in the response.,java.lang.Boolean
com.paypal.api.payments.Search,Default Constructor,getUpperTotalAmount(),The upper limit of total amount.,Currency
com.paypal.api.payments.Search,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Search,Default Constructor,setArchived(java.lang.Boolean archived),A flag indicating whether search is on invoices archived by merchant.,Search
com.paypal.api.payments.Search,Default Constructor,setEmail(java.lang.String email),The initial letters of the email address.,Search
com.paypal.api.payments.Search,Default Constructor,setEndCreationDate(java.lang.String endCreationDate),The end creation date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setEndDueDate(java.lang.String endDueDate),The end due date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setEndInvoiceDate(java.lang.String endInvoiceDate),The end date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setEndPaymentDate(java.lang.String endPaymentDate),The end payment date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setLowerTotalAmount(Currency lowerTotalAmount),The lower limit of the total amount.,Search
com.paypal.api.payments.Search,Default Constructor,setNumber(java.lang.String number),The invoice number.,Search
com.paypal.api.payments.Search,Default Constructor,setPage(float page),The offset for the search results.,Search
com.paypal.api.payments.Search,Default Constructor,setPageSize(float pageSize),The page size for the search results.,Search
com.paypal.api.payments.Search,Default Constructor,setRecipientBusinessName(java.lang.String recipientBusinessName),The initial letters of the recipient's business name.,Search
com.paypal.api.payments.Search,Default Constructor,setRecipientFirstName(java.lang.String recipientFirstName),The initial letters of the recipient's first name.,Search
com.paypal.api.payments.Search,Default Constructor,setRecipientLastName(java.lang.String recipientLastName),The initial letters of the recipient's last name.,Search
com.paypal.api.payments.Search,Default Constructor,setStartCreationDate(java.lang.String startCreationDate),The start creation date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setStartDueDate(java.lang.String startDueDate),The start due date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setStartInvoiceDate(java.lang.String startInvoiceDate),The start date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setStartPaymentDate(java.lang.String startPaymentDate),The start payment date for the invoice.,Search
com.paypal.api.payments.Search,Default Constructor,setStatus(java.lang.String status),The invoice status.,Search
com.paypal.api.payments.Search,Default Constructor,setTotalCountRequired(java.lang.Boolean totalCountRequired),Indicates whether the total count appears in the response.,Search
com.paypal.api.payments.Search,Default Constructor,setUpperTotalAmount(Currency upperTotalAmount),The upper limit of total amount.,Search
com.paypal.api.openidconnect.Session,"Returns the URL to which the user must be redirected to logout from the
 OpenID provider (i.e.","getLogoutUrl(java.lang.String redirectURI,
            java.lang.String idToken,
            APIContext apiContext)","Returns the URL to which the user must be redirected to logout from the
 OpenID provider (i.e.",static java.lang.String
com.paypal.api.openidconnect.Session,"Returns the URL to which the user must be redirected to logout from the
 OpenID provider (i.e.","getRedirectURL(java.lang.String redirectURI,
              java.util.List<java.lang.String> scope,
              APIContext apiContext)","Returns the PayPal URL to which the user must be redirected to start the
 authentication / authorization process.",static java.lang.String
com.paypal.api.openidconnect.Session,"Returns the URL to which the user must be redirected to logout from the
 OpenID provider (i.e.","getRedirectURL(java.lang.String redirectURI,
              java.util.List<java.lang.String> scope,
              APIContext apiContext,
              ClientCredentials clientCredentials)",N/A,static java.lang.String
com.paypal.api.payments.ShippingAddress,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ShippingAddress,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ShippingAddress,Default Constructor,getDefaultAddress(),Default shipping address of the Payer.,java.lang.Boolean
com.paypal.api.payments.ShippingAddress,Default Constructor,getId(),Address ID assigned in PayPal system.,java.lang.String
com.paypal.api.payments.ShippingAddress,Default Constructor,getRecipientName(),Name of the recipient at this address.,java.lang.String
com.paypal.api.payments.ShippingAddress,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ShippingAddress,Default Constructor,setDefaultAddress(java.lang.Boolean defaultAddress),Default shipping address of the Payer.,ShippingAddress
com.paypal.api.payments.ShippingAddress,Default Constructor,setId(java.lang.String id),Address ID assigned in PayPal system.,ShippingAddress
com.paypal.api.payments.ShippingAddress,Default Constructor,setRecipientName(java.lang.String recipientName),Name of the recipient at this address.,ShippingAddress
com.paypal.api.payments.ShippingCost,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ShippingCost,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ShippingCost,Default Constructor,getAmount(),"The shipping cost, as an amount.",Currency
com.paypal.api.payments.ShippingCost,Default Constructor,getTax(),The tax percentage on the shipping amount.,Tax
com.paypal.api.payments.ShippingCost,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ShippingCost,Default Constructor,setAmount(Currency amount),"The shipping cost, as an amount.",ShippingCost
com.paypal.api.payments.ShippingCost,Default Constructor,setTax(Tax tax),The tax percentage on the shipping amount.,ShippingCost
com.paypal.api.payments.ShippingInfo,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.ShippingInfo,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.ShippingInfo,Default Constructor,getAddress(),The invoice recipient address.,InvoiceAddress
com.paypal.api.payments.ShippingInfo,Default Constructor,getBusinessName(),The invoice recipient company business name.,java.lang.String
com.paypal.api.payments.ShippingInfo,Default Constructor,getFirstName(),The invoice recipient first name.,java.lang.String
com.paypal.api.payments.ShippingInfo,Default Constructor,getLastName(),The invoice recipient last name.,java.lang.String
com.paypal.api.payments.ShippingInfo,Default Constructor,getPhone(),The invoice recipient phone number.,Phone
com.paypal.api.payments.ShippingInfo,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.ShippingInfo,Default Constructor,setAddress(InvoiceAddress address),The invoice recipient address.,ShippingInfo
com.paypal.api.payments.ShippingInfo,Default Constructor,setBusinessName(java.lang.String businessName),The invoice recipient company business name.,ShippingInfo
com.paypal.api.payments.ShippingInfo,Default Constructor,setFirstName(java.lang.String firstName),The invoice recipient first name.,ShippingInfo
com.paypal.api.payments.ShippingInfo,Default Constructor,setLastName(java.lang.String lastName),The invoice recipient last name.,ShippingInfo
com.paypal.api.payments.ShippingInfo,Default Constructor,setPhone(Phone phone),The invoice recipient phone number.,ShippingInfo
com.paypal.base.exception.SSLConfigurationException,SSLConfigurationException is thrown for error caused during SSL connection,N/A,N/A,N/A
com.paypal.base.SSLUtil,Class SSLUtil,crc32(java.lang.String data),Generates a CRC 32 Value of String passed,static long
com.paypal.base.SSLUtil,Class SSLUtil,downloadCertificateFromPath(java.lang.String urlPath),"Deprecated. 
Please use downloadCertificateFromPath(String, Map) instead.
",static java.io.InputStream
com.paypal.base.SSLUtil,Class SSLUtil,"downloadCertificateFromPath(java.lang.String urlPath,
                           java.util.Map<java.lang.String,java.lang.String> configurations)",Downloads Certificate from URL,static java.io.InputStream
com.paypal.base.SSLUtil,Class SSLUtil,getCertificateFromStream(java.io.InputStream stream),Generate Collection of Certificate from Input Stream,static java.util.Collection<java.security.cert.X509Certificate>
com.paypal.base.SSLUtil,Class SSLUtil,getSSLContext(javax.net.ssl.KeyManager[] keymanagers),Returns a SSLContext,static javax.net.ssl.SSLContext
com.paypal.base.SSLUtil,Class SSLUtil,"setupClientSSL(java.lang.String certPath,
              java.lang.String certPassword)",Create a SSLContext with provided client certificate,static javax.net.ssl.SSLContext
com.paypal.base.SSLUtil,Class SSLUtil,"validateCertificateChain(java.util.Collection<java.security.cert.X509Certificate> clientCerts,
                        java.util.Collection<java.security.cert.X509Certificate> trustCerts,
                        java.lang.String authType)",Performs Certificate Chain Validation on provided certificates.,static boolean
com.paypal.base.SSLUtil,Class SSLUtil,"validateData(java.util.Collection<java.security.cert.X509Certificate> clientCerts,
            java.lang.String algo,
            java.lang.String actualSignatureEncoded,
            java.lang.String expectedSignature,
            java.lang.String requestBody,
            java.lang.String webhookId)","Validates Webhook Signature validation based on https://developer.paypal.com/docs/integration/direct/rest-webhooks-overview/#event-signature
 Returns true if signature is valid",static java.lang.Boolean
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesIso8859_1(java.lang.String string),"Encodes the given string into a sequence of bytes using the ISO-8859-1 charset, storing the result into a new
 byte array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,"getBytesUnchecked(java.lang.String string,
                 java.lang.String charsetName)","Encodes the given string into a sequence of bytes using the named charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesUsAscii(java.lang.String string),"Encodes the given string into a sequence of bytes using the US-ASCII charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesUtf16(java.lang.String string),"Encodes the given string into a sequence of bytes using the UTF-16 charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesUtf16Be(java.lang.String string),"Encodes the given string into a sequence of bytes using the UTF-16BE charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesUtf16Le(java.lang.String string),"Encodes the given string into a sequence of bytes using the UTF-16LE charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,getBytesUtf8(java.lang.String string),"Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte
 array.",static byte[]
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,"newString(byte[] bytes,
         java.lang.String charsetName)",Constructs a new String by decoding the specified array of bytes using the given charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringIso8859_1(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the ISO-8859-1 charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringUsAscii(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the US-ASCII charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringUtf16(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the UTF-16 charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringUtf16Be(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the UTF-16BE charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringUtf16Le(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the UTF-16LE charset.,static java.lang.String
com.paypal.base.codec.binary.StringUtils,Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in Standard charsets,newStringUtf8(byte[] bytes),Constructs a new String by decoding the specified array of bytes using the UTF-8 charset.,static java.lang.String
com.paypal.api.payments.Tax,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Tax,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Tax,Default Constructor,getAmount(),The tax as a monetary amount.,Currency
com.paypal.api.payments.Tax,Default Constructor,getId(),The resource ID.,java.lang.String
com.paypal.api.payments.Tax,Default Constructor,getName(),The tax name.,java.lang.String
com.paypal.api.payments.Tax,Default Constructor,getPercent(),The rate of the specified tax.,float
com.paypal.api.payments.Tax,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Tax,Default Constructor,setAmount(Currency amount),The tax as a monetary amount.,Tax
com.paypal.api.payments.Tax,Default Constructor,setId(java.lang.String id),The resource ID.,Tax
com.paypal.api.payments.Tax,Default Constructor,setName(java.lang.String name),The tax name.,Tax
com.paypal.api.payments.Tax,Default Constructor,setPercent(float percent),The rate of the specified tax.,Tax
com.paypal.api.payments.Template,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Template,Default Constructor,create(APIContext apiContext),Creates a template.,Template
com.paypal.api.payments.Template,Default Constructor,delete(APIContext apiContext),Delete a particular template by passing the template ID to the request URI.,void
com.paypal.api.payments.Template,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Template,Default Constructor,"get(APIContext apiContext,
   java.lang.String templateId)",Retrieve the details for a particular template by passing the template ID to the request URI.,static Template
com.paypal.api.payments.Template,Default Constructor,getAll(APIContext apiContext),Retrieves the template information of the merchant.,static Templates
com.paypal.api.payments.Template,Default Constructor,getCustom(),Indicates whether this is a custom template created by the merchant.,java.lang.Boolean
com.paypal.api.payments.Template,Default Constructor,getIsDefault(),Indicates that this template is merchant's default.,java.lang.Boolean
com.paypal.api.payments.Template,Default Constructor,getName(),Name of the template.,java.lang.String
com.paypal.api.payments.Template,Default Constructor,getSettings(),Settings for each template,java.util.List<TemplateSettings>
com.paypal.api.payments.Template,Default Constructor,getTemplateData(),Customized invoice data which is saved as template,TemplateData
com.paypal.api.payments.Template,Default Constructor,getTemplateId(),Unique identifier id of the template.,java.lang.String
com.paypal.api.payments.Template,Default Constructor,getUnitOfMeasure(),"Unit of measure for the template, possible values are Quantity, Hours, Amount.",java.lang.String
com.paypal.api.payments.Template,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Template,Default Constructor,setCustom(java.lang.Boolean custom),Indicates whether this is a custom template created by the merchant.,Template
com.paypal.api.payments.Template,Default Constructor,setIsDefault(java.lang.Boolean isDefault),Indicates that this template is merchant's default.,Template
com.paypal.api.payments.Template,Default Constructor,setName(java.lang.String name),Name of the template.,Template
com.paypal.api.payments.Template,Default Constructor,setSettings(java.util.List<TemplateSettings> settings),Settings for each template,Template
com.paypal.api.payments.Template,Default Constructor,setTemplateData(TemplateData templateData),Customized invoice data which is saved as template,Template
com.paypal.api.payments.Template,Default Constructor,setTemplateId(java.lang.String templateId),Unique identifier id of the template.,Template
com.paypal.api.payments.Template,Default Constructor,setUnitOfMeasure(java.lang.String unitOfMeasure),"Unit of measure for the template, possible values are Quantity, Hours, Amount.",Template
com.paypal.api.payments.Template,Default Constructor,update(APIContext apiContext),Update an existing template by passing the template ID to the request URI.,Template
com.paypal.api.payments.TemplateData,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.TemplateData,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.TemplateData,Default Constructor,getAllowPartialPayment(),Indicates whether the invoice allows a partial payment.,java.lang.Boolean
com.paypal.api.payments.TemplateData,Default Constructor,getAttachments(),List of files attached to the invoice.,java.util.List<FileAttachment>
com.paypal.api.payments.TemplateData,Default Constructor,getBillingInfo(),The required invoice recipient email address and any optional billing information.,java.util.List<BillingInfo>
com.paypal.api.payments.TemplateData,Default Constructor,getCcInfo(),"For invoices sent by email, one or more email addresses to which to send a Cc: copy of the notification.",java.util.List<java.lang.String>
com.paypal.api.payments.TemplateData,Default Constructor,getCustom(),The custom amount to apply on an invoice.,CustomAmount
com.paypal.api.payments.TemplateData,Default Constructor,getDiscount(),"The invoice level discount, as a percent or an amount value.",Cost
com.paypal.api.payments.TemplateData,Default Constructor,getItems(),The list of items to include in the invoice.,java.util.List<InvoiceItem>
com.paypal.api.payments.TemplateData,Default Constructor,getLogoUrl(),Full URL of an external image to use as the logo.,java.lang.String
com.paypal.api.payments.TemplateData,Default Constructor,getMerchantInfo(),Information about the merchant who is sending the invoice.,MerchantInfo
com.paypal.api.payments.TemplateData,Default Constructor,getMerchantMemo(),A private bookkeeping memo for the merchant.,java.lang.String
com.paypal.api.payments.TemplateData,Default Constructor,getMinimumAmountDue(),"If `allow_partial_payment` is set to `true`, the minimum amount allowed for a partial payment.",Currency
com.paypal.api.payments.TemplateData,Default Constructor,getNote(),Note to the payer.,java.lang.String
com.paypal.api.payments.TemplateData,Default Constructor,getPaymentTerm(),Optional.,PaymentTerm
com.paypal.api.payments.TemplateData,Default Constructor,getReference(),"Reference data, such as PO number, to add to the invoice.",java.lang.String
com.paypal.api.payments.TemplateData,Default Constructor,getShippingCost(),"The shipping cost, as a percent or an amount value.",ShippingCost
com.paypal.api.payments.TemplateData,Default Constructor,getShippingInfo(),The shipping information for entities to whom items are being shipped.,ShippingInfo
com.paypal.api.payments.TemplateData,Default Constructor,getTaxCalculatedAfterDiscount(),Indicates whether tax is calculated before or after a discount.,java.lang.Boolean
com.paypal.api.payments.TemplateData,Default Constructor,getTaxInclusive(),Indicates whether the unit price includes tax.,java.lang.Boolean
com.paypal.api.payments.TemplateData,Default Constructor,getTerms(),General terms of the invoice.,java.lang.String
com.paypal.api.payments.TemplateData,Default Constructor,getTotalAmount(),The total amount of the invoice.,Currency
com.paypal.api.payments.TemplateData,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.TemplateData,Default Constructor,setAllowPartialPayment(java.lang.Boolean allowPartialPayment),Indicates whether the invoice allows a partial payment.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setAttachments(java.util.List<FileAttachment> attachments),List of files attached to the invoice.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setBillingInfo(java.util.List<BillingInfo> billingInfo),The required invoice recipient email address and any optional billing information.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setCcInfo(java.util.List<java.lang.String> ccInfo),"For invoices sent by email, one or more email addresses to which to send a Cc: copy of the notification.",TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setCustom(CustomAmount custom),The custom amount to apply on an invoice.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setDiscount(Cost discount),"The invoice level discount, as a percent or an amount value.",TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setItems(java.util.List<InvoiceItem> items),The list of items to include in the invoice.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setLogoUrl(java.lang.String logoUrl),Full URL of an external image to use as the logo.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setMerchantInfo(MerchantInfo merchantInfo),Information about the merchant who is sending the invoice.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setMerchantMemo(java.lang.String merchantMemo),A private bookkeeping memo for the merchant.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setMinimumAmountDue(Currency minimumAmountDue),"If `allow_partial_payment` is set to `true`, the minimum amount allowed for a partial payment.",TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setNote(java.lang.String note),Note to the payer.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setPaymentTerm(PaymentTerm paymentTerm),Optional.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setReference(java.lang.String reference),"Reference data, such as PO number, to add to the invoice.",TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setShippingCost(ShippingCost shippingCost),"The shipping cost, as a percent or an amount value.",TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setShippingInfo(ShippingInfo shippingInfo),The shipping information for entities to whom items are being shipped.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setTaxCalculatedAfterDiscount(java.lang.Boolean taxCalculatedAfterDiscount),Indicates whether tax is calculated before or after a discount.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setTaxInclusive(java.lang.Boolean taxInclusive),Indicates whether the unit price includes tax.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setTerms(java.lang.String terms),General terms of the invoice.,TemplateData
com.paypal.api.payments.TemplateData,Default Constructor,setTotalAmount(Currency totalAmount),The total amount of the invoice.,TemplateData
com.paypal.api.payments.Templates,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Templates,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Templates,Default Constructor,"get(APIContext apiContext,
   java.lang.String templateId)","Deprecated. 
Please use Template.get(APIContext, String) instead.
",static Template
com.paypal.api.payments.Templates,Default Constructor,getAddresses(),List of addresses in merchant's profile.,java.util.List<Address>
com.paypal.api.payments.Templates,Default Constructor,getAll(APIContext apiContext),Retrieves the template information of the merchant.,static Templates
com.paypal.api.payments.Templates,Default Constructor,getEmails(),List of emails in merchant's profile.,java.util.List<java.lang.String>
com.paypal.api.payments.Templates,Default Constructor,getLinks(),HATEOS links representing all the actions over the template list returned.,java.util.List<Links>
com.paypal.api.payments.Templates,Default Constructor,getPhones(),List of phone numbers in merchant's profile.,java.util.List<Phone>
com.paypal.api.payments.Templates,Default Constructor,getTemplates(),Array of templates.,java.util.List<Template>
com.paypal.api.payments.Templates,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Templates,Default Constructor,setAddresses(java.util.List<Address> addresses),List of addresses in merchant's profile.,Templates
com.paypal.api.payments.Templates,Default Constructor,setEmails(java.util.List<java.lang.String> emails),List of emails in merchant's profile.,Templates
com.paypal.api.payments.Templates,Default Constructor,setLinks(java.util.List<Links> links),HATEOS links representing all the actions over the template list returned.,Templates
com.paypal.api.payments.Templates,Default Constructor,setPhones(java.util.List<Phone> phones),List of phone numbers in merchant's profile.,Templates
com.paypal.api.payments.Templates,Default Constructor,setTemplates(java.util.List<Template> templates),Array of templates.,Templates
com.paypal.api.payments.TemplateSettings,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.TemplateSettings,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.TemplateSettings,Default Constructor,getDisplayPreference(),Settings metadata for each field.,TemplateSettingsMetadata
com.paypal.api.payments.TemplateSettings,Default Constructor,getFieldName(),The field name (for any field in template_data) for which the corresponding display preferences will be mapped to.,java.lang.String
com.paypal.api.payments.TemplateSettings,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.TemplateSettings,Default Constructor,setDisplayPreference(TemplateSettingsMetadata displayPreference),Settings metadata for each field.,TemplateSettings
com.paypal.api.payments.TemplateSettings,Default Constructor,setFieldName(java.lang.String fieldName),The field name (for any field in template_data) for which the corresponding display preferences will be mapped to.,TemplateSettings
com.paypal.api.payments.TemplateSettingsMetadata,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.TemplateSettingsMetadata,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.TemplateSettingsMetadata,Default Constructor,getHidden(),Indicates whether this field should be hidden.,java.lang.Boolean
com.paypal.api.payments.TemplateSettingsMetadata,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.TemplateSettingsMetadata,Default Constructor,setHidden(java.lang.Boolean hidden),Indicates whether this field should be hidden.,TemplateSettingsMetadata
com.paypal.api.payments.Terms,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Terms,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Terms,Default Constructor,getAmountRange(),Amount_range associated with this term.,Currency
com.paypal.api.payments.Terms,Default Constructor,getBuyerEditable(),Buyer's ability to edit the amount in this term.,java.lang.String
com.paypal.api.payments.Terms,Default Constructor,getId(),Identifier of the terms.,java.lang.String
com.paypal.api.payments.Terms,Default Constructor,getMaxBillingAmount(),Max Amount associated with this term.,Currency
com.paypal.api.payments.Terms,Default Constructor,getOccurrences(),How many times money can be pulled during this term.,java.lang.String
com.paypal.api.payments.Terms,Default Constructor,getType(),Term type.,java.lang.String
com.paypal.api.payments.Terms,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Terms,Default Constructor,setAmountRange(Currency amountRange),Amount_range associated with this term.,Terms
com.paypal.api.payments.Terms,Default Constructor,setBuyerEditable(java.lang.String buyerEditable),Buyer's ability to edit the amount in this term.,Terms
com.paypal.api.payments.Terms,Default Constructor,setId(java.lang.String id),Identifier of the terms.,Terms
com.paypal.api.payments.Terms,Default Constructor,setMaxBillingAmount(Currency maxBillingAmount),Max Amount associated with this term.,Terms
com.paypal.api.payments.Terms,Default Constructor,setOccurrences(java.lang.String occurrences),How many times money can be pulled during this term.,Terms
com.paypal.api.payments.Terms,Default Constructor,setType(java.lang.String type),Term type.,Terms
com.paypal.base.credential.TokenAuthorization,"TokenAuthorization encapsulates third party token authorization. Used for
 MERCHANT or PLATFORM APIs",getAccessToken(),N/A,java.lang.String
com.paypal.base.credential.TokenAuthorization,"TokenAuthorization encapsulates third party token authorization. Used for
 MERCHANT or PLATFORM APIs",getTokenSecret(),N/A,java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,"createFromAuthorizationCode(APIContext apiContext,
                           CreateFromAuthorizationCodeParameters createFromAuthorizationCodeParameters)","Deprecated. 
Please use createFromAuthorizationCode(APIContext, String) instead.
 There is no more need for passing clientId and secret in the params object anymore.
",static Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,"createFromAuthorizationCode(APIContext apiContext,
                           java.lang.String code)",Creates an Access Token from an Authorization Code.,static Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,createFromAuthorizationCode(CreateFromAuthorizationCodeParameters createFromAuthorizationCodeParameters),"Deprecated. 
Please use createFromAuthorizationCode(APIContext, String) instead.
 There is no more need for passing clientId and secret in the params object anymore.
",static Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,"createFromAuthorizationCodeForFpp(APIContext apiContext,
                                 CreateFromAuthorizationCodeParameters createFromAuthorizationCodeParameters)",Creates an Access and a Refresh Tokens from an Authorization Code for future payment.,static Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,"createFromRefreshToken(APIContext apiContext,
                      CreateFromRefreshTokenParameters createFromRefreshTokenParameters)",Creates an Access Token from an Refresh Token.,Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,createFromRefreshToken(CreateFromRefreshTokenParameters createFromRefreshTokenParameters),Creates an Access Token from an Refresh Token.,Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,createFromRefreshTokenForFpp(APIContext apiContext),Creates an Access Token from an Refresh Token for future payment.,Tokeninfo
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getAccessToken(),"Getter for just accessToken without type (e.g., ""EEwJ6tF9x5WCIZDYzyZGaz6Khbw7raYRIBV_WxVvgmsG"")",java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getAccessTokenWithType(),"Getter for accessToken with token type (e.g., ""Bearer: EEwJ6tF9x5WCIZDYzyZGaz6Khbw7raYRIBV_WxVvgmsG"")",java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getAppId(),Getter for appId,java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getExpiresIn(),Getter for expiresIn,java.lang.Integer
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getRefreshToken(),Getter for refreshToken,java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getScope(),Getter for scope,java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,getTokenType(),Getter for tokenType,java.lang.String
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setAccessToken(java.lang.String accessToken),Setter for accessToken,void
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setAppId(java.lang.String appId),Setter for appId,void
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setExpiresIn(java.lang.Integer expiresIn),Setter for expiresIn,void
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setRefreshToken(java.lang.String refreshToken),Setter for refreshToken,void
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setScope(java.lang.String scope),Setter for scope,void
com.paypal.api.openidconnect.Tokeninfo,Class Tokeninfo,setTokenType(java.lang.String tokenType),Setter for tokenType,void
com.paypal.api.payments.Transaction,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Transaction,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Transaction,Default Constructor,getTransactions(),Financial transactions related to a payment.,java.util.List<Transaction>
com.paypal.api.payments.Transaction,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Transaction,Default Constructor,setTransactions(java.util.List<Transaction> transactions),Financial transactions related to a payment.,Transaction
com.paypal.api.payments.TransactionBase,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.TransactionBase,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.TransactionBase,Default Constructor,getPurchaseUnitReferenceId(),Identifier to the purchase unit corresponding to this sale transaction.,java.lang.String
com.paypal.api.payments.TransactionBase,Default Constructor,getRelatedResources(),"List of financial transactions (Sale, Authorization, Capture, Refund) related to the payment.",java.util.List<RelatedResources>
com.paypal.api.payments.TransactionBase,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.TransactionBase,Default Constructor,setPurchaseUnitReferenceId(java.lang.String purchaseUnitReferenceId),Identifier to the purchase unit corresponding to this sale transaction.,TransactionBase
com.paypal.api.payments.TransactionBase,Default Constructor,setRelatedResources(java.util.List<RelatedResources> relatedResources),"List of financial transactions (Sale, Authorization, Capture, Refund) related to the payment.",TransactionBase
com.paypal.api.payments.Transactions,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Transactions,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Transactions,Default Constructor,getAmount(),Amount being collected.,Amount
com.paypal.api.payments.Transactions,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Transactions,Default Constructor,setAmount(Amount amount),Amount being collected.,Transactions
com.paypal.base.util.UserAgentHeader,UserAgentHeader,getHeader(),N/A,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getAccountType(),Account type.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getAddress(),End-User's preferred address.,Address
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getAgeRange(),Account holder age range.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getBirthdate(),"Deprecated. 
PayPal API returns 'birthday', use that instead
",java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getBirthday(),"End-User's birthday, represented as an YYYY-MM-DD format.",java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getEmail(),End-User's preferred e-mail address.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getEmailVerified(),True if the End-User's e-mail address has been verified; otherwise false.,java.lang.Boolean
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getFamilyName(),Surname(s) or last name(s) of the End-User.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getGender(),End-User's gender.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getGivenName(),Given name(s) or first name(s) of the End-User,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getLocale(),End-User's locale.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getMiddleName(),Middle name(s) of the End-User.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getName(),"End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.",java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getPayerId(),Account payer identifier.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getPhoneNumber(),End-User's preferred telephone number.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getPicture(),URL of the End-User's profile picture.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getSub(),Subject - Identifier for the End-User at the Issuer.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getUserId(),Subject - Identifier for the End-User at the Issuer.,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getUserinfo(APIContext apiContext),Returns user details,static Userinfo
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getUserinfo(java.lang.String accessToken),"Deprecated. 
Please use getUserinfo(APIContext) instead.
",static Userinfo
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getVerifiedAccount(),Verified account status.,java.lang.Boolean
com.paypal.api.openidconnect.Userinfo,Class Userinfo,getZoneinfo(),Time zone database representing the End-User's time zone,java.lang.String
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setAccountType(java.lang.String accountType),Account type.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setAddress(Address address),End-User's preferred address.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setAgeRange(java.lang.String ageRange),Account holder age range.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setBirthdate(java.lang.String birthdate),"Deprecated. 
PayPal API returns 'birthday', use that instead
",void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setBirthday(java.lang.String birthday),"End-User's birthday, represented as an YYYY-MM-DD format.",void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setEmail(java.lang.String email),End-User's preferred e-mail address.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setEmailVerified(java.lang.Boolean emailVerified),True if the End-User's e-mail address has been verified; otherwise false.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setFamilyName(java.lang.String familyName),Surname(s) or last name(s) of the End-User.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setGender(java.lang.String gender),End-User's gender.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setGivenName(java.lang.String givenName),Given name(s) or first name(s) of the End-User,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setLocale(java.lang.String locale),End-User's locale.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setMiddleName(java.lang.String middleName),Middle name(s) of the End-User.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setName(java.lang.String name),"End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.",void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setPayerId(java.lang.String payerId),Account payer identifier.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setPhoneNumber(java.lang.String phoneNumber),End-User's preferred telephone number.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setPicture(java.lang.String picture),URL of the End-User's profile picture.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setSub(java.lang.String sub),Subject - Identifier for the End-User at the Issuer.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setUserId(java.lang.String userId),Subject - Identifier for the End-User at the Issuer.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setVerifiedAccount(java.lang.Boolean verifiedAccount),Verified account status.,void
com.paypal.api.openidconnect.Userinfo,Class Userinfo,setZoneinfo(java.lang.String zoneinfo),Time zone database representing the End-User's time zone,void
com.paypal.api.openidconnect.UserinfoParameters,Class UserinfoParameters,getContainerMap(),N/A,"java.util.Map<java.lang.String,java.lang.String>"
com.paypal.api.openidconnect.UserinfoParameters,Class UserinfoParameters,setAccessToken(java.lang.String accessToken),Set the accessToken,void
com.paypal.api.payments.Webhook,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.Webhook,Default Constructor,"create(APIContext apiContext,
      Webhook webhook)",Subscribes your webhook listener to events.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,"create(java.lang.String accessToken,
      Webhook webhook)","Deprecated. 
Please use create(APIContext, Webhook) instead.
",Webhook
com.paypal.api.payments.Webhook,Default Constructor,"delete(APIContext apiContext,
      java.lang.String webhookId)","Deletes a webhook, by ID.",void
com.paypal.api.payments.Webhook,Default Constructor,"delete(java.lang.String accessToken,
      java.lang.String webhookId)","Deprecated. 
Please use delete(APIContext, String) instead.
",void
com.paypal.api.payments.Webhook,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.Webhook,Default Constructor,"get(APIContext apiContext,
   java.lang.String webhookId)","Shows details for a webhook, by ID.",Webhook
com.paypal.api.payments.Webhook,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String webhookId)","Deprecated. 
Please use get(APIContext, String) instead.
",Webhook
com.paypal.api.payments.Webhook,Default Constructor,getEventTypes(),A list of up to ten events to which to subscribe your webhook.,java.util.List<EventType>
com.paypal.api.payments.Webhook,Default Constructor,getId(),The ID of the webhook.,java.lang.String
com.paypal.api.payments.Webhook,Default Constructor,getLinks(),The HATEOAS links related to this call.,java.util.List<Links>
com.paypal.api.payments.Webhook,Default Constructor,getUrl(),The URL that is configured to listen on `localhost` for incoming `POST` notification messages that contain event information.,java.lang.String
com.paypal.api.payments.Webhook,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.Webhook,Default Constructor,setEventTypes(java.util.List<EventType> eventTypes),A list of up to ten events to which to subscribe your webhook.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,setId(java.lang.String id),The ID of the webhook.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,setLinks(java.util.List<Links> links),The HATEOAS links related to this call.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,setUrl(java.lang.String url),The URL that is configured to listen on `localhost` for incoming `POST` notification messages that contain event information.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,"update(APIContext apiContext,
      java.lang.String webhookId,
      java.lang.String patchRequest)",Replaces webhook fields with new values.,Webhook
com.paypal.api.payments.Webhook,Default Constructor,"update(java.lang.String accessToken,
      java.lang.String webhookId,
      java.lang.String patchRequest)","Deprecated. 
Please use update(APIContext, String, String) instead.
",Webhook
com.paypal.api.payments.WebhookList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.WebhookList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.WebhookList,Default Constructor,getAll(APIContext apiContext),Retrieves all Webhooks for the application associated with access token.,WebhookList
com.paypal.api.payments.WebhookList,Default Constructor,getAll(java.lang.String accessToken),"Deprecated. 
Please use getAll(APIContext) instead.
",WebhookList
com.paypal.api.payments.WebhookList,Default Constructor,getWebhooks(),A list of webhooks.,java.util.List<Webhook>
com.paypal.api.payments.WebhookList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.WebhookList,Default Constructor,setWebhooks(java.util.List<Webhook> webhooks),A list of webhooks.,WebhookList
com.paypal.api.payments.WebProfile,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.WebProfile,Default Constructor,create(APIContext apiContext),Creates a web experience profile.,CreateProfileResponse
com.paypal.api.payments.WebProfile,Default Constructor,create(java.lang.String accessToken),"Deprecated. 
Please use create(APIContext) instead.
",CreateProfileResponse
com.paypal.api.payments.WebProfile,Default Constructor,delete(APIContext apiContext),"Deletes a web experience profile, by ID.",void
com.paypal.api.payments.WebProfile,Default Constructor,delete(java.lang.String accessToken),"Deprecated. 
Please use delete(APIContext) instead.
",void
com.paypal.api.payments.WebProfile,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.WebProfile,Default Constructor,"get(APIContext apiContext,
   java.lang.String profileId)","Shows details for a web experience profile, by ID.",static WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,"get(java.lang.String accessToken,
   java.lang.String profileId)","Deprecated. 
Please use get(APIContext, String) instead.
",static WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,getFlowConfig(),Parameters for flow configuration.,FlowConfig
com.paypal.api.payments.WebProfile,Default Constructor,getId(),The unique ID of the web experience profile.,java.lang.String
com.paypal.api.payments.WebProfile,Default Constructor,getInputFields(),Parameters for input fields customization.,InputFields
com.paypal.api.payments.WebProfile,Default Constructor,getList(APIContext apiContext),Lists all web experience profiles for a merchant or subject.,static java.util.List<WebProfile>
com.paypal.api.payments.WebProfile,Default Constructor,getList(java.lang.String accessToken),"Deprecated. 
Please use getList(APIContext) instead.
",static java.util.List<WebProfile>
com.paypal.api.payments.WebProfile,Default Constructor,getName(),The web experience profile name.,java.lang.String
com.paypal.api.payments.WebProfile,Default Constructor,getPresentation(),Parameters for style and presentation.,Presentation
com.paypal.api.payments.WebProfile,Default Constructor,getTemporary(),Indicates whether the profile persists for three hours or permanently.,java.lang.Boolean
com.paypal.api.payments.WebProfile,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.WebProfile,Default Constructor,"partialUpdate(APIContext apiContext,
             PatchRequest patchRequest)",Partially-updates a web experience profile.,void
com.paypal.api.payments.WebProfile,Default Constructor,"partialUpdate(java.lang.String accessToken,
             PatchRequest patchRequest)","Deprecated. 
Please use partialUpdate(APIContext, PatchRequest) instead.
",void
com.paypal.api.payments.WebProfile,Default Constructor,setFlowConfig(FlowConfig flowConfig),Parameters for flow configuration.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,setId(java.lang.String id),The unique ID of the web experience profile.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,setInputFields(InputFields inputFields),Parameters for input fields customization.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,setName(java.lang.String name),The web experience profile name.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,setPresentation(Presentation presentation),Parameters for style and presentation.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,setTemporary(java.lang.Boolean temporary),Indicates whether the profile persists for three hours or permanently.,WebProfile
com.paypal.api.payments.WebProfile,Default Constructor,update(APIContext apiContext),Updates a web experience profile.,void
com.paypal.api.payments.WebProfile,Default Constructor,update(java.lang.String accessToken),"Deprecated. 
Please use update(APIContext) instead.
",void
com.paypal.api.payments.WebProfileList,Default Constructor,canEqual(java.lang.Object other),N/A,protected boolean
com.paypal.api.payments.WebProfileList,Default Constructor,equals(java.lang.Object o),N/A,boolean
com.paypal.api.payments.WebProfileList,Default Constructor,getWebProfiles(),N/A,java.util.List<WebProfile>
com.paypal.api.payments.WebProfileList,Default Constructor,hashCode(),N/A,int
com.paypal.api.payments.WebProfileList,Default Constructor,setWebProfiles(java.util.List<WebProfile> webProfiles),N/A,WebProfileList
