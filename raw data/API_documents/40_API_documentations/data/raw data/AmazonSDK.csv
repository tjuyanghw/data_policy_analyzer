class_name,class_description,method,method_description,data_type
class_name,class_description,method,method_description,data_type
constant-values,N/A,N/A,N/A,N/A
overview-tree,N/A,N/A,N/A,N/A
index,N/A,N/A,N/A,N/A
overview-frame,N/A,N/A,N/A,N/A
allclasses-noframe,N/A,N/A,N/A,N/A
index-all,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,N/A,N/A,N/A
deprecated-list,N/A,N/A,N/A,N/A
overview-summary,Provides classes and an interface that are required to use the In-App Purchasing API with the Amazon Appstore.,N/A,N/A,N/A
help-doc,N/A,N/A,N/A,N/A
allclasses-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getProductData(java.util.Set<java.lang.String> skus),"Initiates a request to retrieve item data of up to one-hundred
 SKUs.",static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getPurchaseUpdates(boolean reset),"Initiates a request to retrieve updates about items the customer has
 purchased and/or canceled.",static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getUserData(),Initiates a request to retrieve the user ID of the currently logged-in user.,static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.","notifyFulfillment(java.lang.String receiptId,
                 FulfillmentResult fulfillmentResult)",Notifies Amazon about the purchase fulfillment.,static void
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",purchase(java.lang.String sku),Initiates a purchase-flow for a product.,static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.","registerListener(android.content.Context appContext,
                PurchasingListener listener)","Before invoking operations in this class, register a
 PurchasingListener and its Context.",static void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onProductDataResponse(ProductDataResponse productDataResponse),"
 This callback method is invoked when an ProductDataResponse is
 available for a request initiated by
 PurchasingService.getProductData(java.util.Set).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onPurchaseResponse(PurchaseResponse purchaseResponse),"
 This callback method is invoked when a PurchaseResponse is
 available for a purchase initiated by
 PurchasingService.purchase(String).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onPurchaseUpdatesResponse(PurchaseUpdatesResponse purchaseUpdatesResponse),"
 This callback method is invoked when a PurchaseUpdatesResponse is
 available for a request initiated by
 PurchasingService.getPurchaseUpdates(boolean).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onUserDataResponse(UserDataResponse userDataResponse),"
 This callback method is invoked when a UserDataResponse is
 available for a request initiated by
 PurchasingService.getUserData().",void
com.amazon.device.iap.package-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.package-summary,Provides classes and an interface that are required to use the In-App Purchasing API with the Amazon Appstore.,N/A,N/A,N/A
com.amazon.device.iap.ResponseReceiver,"
 You must register this class as a broadcast receiver in your
 AndroidManifest.xml in order to receive broadcast intents from the Amazon
 Appstore for Android. 
 You must add the following entry in your AndroidManifest.xml file:
 


 <!-- Include these lines in your AndroidManifest.xml -->
 <receiver android:name=""com.amazon.device.iap.ResponseReceiver"" >
     <intent-filter>
         <action
             android:name=""com.amazon.inapp.purchasing.NOTIFY""
             android:permission=""com.amazon.inapp.purchasing.Permission.NOTIFY"" />
     </intent-filter>
 </receiver>
 

 
 
","onReceive(android.content.Context context,
         android.content.Intent intent)",Handles broadcast intents from Amazon Appstore.,void
com.amazon.device.iap.package-tree,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",equals(java.lang.Object obj),Compares this Receipt to the specified object.,boolean
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getCancelDate(),"Returns the cancel date for the purchase, or null if it is not canceled.",java.util.Date
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getProductType(),Returns the type of product.,ProductType
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getPurchaseDate(),Returns the purchase date for the purchase.,java.util.Date
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getReceiptId(),Returns a receipt ID which is a unique identifier of a purchase.,java.lang.String
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getSku(),Returns the SKU of the purchase.,java.lang.String
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",hashCode(),Returns a hash code for this Receipt.,int
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",isCanceled(),Checks cancellation or expiration of the receipt.,boolean
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",toJSON(),"Utility method to return a JSON object containing the information for a
 Receipt instance.",org.json.JSONObject
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",toString(),"Utility method to return a String object that contains the information
 for a Receipt instance.",java.lang.String
com.amazon.device.iap.model.UserDataResponse.RequestStatus,"Represents the status of a get user data request initiated by
 PurchasingService.getUserData().",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static UserDataResponse.RequestStatus
com.amazon.device.iap.model.UserDataResponse.RequestStatus,"Represents the status of a get user data request initiated by
 PurchasingService.getUserData().",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static UserDataResponse.RequestStatus[]
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,describeContents(),N/A,int
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,equals(java.lang.Object other),Compares two request IDs.,boolean
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,fromString(java.lang.String encodedId),Creates a RequestId from its encoded string form.,static RequestId
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,hashCode(),N/A,int
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,toJSON(),"Utility method to return a JSON object containing the information for a
 RequestId instance.",org.json.JSONObject
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,toString(),Returns the encoded string form of the RequestId.,java.lang.String
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,"writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",safeValueOf(java.lang.String val),N/A,static PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static PurchaseResponse.RequestStatus[]
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",describeContents(),N/A,int
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getCoinsReward(),May be null.,CoinsReward
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getDescription(),Returns the localized description of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getPrice(),Returns the price of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getProductType(),Returns the type of product.,ProductType
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getSku(),Returns the stock-keeping unit (SKU) of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getSmallIconUrl(),Returns the url of the small icon.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getTitle(),Returns the localized title of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",toJSON(),"Returns a JSON object containing the information for an instance of
 Product.",org.json.JSONObject
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",toString(),"Utility method to return a String object that contains the information
 for a Product instance.",java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .","writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getRequestId(),"Provides access to the request ID originally returned by
 PurchasingService.getUserData().",RequestId
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getRequestStatus(),Indicates the status of the getUserData call.,UserDataResponse.RequestStatus
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,toJSON(),"Utility method to return a JSON object containing the information for a
 UserDataResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,toString(),"Utility method to return a String object that contains the information
 for a UserDataResponse instance.",java.lang.String
com.amazon.device.iap.model.PurchaseUpdatesResponse.RequestStatus,"Represents the status of a purchase updates request initiated via
 PurchasingService.getPurchaseUpdates(boolean).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static PurchaseUpdatesResponse.RequestStatus
com.amazon.device.iap.model.PurchaseUpdatesResponse.RequestStatus,"Represents the status of a purchase updates request initiated via
 PurchasingService.getPurchaseUpdates(boolean).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static PurchaseUpdatesResponse.RequestStatus[]
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getProductData(),"Returns product data, keyed by SKU.","java.util.Map<java.lang.String,Product>"
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getRequestId(),"Returns the request identifier originally returned by
 PurchasingService.getProductData(Set).",RequestId
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getRequestStatus(),Returns the status of the product data request.,ProductDataResponse.RequestStatus
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getUnavailableSkus(),"Returns the set of SKUs provided in the original request to
 PurchasingService.getProductData(Set) for which product data is
 not available.",java.util.Set<java.lang.String>
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,toJSON(),"Utility method to return a JSON object containing the information for a
 ProductDataResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,toString(),"Utility method to return a String object that contains the information
 for a ProductDataResponse instance.",java.lang.String
com.amazon.device.iap.model.CoinsReward,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,from(int amount),N/A,protected static CoinsReward
com.amazon.device.iap.model.CoinsReward,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,getAmount(),Provides the number of Amazon Coins that a customer may be rewarded after purchasing the associated Product.,int
com.amazon.device.iap.model.package-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.ProductType,"Represents the type of product. Can be consumable content, entitlement
 content, or subscription content.",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static ProductType
com.amazon.device.iap.model.ProductType,"Represents the type of product. Can be consumable content, entitlement
 content, or subscription content.",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static ProductType[]
com.amazon.device.iap.model.package-summary,Provides classes for the data model that supports the Amazon Appstore In-App Purchasing API.,N/A,N/A,N/A
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",describeContents(),N/A,int
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",getMarketplace(),Returns the two character Alpha-2 code of ISO_3166-1 denoting the marketplace of the user.,java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",getUserId(),Returns the user ID.,java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",toJSON(),"Utility method to return a JSON object containing the information for a
 UserData instance.",org.json.JSONObject
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",toString(),"Utility method to return a String object that contains the information
 for a UserData instance.",java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.","writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.ProductDataResponse.RequestStatus,"Represents the status of a product data request initiated by
 PurchasingService.getProductData(java.util.Set).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static ProductDataResponse.RequestStatus
com.amazon.device.iap.model.ProductDataResponse.RequestStatus,"Represents the status of a product data request initiated by
 PurchasingService.getProductData(java.util.Set).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static ProductDataResponse.RequestStatus[]
com.amazon.device.iap.model.FulfillmentResult,"Represents the fulfillment result for an in-app purchase. Used
 in a call to
 PurchasingService.notifyFulfillment(String, FulfillmentResult).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static FulfillmentResult
com.amazon.device.iap.model.FulfillmentResult,"Represents the fulfillment result for an in-app purchase. Used
 in a call to
 PurchasingService.notifyFulfillment(String, FulfillmentResult).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static FulfillmentResult[]
com.amazon.device.iap.model.package-tree,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getReceipts(),"Returns receipts, or an empty list if
 getRequestStatus() is not
 PurchaseUpdatesResponse.RequestStatus.SUCCESSFUL, or there are no
 receipts.",java.util.List<Receipt>
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getRequestId(),"Returns the request ID originally returned by
 PurchasingService.getPurchaseUpdates(boolean).",RequestId
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getRequestStatus(),Returns the status of the request.,PurchaseUpdatesResponse.RequestStatus
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",hasMore(),Returns true if more results are available.,boolean
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",toJSON(),"Utility method to return a JSON object containing the information for a
 PurchaseUpdatesResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",toString(),"Utility method to return a String object that contains the information
 for a PurchaseUpdatesResponse instance.",java.lang.String
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getReceipt(),"Returns a Receipt if getRequestStatus()
 is PurchaseResponse.RequestStatus.SUCCESSFUL, otherwise null.",Receipt
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getRequestId(),"Returns the request ID originally returned by
 PurchasingService.purchase(String).",RequestId
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getRequestStatus(),Returns the status of the purchase request.,PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,toJSON(),"Utility method to return a JSON object containing the information for a
 PurchaseResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,toString(),"Utility method to return a String object that contains the information
 for a PurchaseResponse instance.",java.lang.String
class_name,class_description,method,method_description,data_type
constant-values,N/A,N/A,N/A,N/A
overview-tree,N/A,N/A,N/A,N/A
index,N/A,N/A,N/A,N/A
overview-frame,N/A,N/A,N/A,N/A
allclasses-noframe,N/A,N/A,N/A,N/A
index-all,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,N/A,N/A,N/A
deprecated-list,N/A,N/A,N/A,N/A
overview-summary,Provides classes and an interface that are required to use the In-App Purchasing API with the Amazon Appstore.,N/A,N/A,N/A
help-doc,N/A,N/A,N/A,N/A
allclasses-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getProductData(java.util.Set<java.lang.String> skus),"Initiates a request to retrieve item data of up to one-hundred
 SKUs.",static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getPurchaseUpdates(boolean reset),"Initiates a request to retrieve updates about items the customer has
 purchased and/or canceled.",static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",getUserData(),Initiates a request to retrieve the user ID of the currently logged-in user.,static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.","notifyFulfillment(java.lang.String receiptId,
                 FulfillmentResult fulfillmentResult)",Notifies Amazon about the purchase fulfillment.,static void
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.",purchase(java.lang.String sku),Initiates a purchase-flow for a product.,static RequestId
com.amazon.device.iap.PurchasingService,"Presents the primary API for interacting with the Amazon Appstore purchasing framework. First register a
 PurchasingListener instance via
 registerListener(Context, PurchasingListener) before using any other API.","registerListener(android.content.Context appContext,
                PurchasingListener listener)","Before invoking operations in this class, register a
 PurchasingListener and its Context.",static void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onProductDataResponse(ProductDataResponse productDataResponse),"
 This callback method is invoked when an ProductDataResponse is
 available for a request initiated by
 PurchasingService.getProductData(java.util.Set).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onPurchaseResponse(PurchaseResponse purchaseResponse),"
 This callback method is invoked when a PurchaseResponse is
 available for a purchase initiated by
 PurchasingService.purchase(String).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onPurchaseUpdatesResponse(PurchaseUpdatesResponse purchaseUpdatesResponse),"
 This callback method is invoked when a PurchaseUpdatesResponse is
 available for a request initiated by
 PurchasingService.getPurchaseUpdates(boolean).",void
com.amazon.device.iap.PurchasingListener,"
 Clients must implement the PurchasingListener and register an
 instance of their implementation with
 PurchasingService.registerListener(android.content.Context, PurchasingListener)
 before using other APIs in the PurchasingService.
 

 Your registered implementation of PurchasingListener 
 asynchronously receives callbacks when operations you initiate via methods in
 the PurchasingService have completed.
 

 For example, if you initiate a purchase with
 PurchasingService.purchase(String), you will eventually receive a
 notification that the PurchaseResponse is available by your
 implemented onPurchaseResponse(PurchaseResponse)
 method.
 

 Keep in mind that your UI thread invokes these callbacks. Execute
 time-intensive tasks on another thread.
 ",onUserDataResponse(UserDataResponse userDataResponse),"
 This callback method is invoked when a UserDataResponse is
 available for a request initiated by
 PurchasingService.getUserData().",void
com.amazon.device.iap.package-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.package-summary,Provides classes and an interface that are required to use the In-App Purchasing API with the Amazon Appstore.,N/A,N/A,N/A
com.amazon.device.iap.ResponseReceiver,"
 You must register this class as a broadcast receiver in your
 AndroidManifest.xml in order to receive broadcast intents from the Amazon
 Appstore for Android. 
 You must add the following entry in your AndroidManifest.xml file:
 


 <!-- Include these lines in your AndroidManifest.xml -->
 <receiver android:name=""com.amazon.device.iap.ResponseReceiver"" >
     <intent-filter>
         <action
             android:name=""com.amazon.inapp.purchasing.NOTIFY""
             android:permission=""com.amazon.inapp.purchasing.Permission.NOTIFY"" />
     </intent-filter>
 </receiver>
 

 
 
","onReceive(android.content.Context context,
         android.content.Intent intent)",Handles broadcast intents from Amazon Appstore.,void
com.amazon.device.iap.package-tree,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",equals(java.lang.Object obj),Compares this Receipt to the specified object.,boolean
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getCancelDate(),"Returns the cancel date for the purchase, or null if it is not canceled.",java.util.Date
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getProductType(),Returns the type of product.,ProductType
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getPurchaseDate(),Returns the purchase date for the purchase.,java.util.Date
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getReceiptId(),Returns a receipt ID which is a unique identifier of a purchase.,java.lang.String
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",getSku(),Returns the SKU of the purchase.,java.lang.String
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",hashCode(),Returns a hash code for this Receipt.,int
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",isCanceled(),Checks cancellation or expiration of the receipt.,boolean
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",toJSON(),"Utility method to return a JSON object containing the information for a
 Receipt instance.",org.json.JSONObject
com.amazon.device.iap.model.Receipt,"Represents the purchase of consumable content, entitlement content or
 subscription content, as well as the renewal of a subscription.",toString(),"Utility method to return a String object that contains the information
 for a Receipt instance.",java.lang.String
com.amazon.device.iap.model.UserDataResponse.RequestStatus,"Represents the status of a get user data request initiated by
 PurchasingService.getUserData().",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static UserDataResponse.RequestStatus
com.amazon.device.iap.model.UserDataResponse.RequestStatus,"Represents the status of a get user data request initiated by
 PurchasingService.getUserData().",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static UserDataResponse.RequestStatus[]
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,describeContents(),N/A,int
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,equals(java.lang.Object other),Compares two request IDs.,boolean
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,fromString(java.lang.String encodedId),Creates a RequestId from its encoded string form.,static RequestId
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,hashCode(),N/A,int
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,toJSON(),"Utility method to return a JSON object containing the information for a
 RequestId instance.",org.json.JSONObject
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,toString(),Returns the encoded string form of the RequestId.,java.lang.String
com.amazon.device.iap.model.RequestId,Represents the id of any in-app purchasing request.,"writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",safeValueOf(java.lang.String val),N/A,static PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse.RequestStatus,"Represents the status of a purchase request initiated via
 PurchasingService.purchase(String).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static PurchaseResponse.RequestStatus[]
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",describeContents(),N/A,int
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getCoinsReward(),May be null.,CoinsReward
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getDescription(),Returns the localized description of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getPrice(),Returns the price of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getProductType(),Returns the type of product.,ProductType
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getSku(),Returns the stock-keeping unit (SKU) of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getSmallIconUrl(),Returns the url of the small icon.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",getTitle(),Returns the localized title of the product.,java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",toJSON(),"Returns a JSON object containing the information for an instance of
 Product.",org.json.JSONObject
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .",toString(),"Utility method to return a String object that contains the information
 for a Product instance.",java.lang.String
com.amazon.device.iap.model.Product,"Represents an in-app product, such as consumable content, entitlement content,
 or subscription content. Retrieve product data by using
 PurchasingService.getProductData(java.util.Set)
 .","writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getRequestId(),"Provides access to the request ID originally returned by
 PurchasingService.getUserData().",RequestId
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getRequestStatus(),Indicates the status of the getUserData call.,UserDataResponse.RequestStatus
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,toJSON(),"Utility method to return a JSON object containing the information for a
 UserDataResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.UserDataResponse,Represents the result of a call to PurchasingService.getUserData().,toString(),"Utility method to return a String object that contains the information
 for a UserDataResponse instance.",java.lang.String
com.amazon.device.iap.model.PurchaseUpdatesResponse.RequestStatus,"Represents the status of a purchase updates request initiated via
 PurchasingService.getPurchaseUpdates(boolean).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static PurchaseUpdatesResponse.RequestStatus
com.amazon.device.iap.model.PurchaseUpdatesResponse.RequestStatus,"Represents the status of a purchase updates request initiated via
 PurchasingService.getPurchaseUpdates(boolean).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static PurchaseUpdatesResponse.RequestStatus[]
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getProductData(),"Returns product data, keyed by SKU.","java.util.Map<java.lang.String,Product>"
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getRequestId(),"Returns the request identifier originally returned by
 PurchasingService.getProductData(Set).",RequestId
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getRequestStatus(),Returns the status of the product data request.,ProductDataResponse.RequestStatus
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,getUnavailableSkus(),"Returns the set of SKUs provided in the original request to
 PurchasingService.getProductData(Set) for which product data is
 not available.",java.util.Set<java.lang.String>
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,toJSON(),"Utility method to return a JSON object containing the information for a
 ProductDataResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.ProductDataResponse,Represents the result of a call to PurchasingService.getProductData(java.util.Set).,toString(),"Utility method to return a String object that contains the information
 for a ProductDataResponse instance.",java.lang.String
com.amazon.device.iap.model.CoinsReward,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,from(int amount),N/A,protected static CoinsReward
com.amazon.device.iap.model.CoinsReward,Contains data about Amazon Coins that may be rewarded to customers after they purchase the associated Product.,getAmount(),Provides the number of Amazon Coins that a customer may be rewarded after purchasing the associated Product.,int
com.amazon.device.iap.model.package-frame,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.ProductType,"Represents the type of product. Can be consumable content, entitlement
 content, or subscription content.",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static ProductType
com.amazon.device.iap.model.ProductType,"Represents the type of product. Can be consumable content, entitlement
 content, or subscription content.",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static ProductType[]
com.amazon.device.iap.model.package-summary,Provides classes for the data model that supports the Amazon Appstore In-App Purchasing API.,N/A,N/A,N/A
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",describeContents(),N/A,int
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",getMarketplace(),Returns the two character Alpha-2 code of ISO_3166-1 denoting the marketplace of the user.,java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",getUserId(),Returns the user ID.,java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",toJSON(),"Utility method to return a JSON object containing the information for a
 UserData instance.",org.json.JSONObject
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.",toString(),"Utility method to return a String object that contains the information
 for a UserData instance.",java.lang.String
com.amazon.device.iap.model.UserData,"Represents the user information of the customer that is used for in-app
 purchases.","writeToParcel(android.os.Parcel out,
             int flags)",N/A,void
com.amazon.device.iap.model.ProductDataResponse.RequestStatus,"Represents the status of a product data request initiated by
 PurchasingService.getProductData(java.util.Set).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static ProductDataResponse.RequestStatus
com.amazon.device.iap.model.ProductDataResponse.RequestStatus,"Represents the status of a product data request initiated by
 PurchasingService.getProductData(java.util.Set).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static ProductDataResponse.RequestStatus[]
com.amazon.device.iap.model.FulfillmentResult,"Represents the fulfillment result for an in-app purchase. Used
 in a call to
 PurchasingService.notifyFulfillment(String, FulfillmentResult).",valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static FulfillmentResult
com.amazon.device.iap.model.FulfillmentResult,"Represents the fulfillment result for an in-app purchase. Used
 in a call to
 PurchasingService.notifyFulfillment(String, FulfillmentResult).",values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static FulfillmentResult[]
com.amazon.device.iap.model.package-tree,N/A,N/A,N/A,N/A
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getReceipts(),"Returns receipts, or an empty list if
 getRequestStatus() is not
 PurchaseUpdatesResponse.RequestStatus.SUCCESSFUL, or there are no
 receipts.",java.util.List<Receipt>
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getRequestId(),"Returns the request ID originally returned by
 PurchasingService.getPurchaseUpdates(boolean).",RequestId
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getRequestStatus(),Returns the status of the request.,PurchaseUpdatesResponse.RequestStatus
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",hasMore(),Returns true if more results are available.,boolean
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",toJSON(),"Utility method to return a JSON object containing the information for a
 PurchaseUpdatesResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.PurchaseUpdatesResponse,"Represents the result of a call to
 PurchasingService.getPurchaseUpdates(boolean).
 .",toString(),"Utility method to return a String object that contains the information
 for a PurchaseUpdatesResponse instance.",java.lang.String
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getReceipt(),"Returns a Receipt if getRequestStatus()
 is PurchaseResponse.RequestStatus.SUCCESSFUL, otherwise null.",Receipt
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getRequestId(),"Returns the request ID originally returned by
 PurchasingService.purchase(String).",RequestId
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getRequestStatus(),Returns the status of the purchase request.,PurchaseResponse.RequestStatus
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,getUserData(),"Returns the user ID and marketplace
 information of the user associated with the purchase.",UserData
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,toJSON(),"Utility method to return a JSON object containing the information for a
 PurchaseResponse instance.",org.json.JSONObject
com.amazon.device.iap.model.PurchaseResponse,Represents the result of a call to PurchasingService.purchase(String).,toString(),"Utility method to return a String object that contains the information
 for a PurchaseResponse instance.",java.lang.String
com.amazon.identity.auth.device.AuthError.ERROR_CATEGORY,"
Class Overview


Each AuthError has a category to help clients determine what generic action they want to take

","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthError.ERROR_CATEGORY"
com.amazon.identity.auth.device.AuthError.ERROR_CATEGORY,"
Class Overview


Each AuthError has a category to help clients determine what generic action they want to take

","
values()",N/A,"
            
            
            final
            static
            
            ERROR_CATEGORY[]"
com.amazon.identity.auth.device.AuthError.ERROR_CATEGORY,"
Class Overview


Each AuthError has a category to help clients determine what generic action they want to take

",N/A,N/A,N/A
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
asBinder()","Implements an AIDL interface so that it can be used in the AuthorizationListener AIDL
","
IBinder"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
extractError(Intent intent)",Helper Method to extract an AuthError from an Intent.,"
            
            
            
            static
            
            AuthError"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
extractError(Bundle bundle)",Helper Method to extract an AuthError from a Bundle.,"
            
            
            
            static
            
            AuthError"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getAuthError(Throwable throwable, Class<T> c)","Helper Method that gets a general AuthError object for unexpected errors, the class is passed in so that
 a more detailed message can be generated.","
            
            
            
            static
            <T>
            AuthError"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getAuthError(Throwable throwable, Class<T> c, AuthError.ERROR_TYPE type)","Helper Method to that gets a general AuthError object for specific errors, the class is passed in so that
 a more detailed message can be generated.","
            
            
            
            static
            <T>
            AuthError"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getCategory()",N/A,"
AuthError.ERROR_CATEGORY"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getErrorBundle(AuthError e)",Helper Method to put the AuthError in a Bundle,"
            
            
            
            static
            
            Bundle"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getErrorBundle(Intent intent)",Helper Method to help an Intent that has an AuthError put the AuthError in a Bundle,"
            
            
            
            static
            
            Bundle"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getErrorBundle(Throwable throwable, Class<T> c, AuthError.ERROR_TYPE authErrorType)","Helper Method that generates a Bundle with an AuthError in it based upon the throwable and the type, the class is passed in so that
 a more detailed message can be generated.","
            
            
            
            static
            <T>
            Bundle"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
getType()",N/A,"
AuthError.ERROR_TYPE"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
toString()",N/A,"
String"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.AuthError,"
Class Overview


This class encapsulates errors from External API Methods.
 
 These errors are passed through onError or it can be put into
 an Intent Bundle for an error Activity result.
 
 Some instances of AuthError will contain a cause which will indicate the Exception that caused
 this AuthError.
 
 This class also implements Parcelable so that AuthError objects can be put into a Bundle.
 
 All known errors will create a specific AuthError.ERROR_CATEGORY and AuthError.ERROR_TYPE, along with a
 message. If there is an exception it will be added to the AuthError cause attribute. Below are the following error
 categories:
 
ACTION - Some action is required by the calling application in order to address
  this issue. Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what
  actions are required.
NETWORK - Depending on the error type and the cause, you may want to retry the
  operation or alert the user.
INTERNAL - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
UNKNOWN - Please report errors in these categories to our SDK support team and
  provide logs. The type and cause may provide additional information in diagnosing the error.
BAD_REQUEST - This is not currently used by this SDK.


 All unhandled exceptions will create an Unknown Error in Unknown Category, along with a
 message and if there is an exception that triggered this it will be added to the AuthError
 cause attribute.
 

See Also
ParcelableBundle


",N/A,N/A,N/A
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

","
fromValue(int value)",N/A,"
            
            
            
            static
            
            AuthError.ERROR_TYPE"
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

","
getCategory()",N/A,"
AuthError.ERROR_CATEGORY"
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

","
value()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthError.ERROR_TYPE"
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

","
values()",N/A,"
            
            
            final
            static
            
            ERROR_TYPE[]"
com.amazon.identity.auth.device.AuthError.ERROR_TYPE,"
Class Overview


Each AuthError has a type to help clients determine what detailed action they want to take

",N/A,N/A,N/A
com.amazon.identity.auth.device.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.shared.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.shared.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.shared.APIListener,"
Class Overview


A callback interface for the AmazonAuthorizationManager API methods to return success or errors.


","
onError(AuthError e)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.shared.APIListener,"
Class Overview


A callback interface for the AmazonAuthorizationManager API methods to return success or errors.


","
onSuccess(Bundle response)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.shared.APIListener,"
Class Overview


A callback interface for the AmazonAuthorizationManager API methods to return success or errors.


",N/A,N/A,N/A
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onRequestCancel(Context context, InteractiveRequestRecord request, WorkflowCancellation cancellation)","This method is implemented to delegate interactive responses to your implementation of the
 onWorkflow* methods.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onRequestCompletion(Context context, InteractiveRequestRecord request, Uri uri)","This method is implemented to delegate interactive responses to your implementation of the
 onWorkflow* methods.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onRequestError(Context context, InteractiveRequestRecord request, Exception e)","This method is implemented to delegate interactive responses to your implementation of the
 onWorkflow* methods.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onWorkflowCancel(Context context, InteractiveRequestRecord requestRecord, WorkflowCancellation cancellation)",Called on when an interactive workflow has been cancelled and cannot be resumed.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onWorkflowError(Context context, InteractiveRequestRecord requestRecord, Exception exception)",Called upon failure of the interactive workflow.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.workflow.BaseWorkflowListener,"
Class Overview


To create your own interactive workflow, extend this listener and implement all abstract methods besides
 onSuccess, onCancel, and onError (which will be implemented by the app
 developer). On successful completion of a workflow, you will receive a JSON object containing the arbitrary data
 returned from your server-side runtime workflow.{@since 3.0
}
","
onWorkflowSuccess(Context context, InteractiveRequestRecord requestRecord, JSONObject result)",Called on successful completion of your workflow.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.workflow.WorkflowCancellation.Cause,"
","
valueOf(String name)",N/A,"
            
            
            
            static
            
            WorkflowCancellation.Cause"
com.amazon.identity.auth.device.workflow.WorkflowCancellation.Cause,"
","
values()",N/A,"
            
            
            final
            static
            
            Cause[]"
com.amazon.identity.auth.device.workflow.WorkflowCancellation.Cause,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

","
getCause()",N/A,"
WorkflowCancellation.Cause"
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

","
getDescription()",N/A,"
String"
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

","
toString()",N/A,"
String"
com.amazon.identity.auth.device.workflow.WorkflowCancellation,"
Class Overview


If an interactive workflow is cancelled from the Login With Amazon SDK's perspective,
 ERROR(/InternalInteractiveListener#onRequestCancel) will be called, returning an instance of this type.

 Currently, no data is provided as part of cancellation.

",N/A,N/A,N/A
com.amazon.identity.auth.device.workflow.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.workflow.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.workflow.AmazonWorkflow,"
Class Overview


This API is intended only for use by Login With Amazon-enabled SDKs.

 AmazonWorkflow allows Login With Amazon-enabled SDKs to start their own runtime workflows.{@since 2.1
}
","
openWorkflow(InteractiveRequest<?, ?, ?, ?> request, String workflowUrl, String workflowToken, Bundle options)",This method handles opening a workflow hosted by Amazon.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.workflow.AmazonWorkflow,"
Class Overview


This API is intended only for use by Login With Amazon-enabled SDKs.

 AmazonWorkflow allows Login With Amazon-enabled SDKs to start their own runtime workflows.{@since 2.1
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.InteractiveAPI,"
Class Overview


Elements of an interactive API, such as requests and listeners, share this interface.{@since 3.0
}
","
getRequestType()",Interactive APIs are bound together by a request type.,"
            abstract
            
            
            
            
            String"
com.amazon.identity.auth.device.interactive.InteractiveAPI,"
Class Overview


Elements of an interactive API, such as requests and listeners, share this interface.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.InteractiveListener,"
Class Overview


Defines the callbacks and other facets of a listener that handles the responses of interactive (out-of-app) flows.
 
 If you are building your own interactive workflow using AmazonWorkflow, use the BaseWorkflowListener
 instead of implementing against this interface directly.{@since 3.0
}
","
onCancel(U cancellation)",The interactive request for this listener was cancelled.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveListener,"
Class Overview


Defines the callbacks and other facets of a listener that handles the responses of interactive (out-of-app) flows.
 
 If you are building your own interactive workflow using AmazonWorkflow, use the BaseWorkflowListener
 instead of implementing against this interface directly.{@since 3.0
}
","
onError(V e)",The interactive request for this listener failed.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveListener,"
Class Overview


Defines the callbacks and other facets of a listener that handles the responses of interactive (out-of-app) flows.
 
 If you are building your own interactive workflow using AmazonWorkflow, use the BaseWorkflowListener
 instead of implementing against this interface directly.{@since 3.0
}
","
onSuccess(T result)",The interactive request for this listener completed successfully.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveListener,"
Class Overview


Defines the callbacks and other facets of a listener that handles the responses of interactive (out-of-app) flows.
 
 If you are building your own interactive workflow using AmazonWorkflow, use the BaseWorkflowListener
 instead of implementing against this interface directly.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
assertListenerPresent()",This method only intended for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
getContext()",Each interactive request must be made from some Android Context.,"
Context"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
getListenerClass()",This method only intended for use by Login With Amazon-enabled SDKs.,"
            abstract
            
            
            
            
            Class<T>"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
getRequestContext()",This API is intended only for use by Login With Amazon-enabled SDKs.,"
RequestContext"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
getRequestExtras()",This method only intended for use by Login With Amazon-enabled SDKs.,"
Bundle"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
needHookOnActivity()","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onCancel(U cancellation)",This method only intended for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onError(V error)",This method only intended for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onRequestCancel(Context context, InteractiveRequestRecord request, WorkflowCancellation cancellation)","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onRequestCompletion(Context context, InteractiveRequestRecord request, Uri uri)","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onRequestError(Context context, InteractiveRequestRecord request, Exception e)","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
onSuccess(S result)",This method only intended for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


","
setRequestContext(RequestContext requestContext)","Do not call this API, it is used internally by the SDK.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequest,"
Class Overview


InteractiveRequest is the base class for creating concrete interactive (out-of-app) requests. Each
 interactive request should define as much of the configuration and options for an interactive API as desired.
 Requests are bound to their listeners in two ways:
 
The Java type that corresponds to the listener is specified as the generic type parameter T.
The request type, as returned by getRequestType(). If desired, the request type can be dynamic values,
  however they will are bounded by the same class types.


 Interactive requests also expose several convenience methods for Login With Amazon-enabled SDKs with interactive
 workflows, including the ability to:
 
Assert that a corresponding listener for this request is registered on the request context, which is useful
  in scenarios where you may wish to finish the request before calling openWorkflow(InteractiveRequest, ?, ?, ?>, String, String, Bundle).
After the above assertion, directly call all listeners for this request by calling the
  InteractiveListener methods exposed on the request.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.InteractiveRequest.Builder,"
Class Overview


The base builder object for interactive requests. If you are building your own interactive workflow, it is
 recommended to provide a subclass of this builder for its request type to improve the app developer's
 integration experience.{@since 3.0
}
","
build()",Build the request instance specified by this builder.,"
            abstract
            
            
            
            
            W"
com.amazon.identity.auth.device.interactive.InteractiveRequest.Builder,"
Class Overview


The base builder object for interactive requests. If you are building your own interactive workflow, it is
 recommended to provide a subclass of this builder for its request type to improve the app developer's
 integration experience.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
getRequestExtras()","An InteractiveRequest may implement getRequestExtras(), which will be
 returned by this method.","
Bundle"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
getRequestId()",A UUID for the specific request.,"
String"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
toString()",N/A,"
String"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.interactive.InteractiveRequestRecord,"
Class Overview


A Parcelable representation of an InteractiveRequest that is returned upon request completion.
 It is most useful to be able to persist small arbitrary data about a request to be used in response processing.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.SDKInfo,"
Class Overview


A programmatic interface to describe the Login With Amazon SDK.
 
 This info can be used for purposes such as metrics reporting.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.SDKInfo,"
Class Overview


A programmatic interface to describe the Login With Amazon SDK.
 
 This info can be used for purposes such as metrics reporting.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.CancellableListener,"
Class Overview


A generic type of listener that can be cancelled.{@since 3.0
}
","
onCancel(U cancellation)",The API operation was cancelled.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.CancellableListener,"
Class Overview


A generic type of listener that can be cancelled.{@since 3.0
}
","
onError(V e)",There was an error during the API execution.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.CancellableListener,"
Class Overview


A generic type of listener that can be cancelled.{@since 3.0
}
","
onSuccess(T response)",The API executed successfully.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.CancellableListener,"
Class Overview


A generic type of listener that can be cancelled.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.Listener,"
Class Overview


A generic type of callback with parameterized success and failure return types for asynchronous operations.{@since 3.0
}
","
onError(U e)",There was an error during the API execution.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.Listener,"
Class Overview


A generic type of callback with parameterized success and failure return types for asynchronous operations.{@since 3.0
}
","
onSuccess(T response)",The API executed successfully.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.Listener,"
Class Overview


A generic type of callback with parameterized success and failure return types for asynchronous operations.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.InvalidIntegrationException,"
Class Overview


Runtime error thrown when the SDK has detected that it has not been integrated properly. The description will
 detail how the issue was caused, and steps to remediation.
 
 Any occurrence of this kind of exception should be resolved before shipping your app to customers.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.InvalidIntegrationException,"
Class Overview


Runtime error thrown when the SDK has detected that it has not been integrated properly. The description will
 detail how the issue was caused, and steps to remediation.
 
 Any occurrence of this kind of exception should be resolved before shipping your app to customers.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
assertListenerPresent(InteractiveAPI api)",This API is intended only for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
create(FragmentActivity activity)",Factory method for android.support.v4.app.FragmentActivity request sources.,"
            
            
            
            static
            
            RequestContext"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
create(Context context)",Factory method for Context request sources.,"
            
            
            
            static
            
            RequestContext"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
create(Activity activity)",Factory method for Activity request sources.,"
            
            
            
            static
            
            RequestContext"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
create(Fragment fragment)",Factory method for android.support.v4.app.Fragment request sources.,"
            
            
            
            static
            
            RequestContext"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
create(Fragment fragment)",Factory method for Fragment request sources.,"
            
            
            
            static
            
            RequestContext"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
getAggregateListener(InteractiveRequest<T, S, U, V> request)",This API is intended only for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            <T extends InteractiveListener<S, U, V>, S, U, V>
            InteractiveListener<S, U, V>"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
getContext()",N/A,"
Context"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
getListeners(InteractiveAPI api, Class<T> listenerClass)",This API is intended only for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            <T>
            Set<T>"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
isHookNeededOnUIResume()",This API is intended only for use by Login With Amazon-enabled SDKs.,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
onResume()",Override the onResume of your activity or fragment and call this method within it.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
onStartRequest(InteractiveRequestRecord request)","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
processResponse(InteractiveRequestRecord request, Uri uri)","Do not call this API, it is used internally by the SDK and may be subject to change without notice.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
registerListener(InteractiveListener<?, ?, ?> listener)",Adds the listener to the set of listeners that this request context can handle.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


","
unregisterListener(InteractiveListener<?, ?, ?> listener)",Removes a listener instance from the set of listeners this request can handle.,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.workflow.RequestContext,"
Class Overview


In order to support out-of-app interactive user experiences while accommodating for the Android application
 lifecycle, the Login With Amazon SDK provides RequestContext. It serves as a tie between the
 interactive requests and listeners registered to handle their responses.
 
 Using an interactive flow (such as authorization) requires the RequestContext to be integrated
 correctly. The following describes the integration for a single interactive request source, which is the fragment or
 activity that your interactive request originates from:
 
Declare a RequestContext instance variable in the originating fragment or activity.
Assign the RequestContext to create(Activity), passing in your activity or fragment.
Register all listeners for requests that will be made from your fragment or activity in the
  onCreate (or onCreateView if your listener will capture references to views).
Override your fragment or activity's onResume and call onResume() within it.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.workflow.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.workflow.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.workflow.ListenerNotFoundException,"
Class Overview


Indicates that an InteractiveListener was not registered on the RequestContext during the execution
 of a corresponding InteractiveRequest.
 
 Each InteractiveRequest (such as AuthorizeRequest) is created with a RequestContext.
 When a request is finished, the listeners registered to the request's RequestContext and associated
 with that type of request (this this example, AuthorizeListener) will be called on. If no listeners meet
 these requirements, then this exception will be thrown.
 
 Here are some tips for investigating this exception:
 
Ensure that there is a listener being registered for the request being made.
Ensure that the RequestContext is being created and the listeners are registered to it in your
  onCreate or onCreateView. This is to establish that the listeners are created every time
  the Android lifecycle recreates your component.
Ensure that the request is created with the same RequestContext instance that the corresponding
  listener(s) are registered to.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.workflow.ListenerNotFoundException,"
Class Overview


Indicates that an InteractiveListener was not registered on the RequestContext during the execution
 of a corresponding InteractiveRequest.
 
 Each InteractiveRequest (such as AuthorizeRequest) is created with a RequestContext.
 When a request is finished, the listeners registered to the request's RequestContext and associated
 with that type of request (this this example, AuthorizeListener) will be called on. If no listeners meet
 these requirements, then this exception will be thrown.
 
 Here are some tips for investigating this exception:
 
Ensure that there is a listener being registered for the request being made.
Ensure that the RequestContext is being created and the listeners are registered to it in your
  onCreate or onCreateView. This is to establish that the listeners are created every time
  the Android lifecycle recreates your component.
Ensure that the request is created with the same RequestContext instance that the corresponding
  listener(s) are registered to.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.CodePairManager,"
","
createCodePair(CreateCodePairRequest request)",This Method handles creating new code pair from request,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.CodePairManager,"
","
getToken(GetTokenRequest request)",This method handles getting access token from request,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.CodePairManager,"
","
hasCodePairExpired(Date expirationTime)",N/A,"
            
            
            
            static
            
            boolean"
com.amazon.identity.auth.device.api.authorization.CodePairManager,"
","
setServerCommunication(ServerCommunication serverCommunication)",N/A,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.CodePairManager,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.GetTokenResult,"
","
getAccessToken()",N/A,"
String"
com.amazon.identity.auth.device.api.authorization.GetTokenResult,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.GetTokenListener,"
","
onError(AuthError error)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.GetTokenListener,"
","
onSuccess(GetTokenResult result)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.GetTokenListener,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.Region,"
Class Overview


Controls region settings for the SDK. Determines which global end-point the SDK connects to.{@since 3.0
}
","
getStringValue()",Each region is associated with a unique string that will not change across versions of the SDK.,"
String"
com.amazon.identity.auth.device.api.authorization.Region,"
Class Overview


Controls region settings for the SDK. Determines which global end-point the SDK connects to.{@since 3.0
}
","
valueOf(String name)",N/A,"
            
            
            
            static
            
            Region"
com.amazon.identity.auth.device.api.authorization.Region,"
Class Overview


Controls region settings for the SDK. Determines which global end-point the SDK connects to.{@since 3.0
}
","
values()",N/A,"
            
            
            final
            static
            
            Region[]"
com.amazon.identity.auth.device.api.authorization.Region,"
Class Overview


Controls region settings for the SDK. Determines which global end-point the SDK connects to.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
getRequestType()","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            String"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onCancel(AuthCancellation cancellation)",Will be called when the authorization flow is cancelled by the user.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onError(AuthError e)","Will be called for the following OAuth-related errors upon authorization failure:
 
ERROR_INVALID_GRANT
ERROR_INVALID_CLIENT
ERROR_INVALID_SCOPE
ERROR_UNAUTHORIZED_CLIENT

 If the APIKey is incorrect, ERROR_ACCESS_DENIED will be returned.","
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onRequestCancel(Context context, InteractiveRequestRecord request, WorkflowCancellation cancellation)","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onRequestCompletion(Context context, InteractiveRequestRecord request, Uri uri)","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onRequestError(Context context, InteractiveRequestRecord request, Exception e)","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


","
onSuccess(AuthorizeResult result)",Will be called when a call to authorize(AuthorizeRequest) completes.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeListener,"
Class Overview


This is the listener for AuthorizeRequest. Implement and register this listener using
 registerListener(InteractiveListener, ?, ?>) to receive callbacks from the
 authorize(AuthorizeRequest) API.{@since 3.0
}

See Also
AuthorizationManagerAuthorizeRequest


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.WorkflowFactory,"
Class Overview


Generic factory for creating Workflow objects. Use this factory if a workflow you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
","
workflowNamed(String name)",Creates a workflow for a given workflow name.,"
            
            
            
            static
            
            Workflow"
com.amazon.identity.auth.device.api.authorization.WorkflowFactory,"
Class Overview


Generic factory for creating Workflow objects. Use this factory if a workflow you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
","
workflowNamed(String name, JSONObject workflowData)",Creates a workflow for a given workflow name and workflow data.,"
            
            
            
            static
            
            Workflow"
com.amazon.identity.auth.device.api.authorization.WorkflowFactory,"
Class Overview


Generic factory for creating Workflow objects. Use this factory if a workflow you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
getCause()",The abstract reason why the request was cancelled.,"
AuthCancellation.Cause"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
getDescription()",A non-localized description of the authorize cancellation reason.,"
String"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
toString()",N/A,"
String"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthCancellation,"
Class Overview


Result returned by onCancel(AuthCancellation) when an AuthorizeRequest has been
 cancelled.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.GrantType,"
Class Overview


The different kinds of authorization grants that can be requested from Login With Amazon. An authorization
 grant is a credential representing the access to resources that the user has granted.

See Also
setGrantType(GrantType)


","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthorizeRequest.GrantType"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.GrantType,"
Class Overview


The different kinds of authorization grants that can be requested from Login With Amazon. An authorization
 grant is a credential representing the access to resources that the user has granted.

See Also
setGrantType(GrantType)


","
values()",N/A,"
            
            
            final
            static
            
            GrantType[]"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.GrantType,"
Class Overview


The different kinds of authorization grants that can be requested from Login With Amazon. An authorization
 grant is a credential representing the access to resources that the user has granted.

See Also
setGrantType(GrantType)


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
fetch(Context context, Listener<User, AuthError> listener)","Retrieves basic profile information for a user (using OAuth 2.0) for the scopes requested in the last call to
 authorize(AuthorizeRequest).","
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
getUserEmail()",The email address of the customer's Amazon account.,"
String"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
getUserId()",The user's Amazon account ID.,"
String"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
getUserInfo()",Generic map of the profile data returned when scopes with profile permissions are requested.,"
Map<String, String>"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
getUserName()",The user's name as set in their Amazon customer profile.,"
String"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
getUserPostalCode()",The zip/postal code that is associated with the customer's account.,"
String"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
toString()",N/A,"
String"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.User,"
Class Overview


User encapsulates the general profile information of an Amazon customer. It can be retrieved in two
 ways:
 
As part of the authorization result via getUser().
By using the fetch(Context, Listener) API.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.CodePairResult,"
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.CodePairResult,"
","
getUserCode()",N/A,"
String"
com.amazon.identity.auth.device.api.authorization.CodePairResult,"
","
getVerificationUri()",N/A,"
String"
com.amazon.identity.auth.device.api.authorization.CodePairResult,"
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.CodePairResult,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthCancellation.Cause,"
Class Overview


Enumeration of the abstract reasons of why an AuthorizeRequest was cancelled.

","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthCancellation.Cause"
com.amazon.identity.auth.device.api.authorization.AuthCancellation.Cause,"
Class Overview


Enumeration of the abstract reasons of why an AuthorizeRequest was cancelled.

","
values()",N/A,"
            
            
            final
            static
            
            Cause[]"
com.amazon.identity.auth.device.api.authorization.AuthCancellation.Cause,"
Class Overview


Enumeration of the abstract reasons of why an AuthorizeRequest was cancelled.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.ProfileScope,"
Class Overview


A Scope factory for the scopes provided by Login With Amazon.
 
 If a desired scope is not available here or through other SDKs compatible with the Login With Amazon SDK,
 ScopeFactory can be used to create programmatic scopes from their raw string names.{@since 3.0
}
","
postalCode()","The ""postal_code"" Scope provides authorization to the user's zip/postal code via
 getUserPostalCode().","
            
            
            
            static
            
            Scope"
com.amazon.identity.auth.device.api.authorization.ProfileScope,"
Class Overview


A Scope factory for the scopes provided by Login With Amazon.
 
 If a desired scope is not available here or through other SDKs compatible with the Login With Amazon SDK,
 ScopeFactory can be used to create programmatic scopes from their raw string names.{@since 3.0
}
","
profile()","The ""profile"" Scope provides authorization to the following user profile data:
 
Amazon account ID, via getUserId()
Name, via getUserName()
Email address, via getUserEmail()

","
            
            
            
            static
            
            Scope"
com.amazon.identity.auth.device.api.authorization.ProfileScope,"
Class Overview


A Scope factory for the scopes provided by Login With Amazon.
 
 If a desired scope is not available here or through other SDKs compatible with the Login With Amazon SDK,
 ScopeFactory can be used to create programmatic scopes from their raw string names.{@since 3.0
}
","
userId()","The ""profile:user_id"" Scope provides authorization to the user's Amazon account ID via
 getUserId().","
            
            
            
            static
            
            Scope"
com.amazon.identity.auth.device.api.authorization.ProfileScope,"
Class Overview


A Scope factory for the scopes provided by Login With Amazon.
 
 If a desired scope is not available here or through other SDKs compatible with the Login With Amazon SDK,
 ScopeFactory can be used to create programmatic scopes from their raw string names.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
addScope(Scope scope)",Request a scope in addition to the current set of scopes.,"
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
addScopes(Scope... scopes)",Request multiple scopes in addition to the current set of scopes.,"
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
addWorkflow(Workflow workflow)",Request a workflow in addition to the current set of workflows.,"
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
addWorkflows(Workflow... workflows)",Request multiple workflows in addition to the current set of workflows.,"
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
build()",Build the request instance specified by this builder.,"
AuthorizeRequest"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
forGrantType(AuthorizeRequest.GrantType grantType)",Change the kind of result received upon authorization completion.,"
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
shouldReturnUserData(boolean shouldReturnUserData)","Upon authorization, the default behavior is to fetch and return user profile data in the
 onSuccess(AuthorizeResult) via getUser().","
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
showProgress(boolean showProgress)","On FireOS or Android devices which have the Amazon Shopping APP installed,,
 upon authorization, there will be a consent page asking customers to grant permission for the specified scopes
 of his Amazon account to your APP, and there should be a progress animation indicating data fetch from LWA.","
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

","
withProofKeyParameters(String codeChallenge, String codeChallengeMethod)","Configure an authorization code request with a proof key for proof of possession, per RFC 7636.","
AuthorizeRequest.Builder"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest.Builder,"
Class Overview


Instances of AuthorizeRequest must be constructed using this Builder.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
authorize(AuthorizeRequest request)",Performs authorization (using OAuth 2.0) using the given AuthorizeRequest.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
getRegion(Context context)",Gets the region the SDK is using to connect to the server endpoints.,"
            
            
            
            static
            
            Region"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
getToken(Context context, Scope[] scopes, Listener<AuthorizeResult, AuthError> listener)",Requests an authorization token (using OAuth 2.0) for the specified scopes.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
isSandboxMode(Context context)",Inspect whether the Login With Amazon SDK is operating with non-production sandbox test customer accounts.,"
            
            
            
            static
            
            boolean"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
setRegion(Context context, Region region)",Sets the region for the SDK.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
setSandboxMode(Context context, boolean useSandbox)",Configure the Login With Amazon SDK to be in sandbox mode.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


","
signOut(Context context, Listener<Void, AuthError> listener)",Removes any local authorization for the current user from this application.,"
            
            
            
            static
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizationManager,"
Class Overview


Clients of Login With Amazon use this class to authorize Amazon customers and retrieve authorization grants.
 In order to use any APIs of AuthorizationManager, your application must have configured an APIKey, see below.
 
 All methods that return results in an asynchronous manner will do so in a non-UI thread.
 
 To retrieve Amazon customer profile data, see the User class.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to
 verify the identity of the application without requiring a remote service call. In addition to the app identity,
 these tokens can carry other claims about the application as required. For example, a list of permissions granted
 to the application. The contents of the tokens are encoded and then digitally signed. The APIKey must be available
 for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example:
  <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.CodePairListener,"
","
onError(CodePairError error)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.CodePairListener,"
","
onSuccess(CodePairResult result)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.CodePairListener,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
addListener(GetTokenListener listener)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
addScope(Scope scope)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
addScopes(Scope... scopesToAdd)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
getAppInfo()",N/A,"
            
            
            
            
            
            AppInfo"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
getContext()",N/A,"
Context"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
getListener()",N/A,"
GetTokenListener"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

","
getScopes()",N/A,"
List<Scope>"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest,"
Class Overview


This class is responsible for the get token request.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
addListener(CodePairListener listener)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
addScope(Scope scope)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
addScopes(Scope... scopesToAdd)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
getAppInfo()",N/A,"
            
            
            
            
            
            AppInfo"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
getContext()",N/A,"
Context"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
getListener()",N/A,"
CodePairListener"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

","
getScopes()",N/A,"
List<Scope>"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest,"
Class Overview


This class is responsible for the create code pair request.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.Scope,"
Class Overview


Defines the programmatic concept of an OAuth 2.0 scope. The AuthorizationManager and related APIs take in
 scopes that conform to this interface. There are multiple ways to get a Scope object:
 
For general profile data about the Amazon customer, use the ProfileScope factory.
For scopes related to a Login With Amazon-enabled SDK, refer to the SDK's documentation.
If a Scope is not provided by an SDK, use the ScopeFactory factory methods to create one.
{@since 3.0
}





  


","
getName()",The literal scope name of an OAuth 2.0 request scope.,"
            abstract
            
            
            
            
            String"
com.amazon.identity.auth.device.api.authorization.Scope,"
Class Overview


Defines the programmatic concept of an OAuth 2.0 scope. The AuthorizationManager and related APIs take in
 scopes that conform to this interface. There are multiple ways to get a Scope object:
 
For general profile data about the Amazon customer, use the ProfileScope factory.
For scopes related to a Login With Amazon-enabled SDK, refer to the SDK's documentation.
If a Scope is not provided by an SDK, use the ScopeFactory factory methods to create one.
{@since 3.0
}





  


","
getScopeData()",A Scope can have additional data passed in as part of authorization.,"
            abstract
            
            
            
            
            JSONObject"
com.amazon.identity.auth.device.api.authorization.Scope,"
Class Overview


Defines the programmatic concept of an OAuth 2.0 scope. The AuthorizationManager and related APIs take in
 scopes that conform to this interface. There are multiple ways to get a Scope object:
 
For general profile data about the Amazon customer, use the ProfileScope factory.
For scopes related to a Login With Amazon-enabled SDK, refer to the SDK's documentation.
If a Scope is not provided by an SDK, use the ScopeFactory factory methods to create one.
{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.ScopeFactory,"
Class Overview


Generic factory for creating Scope objects. Use this factory if a scope you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
","
scopeNamed(String name, JSONObject scopeData)",Creates a scope for a given scope name and scope data.,"
            
            
            
            static
            
            Scope"
com.amazon.identity.auth.device.api.authorization.ScopeFactory,"
Class Overview


Generic factory for creating Scope objects. Use this factory if a scope you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
","
scopeNamed(String name)",Creates a scope for a given scope name.,"
            
            
            
            static
            
            Scope"
com.amazon.identity.auth.device.api.authorization.ScopeFactory,"
Class Overview


Generic factory for creating Scope objects. Use this factory if a scope you want to use is not provided by
 a Login With Amazon enabled SDK.{@since 3.0
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.PollingTask,"
","
run()",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.PollingTask,"
",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest.Builder,"
Class Overview


This class is the Builder class for the CreateCodePairRequest.

","
addListener(CodePairListener listener)",Add a CodePairListener to the CreateCodePairRequest.,"
CreateCodePairRequest.Builder"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest.Builder,"
Class Overview


This class is the Builder class for the CreateCodePairRequest.

","
addScope(Scope scope)",Add single scope to the CreateCodePairRequest.,"
CreateCodePairRequest.Builder"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest.Builder,"
Class Overview


This class is the Builder class for the CreateCodePairRequest.

","
addScopes(Scope... scopes)",Add multiple scopes to the CreateCodePairRequest.,"
CreateCodePairRequest.Builder"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest.Builder,"
Class Overview


This class is the Builder class for the CreateCodePairRequest.

","
build()",Get the built CreateCodePairRequest.,"
CreateCodePairRequest"
com.amazon.identity.auth.device.api.authorization.CreateCodePairRequest.Builder,"
Class Overview


This class is the Builder class for the CreateCodePairRequest.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
getAccessToken()","An access token will be returned by either authorize(AuthorizeRequest) when
 called with with AuthorizeRequest.GrantType specified as ACCESS_TOKEN, or by
 getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener).{@since 3.0
}","
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
getAuthorizationCode()","An authorization code will be returned if authorize(AuthorizeRequest) was called
 with AuthorizeRequest.GrantType specified as AUTHORIZATION_CODE.{@since 3.0
}","
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
getClientId()",Returns the client ID that is encoded within the API key used by your app to integrate with the Login with Amazon Android SDK.,"
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
getRedirectURI()",Returns the redirect_uri parameter which is required to do the exchange of code with access token and refresh token.,"
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
getUser()","If authorize(AuthorizeRequest) was called with
 shouldReturnUserData() set to true (it is true by default), then a User object
 will be available from this method.{@since 3.0
}","
User"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeResult,"
Class Overview


Returned as a result on successful completion of the following APIs:
 
authorize(AuthorizeRequest)
getToken(Context, Scope[], com.amazon.identity.auth.device.api.Listener)

AuthorizeResult will always return an authorization grant, either in the form of an access token or
 authorization code, depending on what was requested.{@since 3.0
}





  


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.GetTokenRequest.Builder,"
Class Overview


This class is the Builder class for the GetTokenRequest.

","
addListener(GetTokenListener listener)",Add a GetTokenListener to the GetTokenRequest.,"
GetTokenRequest.Builder"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest.Builder,"
Class Overview


This class is the Builder class for the GetTokenRequest.

","
addScope(Scope scope)",Add single scope to the GetTokenRequest.,"
GetTokenRequest.Builder"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest.Builder,"
Class Overview


This class is the Builder class for the GetTokenRequest.

","
addScopes(Scope... scopes)",Add multiple scopes to the GetTokenRequest.,"
GetTokenRequest.Builder"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest.Builder,"
Class Overview


This class is the Builder class for the GetTokenRequest.

","
build()",Get the built GetTokenRequest.,"
GetTokenRequest"
com.amazon.identity.auth.device.api.authorization.GetTokenRequest.Builder,"
Class Overview


This class is the Builder class for the GetTokenRequest.

",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
addScope(Scope scope)",Request a scope in addition to the current set of scopes.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
addScopes(Scope... scopesToAdd)",Request multiple scopes in addition to the current set of scopes.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
addWorkflow(Workflow workflow)",Request a workflow in addition to the current set of workflows.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
addWorkflows(Workflow... workflowsToAdd)",Request multiple workflows in addition to the current set of workflows.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getCodeChallenge()",For authorization code flow.,"
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getCodeChallengeMethod()",For authorization code flow.,"
String"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getGrantType()","By default, this is ACCESS_TOKEN.","
AuthorizeRequest.GrantType"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getListenerClass()","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            Class<AuthorizeListener>"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getRequestExtras()","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            Bundle"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getRequestType()","Do not call this API, it is for internal SDK usage only.","
            
            
            final
            
            
            String"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getScopes()",The current set of scopes being requested.,"
List<Scope>"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
getWorkflows()",The current set of workflows being requested.,"
List<Workflow>"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setCodeChallenge(String codeChallenge)",Modifies the OAuth 2.0 proof key code challenge.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setCodeChallengeMethod(String codeChallengeMethod)",Modifies the OAuth 2.0 proof key code challenge method.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setGrantType(AuthorizeRequest.GrantType grantType)",Change the kind of result received upon authorization completion.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setProofKeyParameters(String codeChallenge, String codeChallengeMethod)","Configure an authorization code request with a proof key for proof of possession, per RFC 7636.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setScopes(List<Scope> scopes)",Replace the current set of scopes for this request with a new one.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setShouldReturnUserData(boolean shouldReturnUserData)","Upon authorization, the default behavior is to fetch and return user profile data in the
 onSuccess(AuthorizeResult) via getUser().","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
setWorkflows(List<Workflow> workflows)",Replace the current set of workflows for this request with a new one.,"
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
shouldReturnUserData()",Indicates whether or not user profile data should be fetched upon authorization.,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
shouldShowProgress()",Indicates whether to enable the dialog showing progress upon authorization.,"
            
            
            
            
            
            boolean"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


","
showProgress(boolean showProgress)","On FireOS or Android devices which have the Amazon Shopping APP installed,
 upon authorization, there will be a consent page asking customers to grant permission for the specified scopes
 of his Amazon account to your APP, and there should be a progress animation indicating data fetch from LWA.","
            
            
            
            
            
            void"
com.amazon.identity.auth.device.api.authorization.AuthorizeRequest,"
Class Overview


Encapsulates the options for a call to authorize(AuthorizeRequest). The corresponding
 listener for this request is AuthorizeListener. See AuthorizeRequest.Builder for creating
 authorization requests.
 
 By default, authorize requests:
 
Do not request any scopes. In order to authorize, you must configure the request with scopes.
Return access tokens. See setGrantType(GrantType) to change the type of authorization result.
Will retrieve profile data. If you do not want user profile data to be fetched upon authorization,
  assign false to setShouldReturnUserData(boolean). User profile data can be later retrieved
  with fetch(Context, com.amazon.identity.auth.device.api.Listener).
{@since 3.0
}



  
See Also
AuthorizeRequest.BuilderAuthorizeListener


",N/A,N/A,N/A
com.amazon.identity.auth.device.api.authorization.Workflow,"
Class Overview


Defines the programmatic concept of a scope-independent workflow 
 The AuthorizationManager and related APIs take in
 workflows that conform to this interface.{@since 3.0.5
}
","
getName()",The name of a scope-independent post-authorization workflow,"
            abstract
            
            
            
            
            String"
com.amazon.identity.auth.device.api.authorization.Workflow,"
Class Overview


Defines the programmatic concept of a scope-independent workflow 
 The AuthorizationManager and related APIs take in
 workflows that conform to this interface.{@since 3.0.5
}
","
getWorkflowData()",A Workflow can have additional metadata passed in.,"
            abstract
            
            
            
            
            JSONObject"
com.amazon.identity.auth.device.api.authorization.Workflow,"
Class Overview


Defines the programmatic concept of a scope-independent workflow 
 The AuthorizationManager and related APIs take in
 workflows that conform to this interface.{@since 3.0.5
}
",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthorizationListener,"
Class Overview


A callback interface used by AmazonAuthorizationManager authorize API.

","
onCancel(Bundle cause)",The user canceled the authorization flow,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.authorization.api.AuthorizationListener,"
Class Overview


A callback interface used by AmazonAuthorizationManager authorize API.

","
onError(AuthError e)",There was an error during the API execution.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.authorization.api.AuthorizationListener,"
Class Overview


A callback interface used by AmazonAuthorizationManager authorize API.

","
onSuccess(Bundle response)",The API executed successfully.,"
            abstract
            
            
            
            
            void"
com.amazon.identity.auth.device.authorization.api.AuthorizationListener,"
Class Overview


A callback interface used by AmazonAuthorizationManager authorize API.

",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AppIdentifierHelper,"
Class Overview




","
getAppInfo(String packageName, Context context)","Return an AppInfo object containing information about the specified app, or null if the
 specified package doesn't have a valid API Key.","
            
            
            
            static
            
            AppInfo"
com.amazon.identity.auth.device.authorization.api.AppIdentifierHelper,"
Class Overview




","
isAPIKeyValid(String packageName, Context context)",Check to see if the passed in package has a valid Amazon API Key.,"
            
            
            
            static
            
            boolean"
com.amazon.identity.auth.device.authorization.api.AppIdentifierHelper,"
Class Overview




",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthzConstants.FUTURE_TYPE,"
Class Overview


Future Bundle Keys 
","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthzConstants.FUTURE_TYPE"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.FUTURE_TYPE,"
Class Overview


Future Bundle Keys 
","
values()",N/A,"
            
            
            final
            static
            
            FUTURE_TYPE[]"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.FUTURE_TYPE,"
Class Overview


Future Bundle Keys 
",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthzConstants.PROFILE_KEY,"
Class Overview


Profile Information Bundle Keys 
","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthzConstants.PROFILE_KEY"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.PROFILE_KEY,"
Class Overview


Profile Information Bundle Keys 
","
values()",N/A,"
            
            
            final
            static
            
            PROFILE_KEY[]"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.PROFILE_KEY,"
Class Overview


Profile Information Bundle Keys 
",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.package-summary,N/A,N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthzConstants.BUNDLE_KEY,"
Class Overview


Allowed Bundle Keys 
","
valueOf(String name)",N/A,"
            
            
            
            static
            
            AuthzConstants.BUNDLE_KEY"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.BUNDLE_KEY,"
Class Overview


Allowed Bundle Keys 
","
values()",N/A,"
            
            
            final
            static
            
            BUNDLE_KEY[]"
com.amazon.identity.auth.device.authorization.api.AuthzConstants.BUNDLE_KEY,"
Class Overview


Allowed Bundle Keys 
",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
authorize(String[] scopes, Bundle options, AuthorizationListener listener)","
This method is deprecated. 
      Use authorize(AuthorizeRequest).
","
Future<Bundle>"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
clearAuthorizationState(APIListener listener)","
This method is deprecated. 
      Use signOut(Context, Listener)
","
Future<Bundle>"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getAppId()",This method returns the application Id.,"
String"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getAppVariantId()",This method returns the application variant Id.,"
String"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getClientId()",This method returns the client ID that is encoded within the API key used by your app to integrate with the Login with Amazon Android SDK.,"
String"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getProfile(APIListener listener)","
This method is deprecated. 
      Use fetch(Context, Listener)
","
Future<Bundle>"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getRedirectUri()","If you are requesting the authorization code in the response to the authorize API, you must call this API in the onSuccess handler of your AuthorizationListener to get the redirect_uri parameter which is required to do server-side exchange
 of code with access token and refresh token.{@since 2.0.1
}","
String"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


","
getToken(String[] scopes, APIListener listener)","
This method is deprecated. 
      Use getToken(Context, Scope[], Listener).
","
Future<Bundle>"
com.amazon.identity.auth.device.authorization.api.AmazonAuthorizationManager,"
Class Overview


This class is used by Login with Amazon clients to authorize users and retrieve tokens and profile data.
 
 All methods with the Future<Bundle> and/or the AuthorizationListener/APIListener will return
 the results on a non-UI thread.
 
AuthorizationListener:
 The AuthorizationListener interface is used by the authorize(String[], Bundle, AuthorizationListener) method to return results asynchronously.
 AmazonAuthorizationManager calls AuthorizationListener methods on a new (worker) thread created by the SDK. These methods include:
 
onSuccess(Bundle)
onError(AuthError)
onCancel(Bundle)


APIListener:
 The APIListener interface is used by the getToken(String[], APIListener) and getProfile(APIListener)
 methods to return results in the same manner as AuthorizationListener. APIListener does not include the onCancel method.
 
Future<Bundle>: 
 Some methods return a Future object. Using the Future allows the developer to use the method synchronously.
 Calling get() will cause the flow to block until results are returned via a Bundle.
 Calling Future.get() on a non-UI thread is recommended in order to eliminate the likely risk
 of a ANR. The Bundle returned in the Future.get() call will have one additional parameter to
 help a developer determine what type of response it is (Success,Error,Cancel).
 The key for the value is FUTURE. This will return an enum of type AuthzConstants.FUTURE_TYPE.
 After determining the success or failure of the method, you can extract the data from the Bundle as if it was passed to
 onSuccess(Bundle) or onCancel(Bundle). If the method returned an error,
 you can extract the error using Bundle.getParcelable(String)} using the
 AUTH_ERROR_EXECEPTION. key.
 
APIKey: 
 The ""APIKey"" is a token meant to encode claims about a native application(e.g. Android, iOS) that can be used to verify the identity of
 the application without requiring a remote service call. In addition to the app identity, these tokens can carry other claims about the
 application as required. For example, a list of permissions granted to the application. The contents of the tokens are encoded and then
 digitally signed. The APIKey must be available for the SDK to obtain from the calling application.
 
It can be in the manifest for the application as a meta-data tag with the key ""AmazonAPIKey"" example: <meta-data android:name=""AmazonAPIKey"" android:value=""@string/my_api_key"" />
It can also be placed in a file in the application's asset folder.  The filename must be: ""api_key.txt""


AuthError:
   Error Object to help SDK developers determine what actions to take.
   Each AuthEror has a category(AuthError.ERROR_CATEGORY) and type(AuthError.ERROR_TYPE)


ACTION - Some action is required by the calling application in order to address this issue
           Consult the method documentation for specific error types (AuthError.ERROR_TYPE) and what actions are required.
      

NETWORK - Depending on the error type and the cause, you may want to retry the operation or alert the user.
      

INTERNAL - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

UNKNOWN - Please report errors in these categories to our SDK support team and provide logs. The type and cause may provide additional information in diagnosing the error.
        

BAD_REQUEST - This is not currently used by this SDK.
      

{@version 2.0.2

}

See Also
Android ANR Info


",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthzConstants,"
Class Overview


Constants to be used with AmazonAuthorizationManager

",N/A,N/A,N/A
com.amazon.identity.auth.device.authorization.api.AuthzConstants,"
Class Overview


Constants to be used with AmazonAuthorizationManager

",N/A,N/A,N/A
com.amazon.geo.mapsv2.LocationSource,"
Class Overview


Interface for replacing the map's built in location provider. The map 
 activates this object when the ""My Location"" layer is enabled. While activated
 (between calls to activate(OnLocationChangedListener) and
 deactivate()), this object should provide location updates to be
 displayed on the map. It is the responsibility of the provider to register
 and unregister for location updates appropriately. See the Location Strategies API guide for details.

","
activate(LocationSource.OnLocationChangedListener listener)",Activate this LocationSource.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.LocationSource,"
Class Overview


Interface for replacing the map's built in location provider. The map 
 activates this object when the ""My Location"" layer is enabled. While activated
 (between calls to activate(OnLocationChangedListener) and
 deactivate()), this object should provide location updates to be
 displayed on the map. It is the responsibility of the provider to register
 and unregister for location updates appropriately. See the Location Strategies API guide for details.

","
deactivate()",Deactivate this LocationSource.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.LocationSource,"
Class Overview


Interface for replacing the map's built in location provider. The map 
 activates this object when the ""My Location"" layer is enabled. While activated
 (between calls to activate(OnLocationChangedListener) and
 deactivate()), this object should provide location updates to be
 displayed on the map. It is the responsibility of the provider to register
 and unregister for location updates appropriately. See the Location Strategies API guide for details.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMyLocationChangeListener,"


This interface is deprecated.  Use standard Android location APIs instead. See the Location Strategies API guide for details.

  
Class Overview


Interface for receiving callbacks when the user's location changes.
","
onMyLocationChange(Location location)",Called when the user's location changes.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMyLocationChangeListener,"


This interface is deprecated.  Use standard Android location APIs instead. See the Location Strategies API guide for details.

  
Class Overview


Interface for receiving callbacks when the user's location changes.
",N/A,N/A,N/A
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
getMap()","
This method is deprecated. 
      Use getMapAsync(OnMapReadyCallback) instead. The
             callback of that method provides an AmazonMap
             which is guaranteed to be non-null.
","
            
            
            final
            
            
            AmazonMap"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
getMapAsync(OnMapReadyCallback callback)","Get an AmazonMap asynchronously with a callback after it is ready
 to be used.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
newInstance(AmazonMapOptions options)","Creates a new SupportMapFragment object with the specified map
 options.","
            
            
            
            static
            
            SupportMapFragment"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
newInstance()",Creates a new SupportMapFragment object with default options.,"
            
            
            
            static
            
            SupportMapFragment"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onCreate(Bundle savedInstanceState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",N/A,"
View"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onDestroy()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onDestroyView()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onLowMemory()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onPause()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onResume()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
","
onSaveInstanceState(Bundle outState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportMapFragment,"
Class Overview


Represents a Fragment for displaying a map. Use this class if your
 app is using the SupportLibrary. Otherwise, use MapFragment.
 
 Because this class is a Fragment, it encompasses the View of a
 map and manages its life cycle.
 

 If useViewLifecycleInFragment(boolean) flag is
 true, the SupportMapFragment is invalid when it is detached
 from the Activity, such as after calling the onDestroyView()
 method. The SupportMapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
 

 Typically you add a SupportMapFragment in the layout XML. For
 example:
 

 <fragment android:id=""@+id/supportmapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.SupportMapFragment"" />
 
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.LocationSource.OnLocationChangedListener,"
Class Overview


An interface for receiving callbacks when the user's location
 changes. Updates passed to this object with
 onLocationChanged(Location) are displayed on the map.

","
onLocationChanged(Location location)",Update the map with a new location.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.LocationSource.OnLocationChangedListener,"
Class Overview


An interface for receiving callbacks when the user's location
 changes. Updates passed to this object with
 onLocationChanged(Location) are displayed on the map.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.SnapshotReadyCallback,"
Class Overview


Interface for receiving callbacks from the snapshot() methods.

","
onSnapshotReady(Bitmap snapshot)","Called when the snapshot of the map created using
 snapshot(SnapshotReadyCallback) or
 snapshot(SnapshotReadyCallback, Bitmap)
 is available.","
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.SnapshotReadyCallback,"
Class Overview


Interface for receiving callbacks from the snapshot() methods.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isCompassEnabled()","Retrieves a boolean value indicating whether the compass user interface
 is enabled.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isIndoorLevelPickerEnabled()","Retrieves a boolean value indicating whether the indoor level picker UI
 for indoor maps is enabled.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isMapToolbarEnabled()",Retrieves a boolean value indicating whether the Map Toolbar is enabled.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isMyLocationButtonEnabled()","Retrieves a boolean value indicating whether the ""Locate Me"" UI is
 enabled.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isRotateGesturesEnabled()",Retrieves a boolean value indicating whether rotate gestures are enabled.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isScrollGesturesEnabled()",Retrieves a boolean value indicating whether scroll gestures are enabled.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isTiltGesturesEnabled()",Retrieves a boolean value indicating whether tilt gestures are enabled.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isZoomControlsEnabled()","Retrieves a boolean value indicating whether the zoom control user
 interface is enabled.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
isZoomGesturesEnabled()",Retrieves a boolean value indicating whether zoom gestures are enabled.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setAllGesturesEnabled(boolean enabled)","Enables or disables all gestures (rotate, scroll, tilt, and zoom
 gestures).","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setCompassEnabled(boolean enabled)",Enables or disables the compass user interface.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setIndoorLevelPickerEnabled(boolean enabled)",Enables or disables the level picker user interface for indoor maps.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setMapToolbarEnabled(boolean enabled)",Enables or disables the Map Toolbar.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setMyLocationButtonEnabled(boolean enabled)","Enables or disables the ""Locate Me"" user interface.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setRotateGesturesEnabled(boolean enabled)",Enables or disables user rotate gestures.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setScrollGesturesEnabled(boolean enabled)",Enables or disables user scroll gestures.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setTiltGesturesEnabled(boolean enabled)",Enables or disables user tilt gestures.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setZoomControlsEnabled(boolean enabled)",Enables or disables zoom user interface controls.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

","
setZoomGesturesEnabled(boolean enabled)",Enables or disables user zoom gestures.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.UiSettings,"
Class Overview


Contains the user interface settings for the map. Use
 getUiSettings() to access this object and change the user
 interface options.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnCameraChangeListener,"
Class Overview


Interface for receiving callbacks when the map camera changes position.

","
onCameraChange(CameraPosition position)",Called when the camera position has changed.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnCameraChangeListener,"
Class Overview


Interface for receiving callbacks when the map camera changes position.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
newCameraPosition(CameraPosition cameraPosition)",Returns a CameraUpdate object set to the specified CameraPosition.,"
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
newLatLng(LatLng latLng)","Returns a CameraUpdate object set to the specified geographic location
 (LatLng).","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
newLatLngBounds(LatLngBounds bounds, int width, int height, int padding)","Returns a CameraUpdate object set to the specified
 LatLngBounds, padding, width, and height.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
newLatLngBounds(LatLngBounds bounds, int padding)","Returns a CameraUpdate object set to the specified
 LatLngBounds and padding.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
newLatLngZoom(LatLng latLng, float zoom)","Returns a CameraUpdate object set to the specified LatLng
 and specified zoom level.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
scrollBy(float xPixel, float yPixel)","Returns a CameraUpdate object set to shift the camera the
 specified number of pixels.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
zoomBy(float amount, Point focus)","Returns a CameraUpdate object set to zoom the camera by a
 specified amount over a given focal point.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
zoomBy(float amount)","Returns a CameraUpdate object set to zoom the camera by the
 specified amount.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
zoomIn()","Returns a CameraUpdate object set to zoom the camera
 in one level (+1).","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
zoomOut()","Returns a CameraUpdate object set to zoom the camera out
 one level (-1).","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
","
zoomTo(float zoom)","Returns a CameraUpdate object set to zoom the camera to
 the specified level.","
            
            
            
            static
            
            CameraUpdate"
com.amazon.geo.mapsv2.CameraUpdateFactory,"
Class Overview


Contains methods for creating CameraUpdate objects. Pass a
 CameraUpdate object to the methods for animating or moving the map
 camera:
 
animateCamera(CameraUpdate)

animateCamera(CameraUpdate, AmazonMap.CancelableCallback)

animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMyLocationButtonClickListener,"
Class Overview


Interface for receiving callbacks when the user clicks the ""Locate Me""
 button.
 Note: to enable the ""Locate Me"" button, set both
 setMyLocationEnabled(boolean) and
 setMyLocationButtonEnabled(boolean) to true.
 
","
onMyLocationButtonClick()","Called when the ""Locate Me"" button is clicked.","
            abstract
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap.OnMyLocationButtonClickListener,"
Class Overview


Interface for receiving callbacks when the user clicks the ""Locate Me""
 button.
 Note: to enable the ""Locate Me"" button, set both
 setMyLocationEnabled(boolean) and
 setMyLocationButtonEnabled(boolean) to true.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.OnMapReadyCallback,"
Class Overview


Interface for receiving callbacks when the map is ready to be used. Instances
 of this interface can be set using the
 getMapAsync(OnMapReadyCallback) method of MapFragment,
 MapView, or SupportMapFragment.
 
 If an Amazon Maps update is required, the user will be prompted to update. 
 The onMapReady(AmazonMap) callback then occurs after the user
 has updated and returned to the app.

","
onMapReady(AmazonMap amazonMap)",Called when the map is ready to be used.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.OnMapReadyCallback,"
Class Overview


Interface for receiving callbacks when the map is ready to be used. Instances
 of this interface can be set using the
 getMapAsync(OnMapReadyCallback) method of MapFragment,
 MapView, or SupportMapFragment.
 
 If an Amazon Maps update is required, the user will be prompted to update. 
 The onMapReady(AmazonMap) callback then occurs after the user
 has updated and returned to the app.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
camera(CameraPosition camera)",Sets the initial camera position.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
compassEnabled(boolean enabled)",Sets the initial setCompassEnabled(boolean) option.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
createFromAttributes(Context context, AttributeSet attrs)",Creates an AmazonMapOptions object from layout attributes.,"
            
            
            
            static
            
            AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getCamera()","Gets the specified CameraPosition, or null if unspecified.","
CameraPosition"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getCompassEnabled()","Gets the specified compassEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getLiteMode()","Gets the specified liteMode option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getMapToolbarEnabled()","Gets the specified uiMapToolbar option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getMapType()","Gets the specified mapType option, or -1 if unspecified.","
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getRotateGesturesEnabled()","Gets the specified rotateGesturesEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getScrollGesturesEnabled()","Gets the specified scrollGesturesEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getTiltGesturesEnabled()","Gets the specified tiltGesturesEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getUseViewLifecycleInFragment()","Gets the specified useViewLifecycleInFragment option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getZOrderOnTop()","Gets the specified zOrderOnTop option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getZoomControlsEnabled()","Gets the specified zoomControlsEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
getZoomGesturesEnabled()","Gets the specified zoomGesturesEnabled option, or null if unspecified.","
Boolean"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
liteMode(boolean enabled)",Sets the initial lite mode option.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
mapToolbarEnabled(boolean enabled)",Sets the initial setMapToolbarEnabled(boolean) option.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
mapType(int mapType)",Sets the initial setMapType(int) option.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
rotateGesturesEnabled(boolean enabled)","Sets the initial setRotateGesturesEnabled(boolean)
 option.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
scrollGesturesEnabled(boolean enabled)","Sets the initial setScrollGesturesEnabled(boolean)
 option.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
tiltGesturesEnabled(boolean enabled)","Sets the initial setTiltGesturesEnabled(boolean)
 option.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
useViewLifecycleInFragment(boolean useViewLifecycleInFragment)","Specifies whether the lifecycle of the map should be tied to the
 MapFragment's enclosing View or the MapFragment
 itself.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
zOrderOnTop(boolean zOrderOnTop)",Sets the initial zOrderOnTop setting.,"
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
zoomControlsEnabled(boolean enabled)","Sets the initial setZoomControlsEnabled(boolean)
 option.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
","
zoomGesturesEnabled(boolean enabled)","Sets the initial setZoomGesturesEnabled(boolean)
 option.","
AmazonMapOptions"
com.amazon.geo.mapsv2.AmazonMapOptions,"
Class Overview


Configuration object used for setting initial map options when creating
 an AmazonMap. You can use this object to set options in two different ways:
 
When creating the MapFragment, SupportMapFragment, or
     MapView in XML, use XML attributes in the layout for the
     MapFragment, SupportMapFragment or MapView.
 When instantiating the MapFragment, SupportMapFragment or
     MapView in code, create a AmazonMapOptions object, set
     the options you want, then pass it to the
     MapView(Context, AmazonMapOptions),
     newInstance(AmazonMapOptions), or
     newInstance(AmazonMapOptions) methods.
 

 When using XML attributes, include the XML namespace
 xmlns:map=""http://schemas.android.com/apk/res-auto"" in the XML
 file. Note that the prefix for the namespace does not have to be ""map,""
 but you must use the same prefix for each attribute.
 
The available XML attributes are documented with the corresponding
 AmazonMapOptions setter methods.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.CancelableCallback,"
Class Overview


Interface for receiving notifications when a task is cancelled or completed.

 For instance, you can pass an object implementing this interface to the
 animateCamera(CameraUpdate, CancelableCallback) method.
 When the camera animation completes, onFinish() is called.
 If the animation is stopped before it completes, onCancel() is
 called.
 
","
onCancel()",Called when a task is cancelled.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.CancelableCallback,"
Class Overview


Interface for receiving notifications when a task is cancelled or completed.

 For instance, you can pass an object implementing this interface to the
 animateCamera(CameraUpdate, CancelableCallback) method.
 When the camera animation completes, onFinish() is called.
 If the animation is stopped before it completes, onCancel() is
 called.
 
","
onFinish()",Called when a task is completed.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.CancelableCallback,"
Class Overview


Interface for receiving notifications when a task is cancelled or completed.

 For instance, you can pass an object implementing this interface to the
 animateCamera(CameraUpdate, CancelableCallback) method.
 When the camera animation completes, onFinish() is called.
 If the animation is stopped before it completes, onCancel() is
 called.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getStreetViewPanorama()","
This method is deprecated. 
      This method is deprecated as of Amazon Maps V2.2. Please use
             getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback)
             instead. The callback will guarantee a non-null
             StreetViewPanorama instance.
","
            
            
            final
            
            
            StreetViewPanorama"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",This method is not implemented.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onCreate(Bundle savedInstanceState)",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onDestroy()",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onLowMemory()",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onPause()",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onResume()",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
onSaveInstanceState(Bundle outState)",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaView,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
animateTo(StreetViewPanoramaCamera camera, long duration)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getLocation()",N/A,"
StreetViewPanoramaLocation"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getPanoramaCamera()",N/A,"
StreetViewPanoramaCamera"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
isPanningGesturesEnabled()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
isStreetNamesEnabled()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
isUserNavigationEnabled()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
isZoomGesturesEnabled()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
orientationToPoint(StreetViewPanoramaOrientation orientation)",N/A,"
Point"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
pointToOrientation(Point point)",N/A,"
StreetViewPanoramaOrientation"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setOnStreetViewPanoramaCameraChangeListener(StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener listener)",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setOnStreetViewPanoramaChangeListener(StreetViewPanorama.OnStreetViewPanoramaChangeListener listener)",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setOnStreetViewPanoramaClickListener(StreetViewPanorama.OnStreetViewPanoramaClickListener listener)",N/A,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setPanningGesturesEnabled(boolean enablePanning)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setPosition(LatLng position)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setPosition(LatLng position, int radius)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setPosition(String panoId)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setStreetNamesEnabled(boolean enableStreetNames)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setUserNavigationEnabled(boolean enableUserNavigation)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
setZoomGesturesEnabled(boolean enableZoom)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes 
 when porting their apps from other platforms.
 
 This class can not be instantiated.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


","
onStreetViewPanoramaCameraChange(StreetViewPanoramaCamera camera)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaCameraChangeListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


",N/A,N/A,N/A
com.amazon.geo.mapsv2.CameraUpdate,"
Class Overview


Defines a target for changing the map camera. Use this class
 to set any or all of the camera properties (target, zoom level, bearing, and
 tilt), then call:
 
animateCamera(CameraUpdate)
animateCamera(CameraUpdate, AmazonMap.CancelableCallback)
animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Use methods on the CameraUpdateFactory class to create a
 CameraUpdate.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.CameraUpdate,"
Class Overview


Defines a target for changing the map camera. Use this class
 to set any or all of the camera properties (target, zoom level, bearing, and
 tilt), then call:
 
animateCamera(CameraUpdate)
animateCamera(CameraUpdate, AmazonMap.CancelableCallback)
animateCamera(CameraUpdate, int, AmazonMap.CancelableCallback)
moveCamera(CameraUpdate).
 

 Use methods on the CameraUpdateFactory class to create a
 CameraUpdate.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMapClickListener,"
Class Overview


Interface for receiving callbacks when the map is clicked. Callbacks
 always occur on the main thread.

","
onMapClick(LatLng point)",Called when the user clicks the map.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMapClickListener,"
Class Overview


Interface for receiving callbacks when the map is clicked. Callbacks
 always occur on the main thread.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnIndoorStateChangeListener,"
Class Overview


Interface for receiving notifications when indoor maps change state.
 
 Note that indoor buildings are not currently supported in the Amazon Maps API, so
 this listener is never called.
 
","
onIndoorBuildingsFocused()",Called when a building with indoor maps receives focus.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnIndoorStateChangeListener,"
Class Overview


Interface for receiving notifications when indoor maps change state.
 
 Note that indoor buildings are not currently supported in the Amazon Maps API, so
 this listener is never called.
 
","
onIndoorLevelActivated(IndoorBuilding building)",Called when a floor level of an indoor map is activated.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnIndoorStateChangeListener,"
Class Overview


Interface for receiving notifications when indoor maps change state.
 
 Note that indoor buildings are not currently supported in the Amazon Maps API, so
 this listener is never called.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
getMap()","
This method is deprecated. 
      Use getMapAsync(OnMapReadyCallback) instead. The
             callback of that method provides an AmazonMap
             which is guaranteed to be non-null.
","
            
            
            final
            
            
            AmazonMap"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
getMapAsync(OnMapReadyCallback callback)","Get an AmazonMap asynchronously with a callback after it is ready
 to be used.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
newInstance(AmazonMapOptions options)",Creates a new MapFragment object with the specified map options.,"
            
            
            
            static
            
            MapFragment"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
newInstance()",Creates a new MapFragment object with default options.,"
            
            
            
            static
            
            MapFragment"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onActivityCreated(Bundle savedInstanceState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onAttach(Activity activity)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onCreate(Bundle savedInstanceState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)",N/A,"
View"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onDestroy()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onDestroyView()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onInflate(Activity activity, AttributeSet attrs, Bundle savedInstanceState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onLowMemory()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onPause()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onResume()",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
onSaveInstanceState(Bundle outState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
","
setArguments(Bundle outState)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.MapFragment,"
Class Overview


Represents a Fragment for displaying a map.
 Use this class if your app targets android API 12 and above.
 Otherwise, use SupportMapFragment.

 Because this class is Fragment, it encompasses
 the View of a map and manages its life cycle.
If useViewLifecycleInFragment(boolean) flag is
 true, the MapFragment is invalid when it is detached from the
 Activity, such as after calling the onDestroyView() method.
 The MapFragment is usable after it is re-attached and
 onCreateView(LayoutInflater, ViewGroup, Bundle) is called.
Typically you add a MapFragment in the layout XML. For example:

 <fragment android:id=""@+id/mapfragment_container""
      android:layout_width=""match_parent""
      android:layout_height=""match_parent""
      class=""com.amazon.geo.mapsv2.MapFragment"" />
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaClickListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


","
onStreetViewPanoramaClick(StreetViewPanoramaOrientation orientation)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaClickListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnInfoWindowClickListener,"
Class Overview


Interface for receiving callbacks when a user clicks the info window
 for a Marker.

","
onInfoWindowClick(Marker marker)",Called when a user clicks the info window for a Marker.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnInfoWindowClickListener,"
Class Overview


Interface for receiving callbacks when a user clicks the info window
 for a Marker.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.MapsInitializer,"
Class Overview


Contains methods for manually initializing the Amazon Maps API. This is only
 necessary if you need to use certain API features before you obtain an
 AmazonMap object from a MapFragment, 
 SupportMapFragment, or MapView object.
 
 You must initialize the map to use classes such
 as BitmapDescriptorFactory and 
 CameraUpdateFactory before obtaining the AmazonMap.
Once you obtain a non-null AmazonMap object by calling 
 MapFragment.getMap(), 
 SupportMapFragment.getMap(),
 or MapView.getMap(), the map is initialized and you do not
 need to initialize it manually.
","
initialize(Context context)",Initializes the Amazon Maps API so that its classes are ready for use.,"
            
            
            
            static
            
            int"
com.amazon.geo.mapsv2.MapsInitializer,"
Class Overview


Contains methods for manually initializing the Amazon Maps API. This is only
 necessary if you need to use certain API features before you obtain an
 AmazonMap object from a MapFragment, 
 SupportMapFragment, or MapView object.
 
 You must initialize the map to use classes such
 as BitmapDescriptorFactory and 
 CameraUpdateFactory before obtaining the AmazonMap.
Once you obtain a non-null AmazonMap object by calling 
 MapFragment.getMap(), 
 SupportMapFragment.getMap(),
 or MapView.getMap(), the map is initialized and you do not
 need to initialize it manually.
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMarkerDragListener,"
Class Overview


Interface for receiving callbacks when the user drags a marker. Callbacks
 always occur on the main thread. Use getPosition()
 to get the current location of the Marker.
 
 Note draggable markers are not currently supported in the Amazon Maps API,
 so this listener is never called.
 
","
onMarkerDrag(Marker marker)",Called each time the marker moves while it is being dragged.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMarkerDragListener,"
Class Overview


Interface for receiving callbacks when the user drags a marker. Callbacks
 always occur on the main thread. Use getPosition()
 to get the current location of the Marker.
 
 Note draggable markers are not currently supported in the Amazon Maps API,
 so this listener is never called.
 
","
onMarkerDragEnd(Marker marker)",Called once the user releases the marker.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMarkerDragListener,"
Class Overview


Interface for receiving callbacks when the user drags a marker. Callbacks
 always occur on the main thread. Use getPosition()
 to get the current location of the Marker.
 
 Note draggable markers are not currently supported in the Amazon Maps API,
 so this listener is never called.
 
","
onMarkerDragStart(Marker marker)",Called when the user begins dragging a marker.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMarkerDragListener,"
Class Overview


Interface for receiving callbacks when the user drags a marker. Callbacks
 always occur on the main thread. Use getPosition()
 to get the current location of the Marker.
 
 Note draggable markers are not currently supported in the Amazon Maps API,
 so this listener is never called.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.Projection,"
Class Overview


An object used to translate between screen pixels (not display pixels) and geographic
 locations on the map (latitude / longitude).

 To obtain a Projection for your map, call
 AmazonMap.getProjection().

","
fromScreenLocation(Point point)","Converts the specified point on the screen (Point) to a
 geographic location on the map and returns a LatLng.","
LatLng"
com.amazon.geo.mapsv2.Projection,"
Class Overview


An object used to translate between screen pixels (not display pixels) and geographic
 locations on the map (latitude / longitude).

 To obtain a Projection for your map, call
 AmazonMap.getProjection().

","
getVisibleRegion()","Gets a VisibleRegion representing the geographic area currently
 visible on the map.","
VisibleRegion"
com.amazon.geo.mapsv2.Projection,"
Class Overview


An object used to translate between screen pixels (not display pixels) and geographic
 locations on the map (latitude / longitude).

 To obtain a Projection for your map, call
 AmazonMap.getProjection().

","
toScreenLocation(LatLng location)","Converts the specified geographic location (LatLng) to the
 corresponding point in screen pixels and returns it in a Point.","
Point"
com.amazon.geo.mapsv2.Projection,"
Class Overview


An object used to translate between screen pixels (not display pixels) and geographic
 locations on the map (latitude / longitude).

 To obtain a Projection for your map, call
 AmazonMap.getProjection().

",N/A,N/A,N/A
com.amazon.geo.mapsv2.package-summary,"
    Contains the core Amazon Maps API classes you can use for 
 configuring, displaying and referencing maps.
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.package-summary,"
    Contains the core Amazon Maps API classes you can use for 
 configuring, displaying and referencing maps.
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.
 Do not attempt to inflate a StreetViewPanoramaFragment without
 first verifying whether the street view API is available.
 
Checking for Street View Support
It is recommended that you check whether the street view API is supported
 before attempting to use any of the APIs or displaying any related UI to the
 user:

If you are writing code only for the Amazon Maps API, do not use any
 of the street view API calls.
 If you are porting your app from another platform, use the following code
 snippet to determine whether street view is available.

 
 
 boolean isStreetViewSupported = true;
 try {
     Class.forName(""com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil"");
     // The Amazon API is present
     isStreetViewSupported = false;
 } catch (ClassNotFoundException e) {
 }

","
getStreetViewPanorama()","
This method is deprecated. 
      This method is deprecated as of Amazon Maps V2.2. Please use
             getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback)
             instead. The callback will guarantee a non-null
             StreetViewPanorama instance.
","
            
            
            final
            
            
            StreetViewPanorama"
com.amazon.geo.mapsv2.StreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.
 Do not attempt to inflate a StreetViewPanoramaFragment without
 first verifying whether the street view API is available.
 
Checking for Street View Support
It is recommended that you check whether the street view API is supported
 before attempting to use any of the APIs or displaying any related UI to the
 user:

If you are writing code only for the Amazon Maps API, do not use any
 of the street view API calls.
 If you are porting your app from another platform, use the following code
 snippet to determine whether street view is available.

 
 
 boolean isStreetViewSupported = true;
 try {
     Class.forName(""com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil"");
     // The Amazon API is present
     isStreetViewSupported = false;
 } catch (ClassNotFoundException e) {
 }

","
getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",This method is not implemented.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.
 Do not attempt to inflate a StreetViewPanoramaFragment without
 first verifying whether the street view API is available.
 
Checking for Street View Support
It is recommended that you check whether the street view API is supported
 before attempting to use any of the APIs or displaying any related UI to the
 user:

If you are writing code only for the Amazon Maps API, do not use any
 of the street view API calls.
 If you are porting your app from another platform, use the following code
 snippet to determine whether street view is available.

 
 
 boolean isStreetViewSupported = true;
 try {
     Class.forName(""com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil"");
     // The Amazon API is present
     isStreetViewSupported = false;
 } catch (ClassNotFoundException e) {
 }

","
newInstance()",This class can not be instantiated.,"
            
            
            
            static
            
            StreetViewPanoramaFragment"
com.amazon.geo.mapsv2.StreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.
 Do not attempt to inflate a StreetViewPanoramaFragment without
 first verifying whether the street view API is available.
 
Checking for Street View Support
It is recommended that you check whether the street view API is supported
 before attempting to use any of the APIs or displaying any related UI to the
 user:

If you are writing code only for the Amazon Maps API, do not use any
 of the street view API calls.
 If you are porting your app from another platform, use the following code
 snippet to determine whether street view is available.

 
 
 boolean isStreetViewSupported = true;
 try {
     Class.forName(""com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil"");
     // The Amazon API is present
     isStreetViewSupported = false;
 } catch (ClassNotFoundException e) {
 }

","
newInstance(StreetViewPanoramaOptions options)",This class can not be instantiated.,"
            
            
            
            static
            
            StreetViewPanoramaFragment"
com.amazon.geo.mapsv2.StreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.
 Do not attempt to inflate a StreetViewPanoramaFragment without
 first verifying whether the street view API is available.
 
Checking for Street View Support
It is recommended that you check whether the street view API is supported
 before attempting to use any of the APIs or displaying any related UI to the
 user:

If you are writing code only for the Amazon Maps API, do not use any
 of the street view API calls.
 If you are porting your app from another platform, use the following code
 snippet to determine whether street view is available.

 
 
 boolean isStreetViewSupported = true;
 try {
     Class.forName(""com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil"");
     // The Amazon API is present
     isStreetViewSupported = false;
 } catch (ClassNotFoundException e) {
 }

",N/A,N/A,N/A
com.amazon.geo.mapsv2.SupportStreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 Do not attempt to inflate a SupportStreetViewPanoramaFragment without
 first checking if the street view API is available.
 

 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
getStreetViewPanorama()","
This method is deprecated. 
      This method is deprecated as of Amazon Maps V2.2. Please use
             getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback)
             instead. The callback will guarantee a non-null
             StreetViewPanorama instance.
","
            
            
            final
            
            
            StreetViewPanorama"
com.amazon.geo.mapsv2.SupportStreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 Do not attempt to inflate a SupportStreetViewPanoramaFragment without
 first checking if the street view API is available.
 

 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
getStreetViewPanoramaAsync(OnStreetViewPanoramaReadyCallback callback)",This method is not implemented.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.SupportStreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 Do not attempt to inflate a SupportStreetViewPanoramaFragment without
 first checking if the street view API is available.
 

 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
newInstance()",This class can not be instantiated.,"
            
            
            
            static
            
            SupportStreetViewPanoramaFragment"
com.amazon.geo.mapsv2.SupportStreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 Do not attempt to inflate a SupportStreetViewPanoramaFragment without
 first checking if the street view API is available.
 

 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
newInstance(StreetViewPanoramaOptions options)",This class can not be instantiated.,"
            
            
            
            static
            
            SupportStreetViewPanoramaFragment"
com.amazon.geo.mapsv2.SupportStreetViewPanoramaFragment,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 Do not attempt to inflate a SupportStreetViewPanoramaFragment without
 first checking if the street view API is available.
 

 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMapLongClickListener,"
Class Overview


Interface for receiving callbacks when the user performs a long click on
 the map. Callbacks always occur on the main thread.

","
onMapLongClick(LatLng point)",Called when the user performs a long click on the map.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMapLongClickListener,"
Class Overview


Interface for receiving callbacks when the user performs a long click on
 the map. Callbacks always occur on the main thread.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.OnStreetViewPanoramaReadyCallback,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 interface provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 This interface provides a non-null StreetViewPanorama after being set
 from a StreetViewPanoramaFragment or StreetViewPanoramaView.
 
 This was added in Amazon Maps V2.2.

","
onStreetViewPanoramaReady(StreetViewPanorama panorama)",This is called when the panorama is ready.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.OnStreetViewPanoramaReadyCallback,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 interface provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 This interface provides a non-null StreetViewPanorama after being set
 from a StreetViewPanoramaFragment or StreetViewPanoramaView.
 
 This was added in Amazon Maps V2.2.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMapLoadedCallback,"
Class Overview


Interface for receiving callbacks when the map finishes loading. This
 event happens when all map tiles are fetched and rendered.

 Note that this callback may not fire or may be delayed if:
 
The map cannot load due to connectivity
 The map camera continues to move due to animations or user interactions.
 
","
onMapLoaded()",Called when all map tiles have finished rendering.,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap.OnMapLoadedCallback,"
Class Overview


Interface for receiving callbacks when the map finishes loading. This
 event happens when all map tiles are fetched and rendered.

 Note that this callback may not fire or may be delayed if:
 
The map cannot load due to connectivity
 The map camera continues to move due to animations or user interactions.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getPanningGesturesEnabled()",N/A,"
Boolean"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getPanoramaId()",N/A,"
String"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getPosition()",N/A,"
LatLng"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getRadius()",N/A,"
Integer"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getStreetNamesEnabled()",N/A,"
Boolean"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getStreetViewPanoramaCamera()",N/A,"
StreetViewPanoramaCamera"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getUseViewLifecycleInFragment()",N/A,"
Boolean"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getUserNavigationEnabled()",N/A,"
Boolean"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
getZoomGesturesEnabled()",N/A,"
Boolean"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
panningGesturesEnabled(boolean enabled)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
panoramaCamera(StreetViewPanoramaCamera camera)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
panoramaId(String panoId)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
position(LatLng position)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
position(LatLng position, Integer radius)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
streetNamesEnabled(boolean enabled)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
useViewLifecycleInFragment(boolean useViewLifecycleInFragment)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
userNavigationEnabled(boolean enabled)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
","
zoomGesturesEnabled(boolean enabled)",N/A,"
StreetViewPanoramaOptions"
com.amazon.geo.mapsv2.StreetViewPanoramaOptions,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

 Do not attempt to inflate a StreetViewPanoramaView without first checking if
 the street view API is available.
See StreetViewPanoramaFragment for details about determining whether
 street view is available.
",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addCircle(CircleOptions options)",Adds a Circle to the map.,"
            
            
            final
            
            
            Circle"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addGroundOverlay(GroundOverlayOptions options)","This is not yet implemented and will throw an
 UnsupportedOperationException when called.","
            
            
            final
            
            
            GroundOverlay"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addMarker(MarkerOptions options)",Adds a marker to the map.,"
            
            
            final
            
            
            Marker"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addPolygon(PolygonOptions options)",Adds a Polygon to the map.,"
            
            
            final
            
            
            Polygon"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addPolyline(PolylineOptions options)",Adds a Polyline to the map.,"
            
            
            final
            
            
            Polyline"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
addTileOverlay(TileOverlayOptions options)",Adds a TileOverlay to the map.,"
            
            
            final
            
            
            TileOverlay"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
animateCamera(CameraUpdate update, AmazonMap.CancelableCallback callback)","Animates the map camera to the specified CameraUpdate destination over a
 default duration with an optional completion callback.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
animateCamera(CameraUpdate update, int durationMs, AmazonMap.CancelableCallback callback)","Animates the map camera to the specified CameraUpdate destination over a
 specified duration, with an optional completion callback.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
animateCamera(CameraUpdate update)","Animates the map camera to the specified CameraUpdate destination over a
 default duration.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
clear()",Removes all added objects from the map.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getCameraPosition()","Gets a CameraPosition representing a snapshot of the current position
 of the map camera.","
            
            
            final
            
            
            CameraPosition"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getFocusedBuilding()",Gets the focused building with indoor maps.,"
            
            
            final
            
            
            IndoorBuilding"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getMapType()",Gets the currently displayed map type.,"
            
            
            final
            
            
            int"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getMaxZoomLevel()",Gets the maximum zoom level for the camera at the current position.,"
            
            
            final
            
            
            float"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getMinZoomLevel()",Gets the minimum zoom level for the camera at the current position.,"
            
            
            final
            
            
            float"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getMyLocation()","
This method is deprecated. 
      Use standard Android location APIs instead. See the Location Strategies API guide for details.
","
            
            
            final
            
            
            Location"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getProjection()","Gets a Projection object that can be used to convert between
 latitude/longitude and screen coordinates.","
            
            
            final
            
            
            Projection"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
getUiSettings()","Gets a UiSettings object representing the user interface settings
 currently in use.","
            
            
            final
            
            
            UiSettings"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
isBuildingsEnabled()",Retrieves a boolean value that specifies whether buildings are enabled.,"
            
            
            final
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
isIndoorEnabled()",Retrieves a boolean value that specifies whether indoor maps are currently enabled.,"
            
            
            final
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
isMyLocationEnabled()","Retrieves a boolean value that specifies whether the ""My Location"" layer
 is currently enabled.","
            
            
            final
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
isTrafficEnabled()","Retrieves a boolean value that specifies whether the traffic layer is
 currently enabled.","
            
            
            final
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
moveCamera(CameraUpdate update)",Immediately moves the map camera to the specified CameraUpdate destination.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setBuildingsEnabled(boolean enabled)",Sets whether 3D buildings are displayed on the map.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setIndoorEnabled(boolean enabled)",Sets whether indoor maps are displayed.,"
            
            
            final
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setInfoWindowAdapter(AmazonMap.InfoWindowAdapter adapter)","Sets a custom adapter for displaying Marker info
 windows.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setLocationSource(LocationSource source)","Sets a LocationSource for the ""My Location"" layer.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setMapType(int type)",Sets the map type to display.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setMyLocationEnabled(boolean enabled)","Enable or disable the ""My Location"" layer.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnCameraChangeListener(AmazonMap.OnCameraChangeListener listener)",Sets a listener to receive callbacks when the map camera changes position.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnIndoorStateChangeListener(AmazonMap.OnIndoorStateChangeListener listener)",Sets a listener to receive callbacks for indoor maps state changes.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnInfoWindowClickListener(AmazonMap.OnInfoWindowClickListener listener)","Sets a listener to receive callbacks when the user clicks on a Marker's
 info window.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMapClickListener(AmazonMap.OnMapClickListener listener)",Sets a listener to receive callbacks when the user clicks on the map.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMapLoadedCallback(AmazonMap.OnMapLoadedCallback callback)","Sets a callback to receive notifications after all map tiles are
 fetched and rendered.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMapLongClickListener(AmazonMap.OnMapLongClickListener listener)","Sets a listener to receive callbacks when the user performs a long click
 on the map.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMarkerClickListener(AmazonMap.OnMarkerClickListener listener)","Sets a listener to receive callbacks when the user clicks on a
 Marker.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMarkerDragListener(AmazonMap.OnMarkerDragListener listener)",Sets a listener to receive callbacks when a marker is dragged.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMyLocationButtonClickListener(AmazonMap.OnMyLocationButtonClickListener listener)","Sets a listener to receive callbacks when the user clicks the ""Locate Me""
 button.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setOnMyLocationChangeListener(AmazonMap.OnMyLocationChangeListener listener)","
This method is deprecated. 
      Use standard Android location APIs instead. See the Location Strategies API guide for details.
","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setPadding(int left, int top, int right, int bottom)","Sets the number of pixels to offset all map controls, indicators, attribution
 text, and any other fixed views in from the edge of the map fragment or
 map view's bounding box.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
setTrafficEnabled(boolean enabled)",Enables or disables the traffic layer.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
snapshot(AmazonMap.SnapshotReadyCallback callback)",Takes a snapshot of the map.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
snapshot(AmazonMap.SnapshotReadyCallback callback, Bitmap bitmap)","Takes a snapshot of the map and returns it in a pre-allocated
 Bitmap passed to the method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

","
stopAnimation()",Stops any active map camera animation.,"
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.AmazonMap,"
Class Overview


The main class for interacting with the map. This class cannot be
 instantiated directly but must be obtained from
 MapFragment.getMapAsync(),
 SupportMapFragment.getMapAsync(), or
 MapView.getMapAsync().
 
 All interactions with AmazonMap must be on the main thread. Calling
 methods off of the main thread results in an IllegalStateException.
 
 Indoor maps are not currently supported. Stubs are available to provide API
 parity.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode,"
Class Overview


Sets a policy of what to do when the AmazonMaps functionality does not match
 the reference implementation.

","
enableDefaults()",N/A,"
            
            
            
            static
            
            void"
com.amazon.geo.mapsv2.AmazonMapsStrictMode,"
Class Overview


Sets a policy of what to do when the AmazonMaps functionality does not match
 the reference implementation.

","
getApiPolicy()",N/A,"
            
            
            
            static
            
            AmazonMapsStrictMode.ApiPolicy"
com.amazon.geo.mapsv2.AmazonMapsStrictMode,"
Class Overview


Sets a policy of what to do when the AmazonMaps functionality does not match
 the reference implementation.

","
setApiPolicy(AmazonMapsStrictMode.ApiPolicy policy)",N/A,"
            
            
            
            static
            
            void"
com.amazon.geo.mapsv2.AmazonMapsStrictMode,"
Class Overview


Sets a policy of what to do when the AmazonMaps functionality does not match
 the reference implementation.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

","
build()",Builds an ApiPolicy.,"
AmazonMapsStrictMode.ApiPolicy"
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

","
detectAll()","Sets all ""detect"" variables in the built policy to true.","
AmazonMapsStrictMode.ApiPolicy.Builder"
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

","
detectUnimplemented()",Detects unimplemented APIs.,"
AmazonMapsStrictMode.ApiPolicy.Builder"
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

","
penaltyLog()",Enables writing to logcat when strict mode violations occur.,"
AmazonMapsStrictMode.ApiPolicy.Builder"
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

","
penaltyThrow()","Enables throwing a StrictModeException when strict mode
 violations occur.","
AmazonMapsStrictMode.ApiPolicy.Builder"
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy.Builder,"
Class Overview


Builds an ApiPolicy object

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.InfoWindowAdapter,"
Class Overview


Interface for displaying Marker info windows. The map
 displays info windows when the user clicks a marker or when you call
 showInfoWindow(). Only one info window is displayed
 at a time, so the adapter can reuse previously created views or it
 can create a new view each time an info window is displayed.
 
 To replace the entire info window, return a View in
 getInfoWindow(Marker) and return null in
 getInfoContents(Marker). To replace just the contents
 of the info window but use the default frame, return a View
 in getInfoContents(Marker) and return null
 in getInfoWindow(Marker)

 When the map needs to display an info window, getInfoWindow(Marker)
 is called first. If this method returns a View, the View
 is used and getInfoContents(Marker) is never called. If
 the method returns null, then getInfoContents(Marker) is called.
 If this method returns a View, the View
 used as the contents of the info window by wrapping it in the
 default info window frame. If both methods return null, the
 default info window is used. The default info window displays the
 Marker's title and snippet.
 
 Note that the views returned by each method are not live views, so updates
 to the views after they are returned are not reflected on the map.
 Instead, the view is rendered as an image to be displayed as an overlay
 on the map. This also means that the view will not receive events such as
 clicks. To update the view after it has been displayed, call
 showInfoWindow(). To be notified when an info window is
 clicked, use
 setOnInfoWindowClickListener(OnInfoWindowClickListener).

","
getInfoContents(Marker marker)","Gets a View representing the contents to display inside of the default
 info window frame.","
            abstract
            
            
            
            
            View"
com.amazon.geo.mapsv2.AmazonMap.InfoWindowAdapter,"
Class Overview


Interface for displaying Marker info windows. The map
 displays info windows when the user clicks a marker or when you call
 showInfoWindow(). Only one info window is displayed
 at a time, so the adapter can reuse previously created views or it
 can create a new view each time an info window is displayed.
 
 To replace the entire info window, return a View in
 getInfoWindow(Marker) and return null in
 getInfoContents(Marker). To replace just the contents
 of the info window but use the default frame, return a View
 in getInfoContents(Marker) and return null
 in getInfoWindow(Marker)

 When the map needs to display an info window, getInfoWindow(Marker)
 is called first. If this method returns a View, the View
 is used and getInfoContents(Marker) is never called. If
 the method returns null, then getInfoContents(Marker) is called.
 If this method returns a View, the View
 used as the contents of the info window by wrapping it in the
 default info window frame. If both methods return null, the
 default info window is used. The default info window displays the
 Marker's title and snippet.
 
 Note that the views returned by each method are not live views, so updates
 to the views after they are returned are not reflected on the map.
 Instead, the view is rendered as an image to be displayed as an overlay
 on the map. This also means that the view will not receive events such as
 clicks. To update the view after it has been displayed, call
 showInfoWindow(). To be notified when an info window is
 clicked, use
 setOnInfoWindowClickListener(OnInfoWindowClickListener).

","
getInfoWindow(Marker marker)","Gets a View representing the entire info window for a
 Marker.","
            abstract
            
            
            
            
            View"
com.amazon.geo.mapsv2.AmazonMap.InfoWindowAdapter,"
Class Overview


Interface for displaying Marker info windows. The map
 displays info windows when the user clicks a marker or when you call
 showInfoWindow(). Only one info window is displayed
 at a time, so the adapter can reuse previously created views or it
 can create a new view each time an info window is displayed.
 
 To replace the entire info window, return a View in
 getInfoWindow(Marker) and return null in
 getInfoContents(Marker). To replace just the contents
 of the info window but use the default frame, return a View
 in getInfoContents(Marker) and return null
 in getInfoWindow(Marker)

 When the map needs to display an info window, getInfoWindow(Marker)
 is called first. If this method returns a View, the View
 is used and getInfoContents(Marker) is never called. If
 the method returns null, then getInfoContents(Marker) is called.
 If this method returns a View, the View
 used as the contents of the info window by wrapping it in the
 default info window frame. If both methods return null, the
 default info window is used. The default info window displays the
 Marker's title and snippet.
 
 Note that the views returned by each method are not live views, so updates
 to the views after they are returned are not reflected on the map.
 Instead, the view is rendered as an image to be displayed as an overlay
 on the map. This also means that the view will not receive events such as
 clicks. To update the view after it has been displayed, call
 showInfoWindow(). To be notified when an info window is
 clicked, use
 setOnInfoWindowClickListener(OnInfoWindowClickListener).

",N/A,N/A,N/A
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaChangeListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


","
onStreetViewPanoramaChange(StreetViewPanoramaLocation location)",N/A,"
            abstract
            
            
            
            
            void"
com.amazon.geo.mapsv2.StreetViewPanorama.OnStreetViewPanoramaChangeListener,"
Class Overview


Street views are not currently supported in the Amazon Maps API. 
 This interface provides stubs to ensure that developers can make minimal 
 code changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available..






  


",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMap.OnMarkerClickListener,"
Class Overview


Interface for receiving callbacks when the user clicks a Marker.
 Callbacks always occur on the main thread.


","
onMarkerClick(Marker marker)",Called when the user clicks a Marker.,"
            abstract
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.AmazonMap.OnMarkerClickListener,"
Class Overview


Interface for receiving callbacks when the user clicks a Marker.
 Callbacks always occur on the main thread.


",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode.StrictModeException,"
Class Overview


Thrown when a strict mode violation occurs and penaltyThrow is chosen.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode.StrictModeException,"
Class Overview


Thrown when a strict mode violation occurs and penaltyThrow is chosen.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy,"
Class Overview


Sets a policy for when an API is not implemented.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.AmazonMapsStrictMode.ApiPolicy,"
Class Overview


Sets a policy for when an API is not implemented.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
getMap()","
This method is deprecated. 
      Use getMapAsync(OnMapReadyCallback) instead. The
             callback of that method provides an AmazonMap
             which is guaranteed to be non-null.
","
            
            
            final
            
            
            AmazonMap"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
getMapAsync(OnMapReadyCallback callback)","Get an AmazonMap asynchronously with a callback after it is ready
 to be used.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onCreate(Bundle savedInstanceState)","This method must be called from the corresponding Activity
 or Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onDestroy()","This method must be called from the corresponding Activity
 or Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onLowMemory()","This method must be called from the corresponding Activity or
 Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onPause()","This method must be called from the corresponding Activity or
 Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onResume()","This method must be called from the corresponding Activity or
 Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

","
onSaveInstanceState(Bundle outState)","This method must be called from the corresponding Activity or
 Fragment method.","
            
            
            final
            
            
            void"
com.amazon.geo.mapsv2.MapView,"
Class Overview


Represents a View for displaying a map.
 
 Life cycle events of the parent Activity or Fragment must be forwarded
 to the View by calling the corresponding methods in this class:
 

onCreate(Bundle)
onResume()
onPause()
onDestroy()
onSaveInstanceState(Bundle)
onLowMemory()


 For automatic life cycle management, use a MapFragment instead.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

","
newInstance(Dialog dialog, DialogInterface.OnCancelListener cancelListener)","Creates a new ErrorDialogFragment with an
 DialogInterface.OnCancelListener.","
            
            
            
            static
            
            ErrorDialogFragment"
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

","
newInstance(Dialog dialog)",Creates a new ErrorDialogFragment.,"
            
            
            
            static
            
            ErrorDialogFragment"
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

","
onCancel(DialogInterface dialog)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

","
onCreateDialog(Bundle savedInstanceState)",N/A,"
Dialog"
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

","
show(FragmentManager manager, String tag)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.util.ErrorDialogFragment,"
Class Overview


Wraps an error dialog in a Fragment so that its life
 cycle can be managed by the Activity.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getErrorDialog(int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)",Creates a dialog for a given error with a cancel listener.,"
            
            
            
            static
            
            Dialog"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getErrorDialog(int errorCode, Activity activity, int requestCode)",Creates a dialog for a given error.,"
            
            
            
            static
            
            Dialog"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getErrorPendingIntent(int errorCode, Context context, int requestCode)",Gets an intent to handle a recoverable error such as a required update.,"
            
            
            
            static
            
            PendingIntent"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getErrorString(int errorCode)",Gets a readable string for a given error code.,"
            
            
            
            static
            
            String"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getOpenSourceSoftwareLicenseInfo(Context context)","Returns a String containing license info for open source software
 used by the library.","
            
            
            
            static
            
            String"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getRemoteContext(Context hostContext)",Gets the remote context of the Amazon Maps services.,"
            
            
            
            static
            
            Context"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
getRemoteResource(Context context)",Gets the resources of the remote context.,"
            
            
            
            static
            
            Resources"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
isAmazonMapsRuntimeAvailable(Context context)","Returns an integer code indicating whether the Amazon Maps API library is
 available on the device.","
            
            
            
            static
            
            int"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
isAmazonSignedUid(PackageManager packageManager, int uid)",Verifies if the uid belongs to an Amazon signed app.,"
            
            
            
            static
            
            boolean"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
isUserRecoverableError(int errorCode)","Returns a boolean value indicating whether the specified error is
 recoverable through user interaction such as installing an update.","
            
            
            
            static
            
            boolean"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
showErrorDialogFragment(int errorCode, Activity activity, int requestCode)",Shows a dialog fragment for a given error.,"
            
            
            
            static
            
            boolean"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
showErrorDialogFragment(int errorCode, Activity activity, int requestCode, DialogInterface.OnCancelListener cancelListener)",Shows a dialog fragment for a given error with a cancel listener.,"
            
            
            
            static
            
            boolean"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


","
showErrorNotification(int errorCode, Context context)",Shows a notification for a given error.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.util.AmazonMapsRuntimeUtil,"
Class Overview


Class providing utility methods for the Amazon Maps API.


",N/A,N/A,N/A
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
getErrorCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
getResolution()",N/A,"
PendingIntent"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
hasResolution()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
isSuccess()",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
startResolutionForResult(Activity activity, int requestCode)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.util.ConnectionResult,"
Class Overview


Error code returned from
 isAmazonMapsRuntimeAvailable(android.content.Context). 
 Use this to verify the existence of the Amazon Maps API on the device.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.util.package-summary,"
    Contains utility classes you can use for verifying that the Amazon Maps API is on the device.
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.util.package-summary,"
    Contains utility classes you can use for verifying that the Amazon Maps API is on the device.
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getFillColor()",Gets the fill color of this Polygon.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getHoles()",Gets a list of the holes that have been added to this Polygon.,"
List<List<LatLng>>"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getId()",Gets the unique ID for this Polygon.,"
String"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getPoints()","Gets a list of the geographic points that comprise the vertices of this
 Polygon.","
List<LatLng>"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getStrokeColor()",Gets the stroke color of this Polygon.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getStrokeWidth()",Gets the stroke width of this Polygon.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
getZIndex()",Gets the z-index of this Polygon.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
isGeodesic()","Retrieves a boolean value indicating whether the Polygon line
 segments are drawn as geodesic (curved to correspond to the shortest path
 between two points on the surface of the Earth) or as straight lines.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
isVisible()","Retrieves a boolean value indicating whether the Polygon is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
remove()",Removes this Polygon from the map.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setFillColor(int color)",Sets the fill color in ARGB format.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setGeodesic(boolean geodesic)","Sets whether the line segments of this Polygon are drawn geodesic
 or non-geodesic.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setHoles(List<? extends List<LatLng>> holes)",Sets the holes in this Polygon.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setPoints(List<LatLng> points)",Sets the vertices of this Polygon.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setStrokeColor(int color)",Sets the stroke color in ARGB format.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setStrokeWidth(float width)",Sets the stroke width of this Polygon's outline in screen pixels.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setVisible(boolean visible)",Sets the visibility of the Polygon.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
setZIndex(float zIndex)",Sets the z-index of the Polygon.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.Polygon,"
Class Overview


A polygon overlay that can be drawn on the map. A Polygon is a list
 of three or more points with line segments drawn between each consecutive
 point, and a line segment that closes the shape drawn from the first point to
 the last point. A valid Polygon is filled in with its fill color. A
 Polygon can also have holes, which are regions inside the shape that
 are not filled in.
 
 Obtain a Polygon by creating a PolygonOptions object with the
 initial properties and then passing it to
 addPolygon(PolygonOptions).
 

 You can change the properties of the Polygon using the setter methods
 after the Polygon is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A valid Polygon must have at least three unique vertices such that
 none of its line segments overlap. All added holes must also be valid
 polygons that do not overlap with each other, and all holes must be
 completely contained within the border of the Polygon. An invalid
 Polygon is still drawn, but is not filled in with the fill color.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.BitmapDescriptor,"
Class Overview


Defines a bitmap that can be used for custom Marker icons. Use the
 BitmapDescriptorFactory methods to create BitmapDescriptor
 objects from various sources, such as files or resources.
 
 To assign a bitmap to a marker, use
 icon(BitmapDescriptor).
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.BitmapDescriptor,"
Class Overview


Defines a bitmap that can be used for custom Marker icons. Use the
 BitmapDescriptorFactory methods to create BitmapDescriptor
 objects from various sources, such as files or resources.
 
 To assign a bitmap to a marker, use
 icon(BitmapDescriptor).
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
builder()",N/A,"
            
            
            
            static
            
            StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
builder(StreetViewPanoramaCamera camera)",N/A,"
            
            
            
            static
            
            StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
getOrientation()",N/A,"
StreetViewPanoramaOrientation"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.VisibleRegion,"
Class Overview


Object representing the four sided polygon currently visible in the map. If
 the camera is tilted, this defines a trapezoid instead of a rectangle.
 
 To get the current VisibleRegion for the map, use
 Projection.getVisibleRegion().
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.UrlTileProvider,"
Class Overview


An implementation of TileProvider that returns URLs to tiles, all of
 which must be the same size, for the map engine to download and cache as
 needed.

","
getTile(int x, int y, int zoom)",A UrlTileProvider always returns NO_TILE.,"
            
            
            final
            
            
            Tile"
com.amazon.geo.mapsv2.model.UrlTileProvider,"
Class Overview


An implementation of TileProvider that returns URLs to tiles, all of
 which must be the same size, for the map engine to download and cache as
 needed.

","
getTileUrl(int x, int y, int zoom)","Method called by the map engine to retrieve a URL to an image for the
 given coordinates.","
            abstract
            
            
            
            
            URL"
com.amazon.geo.mapsv2.model.UrlTileProvider,"
Class Overview


An implementation of TileProvider that returns URLs to tiles, all of
 which must be the same size, for the map engine to download and cache as
 needed.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
defaultMarker()",Creates a bitmap descriptor for the default Marker image.,"
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
defaultMarker(float hue)","Creates a bitmap descriptor for the default Marker image 
 using the specified color.","
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
fromAsset(String assetName)","Creates a bitmap descriptor from the specified image in the assets
 directory.","
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
fromBitmap(Bitmap image)",Creates a bitmap descriptor from the specified in-memory Bitmap.,"
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
fromFile(String fileName)",Creates a bitmap descriptor from a private (package-specific) file.,"
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
fromPath(String absolutePath)","Creates a bitmap descriptor from a file in internal storage, such as the
 SD card.","
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

","
fromResource(int resourceId)",Creates a bitmap descriptor from an image resource id.,"
            
            
            
            static
            
            BitmapDescriptor"
com.amazon.geo.mapsv2.model.BitmapDescriptorFactory,"
Class Overview


Contains methods for creating BitmapDescriptor objects from different
 sources. The bitmaps can then be used as Marker icons.
 
 You can create a BitmapDescriptor that just changes the color of the
 default marker icon, or you can use a custom image.
 

 To assign a BitmapDescriptor to a marker, use
 icon(BitmapDescriptor).
 

 Before you can use the methods in this class, the map must be initialized. If
 you call these methods before obtaining an AmazonMap object, you must
 initialize the map first by calling
 initialize(Context).

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.Tile,"
Class Overview


Represents a tile returned by a TileProvider. The image
 is created by calling
 decodeByteArray(byte[], int, int).

","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Tile,"
Class Overview


Represents a tile returned by a TileProvider. The image
 is created by calling
 decodeByteArray(byte[], int, int).

","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Tile,"
Class Overview


Represents a tile returned by a TileProvider. The image
 is created by calling
 decodeByteArray(byte[], int, int).

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
add(LatLng... points)",Adds multiple vertices to the end of the new Polyline.,"
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
add(LatLng point)",Adds a vertex to the end of the new Polyline.,"
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
addAll(Iterable<LatLng> points)","Adds all vertices in points to the end of the new
 Polyline.","
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
color(int color)",Sets the color to use for the new Polyline in ARGB format.,"
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
geodesic(boolean geodesic)","Sets whether the line segments for the new Polyline are drawn
 geodesic or non-geodesic.","
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
getColor()",Gets the stroke color to use for the new Polyline.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
getPoints()","Gets the list of the vertices to use to represent the new
 Polyline.","
List<LatLng>"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
getWidth()",Gets the stroke width to use for the new Polyline.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
getZIndex()",Gets the z-index to use for the new Polyline.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
isGeodesic()","Retrieves a boolean value indicating whether the new Polyline
 line segments are drawn as geodesic (curved to correspond to the shortest
 path between two points on the surface of the Earth) or as straight
 lines.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
isVisible()","Retrieves a boolean value indicating whether the new Polyline is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
visible(boolean visible)",Sets the visibility to use for the new Polyline.,"
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
width(float width)","Sets the stroke width to use for the new Polyline in screen
 pixels.","
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
","
zIndex(float zIndex)",Sets the z-index to use for the new the Polyline.,"
PolylineOptions"
com.amazon.geo.mapsv2.model.PolylineOptions,"
Class Overview


An object for defining the initial options for a Polyline object. Use
 this to define all the properties of a Polyline before calling the
 addPolyline(PolylineOptions) method to add the
 Polyline to the map.
 
 Modifying PolylineOptions after the Polyline has been added
 to the map has no effect on the appearance of the Polyline.
 

 Note that PolylineOptions methods do not need to be called on the main
 thread.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.LatLngBounds.Builder,"
Class Overview


Class for building LatLngBounds objects. To create a
 LatLngBounds object, call include(LatLng) for each
 LatLng to include within the bounds, then call build().

","
build()","Creates a new LatLngBounds object using the LatLng
 objects previously included with include(LatLng).","
LatLngBounds"
com.amazon.geo.mapsv2.model.LatLngBounds.Builder,"
Class Overview


Class for building LatLngBounds objects. To create a
 LatLngBounds object, call include(LatLng) for each
 LatLng to include within the bounds, then call build().

","
include(LatLng point)",Adds the specified geographic point (LatLng) to the bounds.,"
LatLngBounds.Builder"
com.amazon.geo.mapsv2.model.LatLngBounds.Builder,"
Class Overview


Class for building LatLngBounds objects. To create a
 LatLngBounds object, call include(LatLng) for each
 LatLng to include within the bounds, then call build().

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
anchor(float u, float v)",Coordinates used to anchor the image at the specified position.,"
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
bearing(float bearing)","Sets the bearing of this ground overlay to the specified degrees clockwise
 from north about the anchor point normalized to [0.0, 360.0).","
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getAnchorU()","Gets the horizontal position of the current anchor for this ground
 overlay.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getAnchorV()",Gets the vertical position of the current anchor for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getBearing()",Gets the bearing for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getBounds()",Gets the LatLngBounds for this ground overlay.,"
LatLngBounds"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getHeight()",Gets the height for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getImage()",Gets the image for this ground overlay.,"
BitmapDescriptor"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getLocation()",Gets the location for this ground overlay.,"
LatLng"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getTransparency()",Gets the transparency for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getWidth()",Gets the width for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
getZIndex()",Gets the zIndex for this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
image(BitmapDescriptor image)",Sets the image for this ground overlay.,"
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
isVisible()",Gets the visibility of this ground overlay.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
position(LatLng location, float width, float height)","Sets the position of this ground overlay with an anchor at a specific
 geographic location and a set width and height in meters.","
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
position(LatLng location, float width)","Sets the position of this ground overlay with an anchor at a specific
 geographic location and a set width in meters.","
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
positionFromBounds(LatLngBounds bounds)","Specifies the bounding box (@link LatLngBounds) that encompasses the
 image.","
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
transparency(float transparency)",Sets the transparency for this ground overlay.,"
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
visible(boolean visible)",Sets the visibility for this ground overlay.,"
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
","
zIndex(float zIndex)",Sets the zIndex for the ground overlay.,"
GroundOverlayOptions"
com.amazon.geo.mapsv2.model.GroundOverlayOptions,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Class for defining options for a new GroundOverlay.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.TileProvider,"
Class Overview


Interface for providing tile images for a TileOverlay. Method calls
 may be made from multiple threads, so implementations must be thread safe.
 See TileOverlay for information about the tile coordinate system.

","
getTile(int x, int y, int zoom)",Gets the Tile for the given coordinates.,"
            abstract
            
            
            
            
            Tile"
com.amazon.geo.mapsv2.model.TileProvider,"
Class Overview


Interface for providing tile images for a TileOverlay. Method calls
 may be made from multiple threads, so implementations must be thread safe.
 See TileOverlay for information about the tile coordinate system.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
builder()",Creates a new CameraPosition.Builder object.,"
            
            
            
            static
            
            CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
builder(CameraPosition camera)","Creates a new CameraPosition.Builder object populated with the values
 from the provided CameraPosition.","
            
            
            
            static
            
            CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
createFromAttributes(Context context, AttributeSet attrs)",Creates a camera position from an AttributeSet.,"
            
            
            
            static
            
            CameraPosition"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
fromLatLngZoom(LatLng target, float zoom)","Creates a new CameraPosition with the
 target set to the provided LatLng and the
 zoom set to the provided zoom level.","
            
            
            final
            static
            
            CameraPosition"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.CameraPosition,"
Class Overview


Immutable class representing the position of the camera. Pass this object to
 CameraUpdateFactory.newCameraPosition(CameraPosition) to create a
 CameraUpdate you can use to move the map camera
 to a new position.
 
 To get the current camera position, call
 AmazonMap.getCameraPosition.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getBearing()",Gets bearing in degrees clockwise from north,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getBounds()",Gets the bounds that encompasses the ground overlay.,"
LatLngBounds"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getHeight()",Gets the height of the ground overlay in meters.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getId()",Gets this ground overlay's map-unique id.,"
String"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getPosition()",Gets the location where this ground overlay is anchored.,"
LatLng"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getTransparency()",Gets the transparency of this ground overlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getWidth()",Gets the width of the ground overlay in meters.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
getZIndex()","Gets the order in which this ground overlay is drawn with respect to
 Polylines, Polygons, and TileOverlays but not
 Markers.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
isVisible()","Retrieves a boolean indicating whether this ground overlay would be drawn
 given that the ground overlay is within the camera's viewport.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
remove()",Removes this ground overlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setBearing(float bearing)",Sets the bearing of this ground overlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setDimensions(float width)",Sets the width of image on the map in meters.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setDimensions(float width, float height)",Sets the width and height of the image on the map in meters.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setImage(BitmapDescriptor image)","Sets the bitmap for this ground overlay and replaces the old image in the
 same spot.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setPosition(LatLng latLng)","Sets the new anchor point for this ground overlay and keeps everything
 else constant.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setPositionFromBounds(LatLngBounds bounds)","Sets the bounds of the ground overlay ignoring bearing; however, bearing
 is applied when drawing the overlay.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setTransparency(float transparency)",Sets the transparency of this ground overlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setVisible(boolean visible)","Sets whether or not this ground overlay is visible given that the overlay
 is within the camera's viewport.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
","
setZIndex(float zIndex)",Sets the z-index of this ground overlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.GroundOverlay,"
Class Overview


Ground overlays are not currently supported in the Amazon Maps API.
 
 Ground overlays are images on top of the map that are sized such that they
 cover the same portion of the map. Zooming in and out makes this image appear
 bigger or smaller (unlike markers, which stay the same size on the screen
 regardless of zoom level).
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
alpha(float alpha)",Sets the alpha (opacity) to use for the new Marker.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
anchor(float u, float v)","Sets the anchor point to use for the new Marker's image onto the
 marker's position on the surface of the map.","
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
draggable(boolean draggable)",Draggable markers are not supported in the Amazon Maps API.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
flat(boolean flat)",Flat markers are not supported in the Amazon Maps API.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getAlpha()",Gets the alpha (opacity) to use for the new Marker.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getAnchorU()","Gets the U coordinate to use for the new Marker's anchor measured
 from the left edge.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getAnchorV()","Gets the V coordinate to use for the new Marker's anchor measured
 from the top edge.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getIcon()",Gets the custom icon that was set for the new Marker.,"
BitmapDescriptor"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getInfoWindowAnchorU()","Gets the U coordinate to use for the info window's anchor, measured from
 the left edge.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getInfoWindowAnchorV()","Gets the V coordinate to use for the info window's anchor, measured from
 the top edge.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getPosition()",Gets the position to use for the new Marker.,"
LatLng"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getRotation()",Gets the rotation to use for the new Marker.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getSnippet()",Gets the snippet to use for the new Marker.,"
String"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
getTitle()",Gets the title to use for the new Marker.,"
String"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
icon(BitmapDescriptor icon)","Sets a custom icon to use for the new Marker as a
 BitmapDescriptor.","
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
infoWindowAnchor(float u, float v)","Sets the anchor point to use for the new Marker's info window on
 the Marker's image.","
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
isDraggable()",Draggable markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
isFlat()",Flat markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
isVisible()","Retrieves a boolean value indicating whether the new Marker
 is visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
position(LatLng position)",Sets the geographic position to use for the new Marker.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
rotation(float rotation)","Sets the rotation to use for the new Marker measured in degrees
 clockwise from the default position.","
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
snippet(String snippet)",Sets the snippet text to use for the new Marker.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
title(String title)",Sets the title to use for the new Marker.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
visible(boolean visible)",Sets the visibility to use for the new Marker.,"
MarkerOptions"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.MarkerOptions,"
Class Overview


An object for defining the initial options for a Marker object. Use
 this to define all the properties of a Marker before calling the
 addMarker(MarkerOptions) method to add the Marker
 to the map.
 
 Modifying MarkerOptions after the Marker has been added to
 the map has no effect on the appearance of the Marker.
 

 Note that MarkerOptions methods do not need to be called on the main
 thread.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
builder()",Returns a new LatLngBounds.Builder object.,"
            
            
            
            static
            
            LatLngBounds.Builder"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
contains(LatLng point)","Retrieves a boolean value indicating whether the specified geographic
 point (LatLng) is within the rectangle defined by the
 LatLngBounds.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
getCenter()","Returns a LatLng representing the approximate geographical center
 of the LatLngBounds.","
LatLng"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
including(LatLng point)","Adds a specified geographic point (LatLng) to the
 LatLngBounds and returns a new LatLngBounds instance.","
LatLngBounds"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.LatLngBounds,"
Class Overview


Immutable class representing a rectangle defined by LatLng objects at
 its northeast and southwest points.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.IndoorBuilding,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
getActiveLevelIndex()",Indoor building maps are not currently supported in the Amazon Maps API.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.IndoorBuilding,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
getDefaultLevelIndex()",Indoor building maps are not currently supported in the Amazon Maps API.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.IndoorBuilding,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
getLevels()",Indoor building maps are not currently supported in the Amazon Maps API.,"
List<IndoorLevel>"
com.amazon.geo.mapsv2.model.IndoorBuilding,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
isUnderground()",Indoor building maps are not currently supported in the Amazon Maps API.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.IndoorBuilding,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

","
equals(Object obj)","Two LatLng objects are considered equal only if their
 corresponding latitudes and longitudes are bitwise equal.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.LatLng,"
Class Overview


Immutable class representing a geographic point on the map represented by a
 latitude/longitude pair, in degrees.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
activate()",Indoor building maps are not currently supported in the Amazon Maps API.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
getName()",Indoor building maps are not currently supported in the Amazon Maps API.,"
String"
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
getShortName()",Indoor building maps are not currently supported in the Amazon Maps API.,"
String"
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.IndoorLevel,"
Class Overview


Indoor building maps are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code changes
 when porting their apps from other platforms.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getCenter()","Gets the geographic location of the center of this Circle
 as a LatLng.","
LatLng"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getFillColor()",Gets the fill color of this Circle.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getId()",Gets the unique ID for this Circle.,"
String"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getRadius()",Gets the radius of the Circle in meters.,"
            
            
            
            
            
            double"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getStrokeColor()",Gets the stroke color of this Circle.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getStrokeWidth()",Gets the stroke width of this Circle in screen pixels.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
getZIndex()",Gets the z-index of this Circle.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
isVisible()",A boolean value indicating whether the Circle is visible or hidden.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
remove()",Removes this Circle from the map.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setCenter(LatLng center)",Sets the geographic point at the center of this Circle.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setFillColor(int color)",Sets the fill color in ARGB format.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setRadius(double radius)",Sets the radius of this Circle in meters.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setStrokeColor(int color)",Sets the stroke color in ARGB format.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setStrokeWidth(float width)",Sets the stroke width of this Circle's outline in screen pixels.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setVisible(boolean visible)",Sets the visibility of the Circle.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
setZIndex(float zIndex)",Sets the z-index of the Circle.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.Circle,"
Class Overview


A circle overlay that can be displayed on the map. Obtain a Circle by
 creating a CircleOptions object with the initial circle properties
 and then passing it to addCircle(CircleOptions).
 
 You can change the properties of the Circle using the setter methods
 after the Circle is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
add(LatLng... points)",Adds multiple vertices to the end of the new Polygon.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
add(LatLng point)",Adds a vertex to the end of the new Polygon.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
addAll(Iterable<LatLng> points)","Adds all vertices in points to the end of the new
 Polygon.","
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
addHole(Iterable<LatLng> points)",Adds a hole to the new Polygon.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
fillColor(int color)",Sets the fill color to use for the new Polygon in ARGB format.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
geodesic(boolean geodesic)","Sets whether the line segments for the new Polygon are drawn
 geodesic or non-geodesic.","
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getFillColor()",Gets the fill color to use for the new Polygon.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getHoles()","Gets a list of the holes that have been added with
 addHole(Iterable).","
List<List<LatLng>>"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getPoints()",Gets the list of the vertices to use to represent the new Polygon.,"
List<LatLng>"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getStrokeColor()",Gets the stroke color to use for the new Polygon.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getStrokeWidth()",Gets the stroke width to use for the new Polygon.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
getZIndex()",Gets the z-index to use for the new Polygon.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
isGeodesic()","Retrieves a boolean value indicating whether the new Polygon line
 segments are drawn as geodesic (curved to correspond to the shortest path
 between two points on the surface of the Earth) or as straight lines.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
isVisible()","Retrieves a boolean value indicating whether the new Polygon is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
strokeColor(int color)",Sets the stroke color to use for the new Polygon in ARGB format.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
strokeWidth(float width)","Sets the stroke width to use for the new Polygon's outline in
 screen pixels.","
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
visible(boolean visible)",Sets the visibility to use for the new Polygon.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
","
zIndex(float zIndex)",Sets the z-index to use for the new the Polygon.,"
PolygonOptions"
com.amazon.geo.mapsv2.model.PolygonOptions,"
Class Overview


An object for defining the initial options for a Polygon object. Use
 this to define all the properties of a Polygon before calling the
 addPolygon(PolygonOptions) method to add the
 Polygon to the map.
 
 Modifying PolygonOptions after the Polygon has been added to
 the map has no effect on the appearance of the Polygon.
 

 See Polygon for details on creating a valid Polygon.
 

 Note that PolygonOptions methods do not need to be called on the main
 thread.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLocation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.package-summary,"
    Contains the model classes you can use for manipulating map objects 
 such as latitude / longitude points, markers, shapes, and lines. 
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.package-summary,"
    Contains the model classes you can use for manipulating map objects 
 such as latitude / longitude points, markers, shapes, and lines. 
 

    

  ",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
bearing(float bearing)",N/A,"
StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
build()",N/A,"
StreetViewPanoramaCamera"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
orientation(StreetViewPanoramaOrientation orientation)",N/A,"
StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
tilt(float tilt)",N/A,"
StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
zoom(float zoom)",N/A,"
StreetViewPanoramaCamera.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaCamera.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
center(LatLng center)",Sets the geographic point to use for the center of the new Circle.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
fillColor(int color)",Sets the fill color in ARGB format.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getCenter()","Gets the geographic location to use as the center of the new Circle as a
 LatLng.","
LatLng"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getFillColor()",Gets the fill color to use for the new Circle.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getRadius()",Gets the radius to use for the Circle in meters.,"
            
            
            
            
            
            double"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getStrokeColor()",Gets the stroke color to use for the new Circle.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getStrokeWidth()",Gets the stroke width to use for the new Circle.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
getZIndex()",Gets the z-index to use for the new Circle.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
isVisible()","Returns a boolean indicating whether the new Circle is visible or
 hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
radius(double radius)",Sets the radius to use for the new Circle in meters.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
strokeColor(int color)",Sets the stroke color to use for the new Circle in ARGB format.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
strokeWidth(float width)","Sets the stroke width to use for the new Circle's outline in
 screen pixels.","
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
visible(boolean visible)",Sets the visibility to use for the new Circle.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
","
zIndex(float zIndex)",Sets the z-index to use for the new the Circle.,"
CircleOptions"
com.amazon.geo.mapsv2.model.CircleOptions,"
Class Overview


An object for defining the initial options for a Circle object. Use
 this to define all the properties of a Circle before calling the
 addCircle(CircleOptions) method to add the Circle
 to the map.
 
 Modifying CircleOptions after the Circle has been added to the
 map has no effect on the appearance of the Circle.
 

 Note that CircleOptions methods do not need to be called on the main
 thread.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
bearing(float bearing)",N/A,"
StreetViewPanoramaOrientation.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
build()",N/A,"
StreetViewPanoramaOrientation"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
","
tilt(float tilt)",N/A,"
StreetViewPanoramaOrientation.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation.Builder,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This
 class provides stubs to ensure that developers can make minimal code
 changes when porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining
 whether street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.RuntimeRemoteException,"
Class Overview


Thrown when an unrecoverable error occurs.


",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.RuntimeRemoteException,"
Class Overview


Thrown when an unrecoverable error occurs.


",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
fadeIn(boolean fadeIn)","Sets whether tiles for the new TileOverlay should fade in or
 display instantly with no fade effect.","
TileOverlayOptions"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
getFadeIn()","Retrieves a boolean value indicating whether the tiles for the new
 TileOverlay should fade in.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
getTileProvider()",Gets the TileProvider to use for the new TileOverlay.,"
TileProvider"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
getZIndex()",Gets the z-index to use for the new TileOverlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
isVisible()","Retrieves a boolean value indicating whether the new TileOverlay
 is visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
tileProvider(TileProvider tileProvider)",Sets the TileProvider to use for the new TileOverlay.,"
TileOverlayOptions"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
visible(boolean visible)",Sets the visibility to use for the new TileOverlay.,"
TileOverlayOptions"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
writeToParcel(Parcel out, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


","
zIndex(float zIndex)",Sets the z-index to use for the new the TileOverlay.,"
TileOverlayOptions"
com.amazon.geo.mapsv2.model.TileOverlayOptions,"
Class Overview


An object for defining the initial options for a TileOverlay object.
 Use this to define all the properties of a TileOverlay before calling
 the addTileOverlay(TileOverlayOptions) method to add the
 TileOverlay to the map.
 
 Modifying TileOverlayOptions after the TileOverlay has been
 added to the map has no effect on the appearance of the TileOverlay.
 
 Note that TileOverlayOptions methods do not need to be called on the main
 thread. 






  


",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getAlpha()",Gets the alpha (opacity) of the Marker.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getId()",Gets the unique ID for this Marker.,"
String"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getPosition()","Gets a LatLng representing the geographic position of the
 Marker.","
LatLng"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getRotation()","Gets the rotation of the Marker in degrees clockwise from the
 default.","
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getSnippet()",Gets the snippet of the Marker.,"
String"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
getTitle()",Gets the title of the Marker.,"
String"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
hideInfoWindow()",Hides this Marker's info window if it is currently visible.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
isDraggable()",Draggable markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
isFlat()",Flat markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
isInfoWindowShown()","Retrieves a boolean value indicating whether the info window for the
 Marker is currently displayed.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
isVisible()","Retrieves a boolean value indicating whether the Marker is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
remove()",Removes this Marker from the map.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setAlpha(float alpha)",Sets the alpha (opacity) of the Marker.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setAnchor(float anchorU, float anchorV)","Sets the anchor point for the Marker's image on Marker's
 position on the surface of the map.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setDraggable(boolean draggable)",Draggable markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setFlat(boolean flat)",Flat markers are not supported in the Amazon Maps API.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setIcon(BitmapDescriptor icon)",Sets a custom icon for the Marker as a BitmapDescriptor.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setInfoWindowAnchor(float anchorU, float anchorV)","Sets the anchor point for the Marker's info window on the marker's
 image.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setPosition(LatLng latlng)",Sets the geographic position of the Marker.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setRotation(float rotation)","Sets the rotation of the Marker measured in degrees clockwise
 from the default position.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setSnippet(String snippet)",Sets the snippet text of the Marker.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setTitle(String title)",Sets the title of the Marker.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
setVisible(boolean visible)",Sets the visibility of the Marker.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
","
showInfoWindow()",Shows this marker's info window if the Marker is visible.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Marker,"
Class Overview


An icon overlay that can be displayed at a specific geographic location on
 the map. A Marker is drawn in relation to the screen rather than the
 map's surface; rotating, zooming, or tilting the map does not change the
 orientation or appearance of the icon.
 
 Obtain a Marker by creating a MarkerOptions object with the
 initial marker properties and then passing it to
 addMarker(MarkerOptions).
 

 You can change the properties of the Marker using the setter methods
 after the Marker is created. Note that all getter and setter methods
 must be called on the main thread or an IllegalStateException is
 thrown.
 

 A Marker can use a default ""pin"" icon, a default icon with a custom
 color, or a custom bitmap in place of the default icon. Set the icon for a
 marker with setIcon(BitmapDescriptor) or
 MarkerOptions.icon(BitmapDescriptor).
 

 Clicking a Marker displays a default info window if the object has a
 title defined. You can provide a custom window by implementing
 AmazonMap.InfoWindowAdapter and assigning it with
 setInfoWindowAdapter(InfoWindowAdapter).
 

 You can change the default marker click behavior by implementing
 AmazonMap.OnMarkerClickListener and assigning it with
 setOnMarkerClickListener(AmazonMap.OnMarkerClickListener).
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
clearTileCache()",Clears the tile cache.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
getFadeIn()",Retrieves a boolean value indicating whether the tiles should fade in.,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
getId()",Gets the unique ID for this TileOverlay.,"
String"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
getZIndex()",Gets the z-index of this TileOverlay.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
isVisible()","Retrieves a boolean value indicating whether the TileOverlay is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
remove()",Removes this TileOverlay from the map.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
setFadeIn(boolean fadeIn)","Sets whether tiles should fade in or display instantly with no fade
 effect.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
setVisible(boolean visible)",Sets the visibility of the TileOverlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


","
setZIndex(float zIndex)",Sets the z-index of the TileOverlay.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.TileOverlay,"
Class Overview


Represents a set of images placed on top of the normal base map tiles. The
 images can completely replace the standard map tiles. Alternatively,
 transparent tiles can add features to the standard map. Obtain the images for
 the TileOverlay from the given TileProvider.
 
 Obtain a TileOverlay by creating a TileOverlayOptions object
 with the initial properties and then passing it to
 addTileOverlay(TileOverlayOptions).
 

 You can change the properties of the TileOverlay using the setter
 methods after the TileOverlay is created. All getter and setter
 methods must be called on the main thread or an IllegalStateException
 is thrown.
 

 The TileProvider must be set in the TileOverlayOptions and
 cannot be changed for an existing TileOverlay. To change the
 displayed tiles, you can either update your TileProvider internally
 and call clearTileCache(), or call remove() to remove the
 existing TileOverlay and then add another.
 
Tiles and Tile Coordinates

 The world is projected with a Mercator projection. The map ranges from -180
 to 180 degrees of longitude west to east. From north to south, the map is
 truncated at 85.05113 and -85.05113 degrees in order to make the map square.
 

 The map world is divided into several square tiles that contain the map data.
 Low zoom levels show a small number of tiles and high zoom levels show many
 more tiles. For a zoom level N, the world is divided into 4N tiles
 arranged in a 2N x 2N grid. These tiles have x and y
 coordinates in the closed range [0, 2N - 1]. The tile in the top
 left (northwest) has the coordinate (0, 0) and the tile in the bottom right
 (southeast) has the coordinate (2N - 1, 2N - 1).
 

 You can get the minimum zoom level with getMinZoomLevel()
 and the maximum zoom level with getMaxZoomLevel(). The map
 downloads and renders only the tiles that overlap the screen for the current
 zoom level.
 

See Also
Mercator
      projection on Wikipedia


",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

","
bearing(float bearing)","Sets the bearing (rotation) of the camera, in degrees clockwise from
 north.","
CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

","
build()",Creates the new CameraPosition.,"
CameraPosition"
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

","
target(LatLng location)",Sets the camera target location to the specified LatLng.,"
CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

","
tilt(float tilt)",Sets the tilt of the camera.,"
CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

","
zoom(float zoom)",Sets the zoom level of the camera.,"
CameraPosition.Builder"
com.amazon.geo.mapsv2.model.CameraPosition.Builder,"
Class Overview


Class for building CameraPosition objects.

",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.StreetViewPanoramaLink,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
getColor()",Gets the color of this Polyline's line segments.,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
getId()",Gets the unique ID for this Polyline.,"
String"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
getPoints()","Gets a list of the geographic points that comprise the vertices of this
 Polyline.","
List<LatLng>"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
getWidth()",Gets the stroke width of this Polyline.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
getZIndex()",Gets the z-index of this Polyline.,"
            
            
            
            
            
            float"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
isGeodesic()","Retrieves a boolean value indicating whether the line segments for the
 Polyline are drawn as geodesic (curved to correspond to the
 shortest path between two points on the surface of the Earth) or as
 straight lines.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
isVisible()","Retrieves a boolean value indicating whether the Polyline is
 visible or hidden.","
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
remove()",Removes this Polyline from the map.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setColor(int color)",Sets the color for the Polyline in ARGB format.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setGeodesic(boolean geodesic)","Sets whether the line segments of this Polyline are drawn
 geodesic or non-geodesic.","
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setPoints(List<LatLng> points)",Sets the vertices of this Polyline.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setVisible(boolean visible)",Sets the visibility of the Polyline.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setWidth(float width)",Sets the stroke width of this Polyline in screen pixels.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
setZIndex(float zIndex)",Sets the z-index of the Polyline.,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.Polyline,"
Class Overview


A line overlay that can be drawn on the map. A Polyline is a line
 connecting a series of points on the map. Unlike a a Polygon, a
 Polyline is not closed.
 
 Obtain a Polyline by creating a PolylineOptions object with
 the initial properties and then passing it to
 addPolyline(PolylineOptions).
 

 You can change the properties of the Polyline using the setter
 methods after the Polyline is created. Note that all getter and
 setter methods must be called on the main thread or an
 IllegalStateException is thrown.
 
",N/A,N/A,N/A
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
builder(StreetViewPanoramaOrientation orientation)",N/A,"
            
            
            
            static
            
            StreetViewPanoramaOrientation.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
builder()",N/A,"
            
            
            
            static
            
            StreetViewPanoramaOrientation.Builder"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
describeContents()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
equals(Object obj)",N/A,"
            
            
            
            
            
            boolean"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
hashCode()",N/A,"
            
            
            
            
            
            int"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
toString()",N/A,"
String"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
","
writeToParcel(Parcel dest, int flags)",N/A,"
            
            
            
            
            
            void"
com.amazon.geo.mapsv2.model.StreetViewPanoramaOrientation,"
Class Overview


Street views are not currently supported in the Amazon Maps API. This class
 provides stubs to ensure that developers can make minimal code changes when
 porting their apps from other platforms.
 
 See StreetViewPanoramaFragment for details about determining whether
 street view is available.
 
",N/A,N/A,N/A
com.amazon.device.ads.AmazonViewableAdSDKBridgeFactory,Creates the AdSDKBridge with the given AdControllerAccessor.,createAdSDKBridge(com.amazon.device.ads.AdControlAccessor accessor),Creates the AdSDKBridge with the given AdControllerAccessor.,com.amazon.device.ads.AdSDKBridge
com.amazon.device.ads.AdError.ErrorCode,Represents an error type returned when loading an ad.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static AdError.ErrorCode
com.amazon.device.ads.AdError.ErrorCode,Represents an error type returned when loading an ad.,values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static AdError.ErrorCode[]
com.amazon.device.ads.AdConstants,N/A,N/A,N/A,N/A
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",adHidden(),Puts the ad into a background state.,void
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",adShown(),"Fires impression pixel and makes ad clickable if the following criteria is met:
 1.",boolean
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",destroy(),Destroys all the resources being used by the ModelessInterstitialAd.,void
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",getTimeout(),Gets the current timeout value in milliseconds.,int
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isLoading(),Gets whether this Ad is currently being loaded.,boolean
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isReady(),Tells whether this ModelessInterstitialAd is ready to show.,boolean
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(),Creates a background thread to load a new ad.,boolean
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(AdTargetingOptions adTargetingOptions),Creates a background thread to load a new ad based on AdTargetingOptions.,boolean
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setListener(AdListener adListener),Sets the listener used to track ad life-cycle events.,void
com.amazon.device.ads.ModelessInterstitialAd,"A modeless interstitial ad. It will display in a given view within the application. The application is
 responsible for informing the ad when it is shown and hidden. When the ad is shown, it registers as an 
 impression and click events will be allowed. Only one InterstitialAd or ModelessInterstitialAd may be 
 shown at a time, but any number of instances can be created and loaded.
 
 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTimeout(int timeout),Sets the timeout value for loading the ad.,void
com.amazon.device.ads.AmazonFireServicesAdapter,N/A,getAdvertisingIdentifierInfo(),N/A,com.amazon.device.ads.GooglePlayServices.AdvertisingInfo
com.amazon.device.ads.AmazonFireServicesAdapter,N/A,newAdapter(),N/A,static AmazonFireServicesAdapter
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",containsAdvancedOption(java.lang.String key),Returns whether an advanced option has been set.,boolean
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",enableGeoLocation(boolean enable),"If your app or the device is enabled to provide the latitude and longitude
 coordinates, you can allow the Amazon Mobile Ads API to send these values
 to the Amazon Mobile Ad Network.",AdTargetingOptions
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",getAdvancedOption(java.lang.String key),Gets the value of an advanced option.,java.lang.String
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",getAge(),"Deprecated. 
This API has been deprecated and will be removed in a future release.
",int
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",getFloorPrice(),Gets the floor price in micro-dollars,long
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",isGeoLocationEnabled(),Returns the current value of the use geo-location option.,boolean
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.","setAdvancedOption(java.lang.String key,
                 java.lang.String value)",Sets advanced options using String key/value pairs.,AdTargetingOptions
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",setAge(int age),"Deprecated. 
This API has been deprecated and will be removed in a future release.
",AdTargetingOptions
com.amazon.device.ads.AdTargetingOptions,"The configurable ad targeting options for each ad. This contains targeting options that apply to a specific
 ad, such as floor price.",setFloorPrice(long floorPrice),You can specify a floor price in micro-dollars.,AdTargetingOptions
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",destroy(),Releases all resources used by an instance.,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",disableAutoShow(),"* When autoShow is disabled, showAd has to be called explicitly.",void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",enableAutoShow(),"When autoShow is enabled, after Ad is rendered, showAd will be called directly.",void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",getAdSize(),Gets the size of the ad to load.,AdSize
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",getTimeout(),Gets the current timeout value in milliseconds.,int
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isAdLoading(),"Deprecated. 
Use isLoading()
",boolean
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isLoading(),Gets whether this Ad is currently loading,boolean
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isShowing(),N/A,boolean
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(),"Load a single ad into this AdLayout, with no targeting options
 Creates a background thread to load a new ad.",boolean
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(AdTargetingOptions options),"Load a single ad into this AdLayout with ad-level targeting options
 Creates a background thread to load a new ad based on AdTargetingOptions.",boolean
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",onAttachedToWindow(),N/A,protected void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",onDetachedFromWindow(),N/A,protected void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.","onLayout(boolean changed,
        int left,
        int top,
        int right,
        int bottom)",N/A,protected void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",onWindowVisibilityChanged(int visibility),N/A,protected void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setListener(AdListener adListener),Sets the listener used to track ad life-cycle events.,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTimeout(int timeout),Sets the timeout value for loading the ad.,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTranslationX(float translationX),N/A,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTranslationY(float translationY),N/A,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setX(float x),N/A,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setY(float y),N/A,void
com.amazon.device.ads.AdLayout,"An Android view used to retrieve and display Amazon ads. An AdLayout can only load and display one ad at a time,
 although there is no limitation on the number of AdLayouts you can instantiate.
 

 All ad placements must be fully visible without scrolling when initially displayed to the user.
 If an ad placement is embedded with content in a screen, it can scroll with that content and
 scroll off of the screen as long as it started above the fold.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",showAd(),Show Ad when the ad state is rendered.,boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",getTimeout(),Gets the current timeout value in milliseconds.,int
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isAdShowing(),Checks if an InterstitialAd is currently showing to the user.,static boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isLoading(),Gets whether this Ad is currently being loaded.,boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isReady(),Tells whether this InterstitialAd is ready to show.,boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isShowing(),Tells whether this InterstitialAd is currently being displayed to the user,boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(),"Load a single ad into this InterstitialAd, with no targeting options
 Creates a background thread to load a new ad.",boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(AdTargetingOptions options),"Load a single ad into this InterstitialAd
 Creates a background thread to load a new ad based on AdTargetingOptions.",boolean
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setListener(AdListener adListener),Sets the listener used to track ad life-cycle events.,void
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTimeout(int timeout),Sets the timeout value for loading the ad.,void
com.amazon.device.ads.InterstitialAd,"A full screen interstitial ad. It will display over top of the application and have its own close button
 for the user to dismiss it. Only one InterstitiaAd may be shown at a time, but any number of instances can be
 created and loaded.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",showAd(),"Shows the Ad to the user, if it is ready to show.",boolean
com.amazon.device.ads.ViewabilityObserverFactory,N/A,buildViewabilityObserver(com.amazon.device.ads.AdController adcontroller),N/A,com.amazon.device.ads.ViewabilityObserver
com.amazon.device.ads.AdActivity,N/A,onBackPressed(),N/A,void
com.amazon.device.ads.AdActivity,N/A,onConfigurationChanged(android.content.res.Configuration newConfig),N/A,void
com.amazon.device.ads.AdActivity,N/A,onCreate(Bundle savedInstanceState),N/A,void
com.amazon.device.ads.AdActivity,N/A,onDestroy(),N/A,void
com.amazon.device.ads.AdActivity,N/A,onPause(),N/A,void
com.amazon.device.ads.AdActivity,N/A,onResume(),N/A,void
com.amazon.device.ads.AdActivity,N/A,onStop(),N/A,void
com.amazon.device.ads.AdActivity,N/A,onWindowFocusChanged(boolean hasFocus),N/A,void
com.amazon.device.ads.ApplicationDefaultPreferences,N/A,getDefaultPreferences(),N/A,static SharedPreferences
com.amazon.device.ads.ApplicationDefaultPreferences,N/A,initialize(Context context),N/A,static void
com.amazon.device.ads.GDPRInfo,Convert GDPRInfo instance to JSONObject,toJsonObject(),Convert GDPRInfo instance to JSONObject,JSONObject
com.amazon.device.ads.GDPRInfo,Convert GDPRInfo instance to JSONObject,toJsonObject(SharedPreferences prefs),N/A,JSONObject
com.amazon.device.ads.package-frame,N/A,N/A,N/A,N/A
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.",onAdCollapsed(Ad ad),Called after a user clicks on the close button on an expanded ad.,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.",onAdDismissed(Ad ad),Called whenever the user has dismissed an interstitial ad.,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.",onAdExpanded(Ad ad),Called after a user clicks on an expandable ad and after the ad expands.,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.",onAdExpired(Ad ad),Called when an ad has expired before being displayed,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.","onAdFailedToLoad(Ad ad,
                AdError error)",Called whenever the retrieval of an ad fails.,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.","onAdLoaded(Ad ad,
          AdProperties adProperties)",Called each time an ad is successfully loaded.,void
com.amazon.device.ads.DefaultAdListener,"A default AdListener implementation. By default, each method will log a debug message
 to the logcat. Extend this class and override only the methods you wish to implement.","onAdResized(Ad ad,
           Rect positionOnScreen)",N/A,void
com.amazon.device.ads.AdError,"This class contains details for why an ad failed to load. An instance of this class is returned
 on an com.amazon.device.ads.AdListener#onAdFailedToLoad(AdLayout, AdError) event.
 
 The Amazon Mobile Ads API does not contain any retry logic. If you encounter an error, you should
 call AdLayout.loadAd(AdTargetingOptions) again depending on the 
 AdError.ErrorCode returned.
 
AdError.ErrorCode.NETWORK_ERROR - retry when network connectivity is available
AdError.ErrorCode.NETWORK_TIMEOUT - network connection timed out, retry if wanted
AdError.ErrorCode.NO_FILL - no ads were available, don't retry immediately
AdError.ErrorCode.INTERNAL_ERROR - retry immediately, but limit the number of retry attempts
AdError.ErrorCode.REQUEST_ERROR - don't retry because there is something wrong with your request",getCode(),Gets the error code.,AdError.ErrorCode
com.amazon.device.ads.AdError,"This class contains details for why an ad failed to load. An instance of this class is returned
 on an com.amazon.device.ads.AdListener#onAdFailedToLoad(AdLayout, AdError) event.
 
 The Amazon Mobile Ads API does not contain any retry logic. If you encounter an error, you should
 call AdLayout.loadAd(AdTargetingOptions) again depending on the 
 AdError.ErrorCode returned.
 
AdError.ErrorCode.NETWORK_ERROR - retry when network connectivity is available
AdError.ErrorCode.NETWORK_TIMEOUT - network connection timed out, retry if wanted
AdError.ErrorCode.NO_FILL - no ads were available, don't retry immediately
AdError.ErrorCode.INTERNAL_ERROR - retry immediately, but limit the number of retry attempts
AdError.ErrorCode.REQUEST_ERROR - don't retry because there is something wrong with your request",getMessage(),Gets the error message.,java.lang.String
com.amazon.device.ads.AdProperties,This class contains properties and features of an ad.,canExpand(),Gets whether the ad can be expanded.,boolean
com.amazon.device.ads.AdProperties,This class contains properties and features of an ad.,canPlayAudio(),Gets whether the ad plays audio when expanded.,boolean
com.amazon.device.ads.AdProperties,This class contains properties and features of an ad.,canPlayVideo(),Gets whether the ad plays video when expanded.,boolean
com.amazon.device.ads.AdProperties,This class contains properties and features of an ad.,getAdType(),Gets the type of ad.,AdProperties.AdType
com.amazon.device.ads.ViewabilityCheckerFactory,N/A,buildViewabilityChecker(com.amazon.device.ads.AdController adcontroller),N/A,com.amazon.device.ads.ViewabilityChecker
com.amazon.device.ads.package-summary,An interface for views used to retrieve and display Amazon ads.,N/A,N/A,N/A
com.amazon.device.ads.AdRegistration,This class provides access to global settings and variables. This class cannot be instantiated.,enableLogging(boolean enable),Enable writing LogCat messages during integration and testing of the Amazon Mobile Ads API.,static void
com.amazon.device.ads.AdRegistration,This class provides access to global settings and variables. This class cannot be instantiated.,enableTesting(boolean enable),"During integration and testing of the Amazon Mobile Ads API, you should indicate all ad requests
 are for testing.",static void
com.amazon.device.ads.AdRegistration,This class provides access to global settings and variables. This class cannot be instantiated.,getVersion(),Gets the current version of the Amazon Mobile Ads API.,static java.lang.String
com.amazon.device.ads.AdRegistration,This class provides access to global settings and variables. This class cannot be instantiated.,registerApp(Context context),Register your app to track app downloads from mobile ad campaigns.,static void
com.amazon.device.ads.AdRegistration,This class provides access to global settings and variables. This class cannot be instantiated.,setAppKey(java.lang.String appKey),"Sets the Application Key to identify your application in a
 AdLayout.loadAd(AdTargetingOptions) call.",static void
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",canUpscale(),Whether or not the ad can upscale larger than its true device-independent pixel size.,boolean
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",disableScaling(),Disables upscaling of the ads size.,AdSize
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",equals(java.lang.Object obj),Determines if this AdSize is equivalent to the given object.,boolean
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",getGravity(),Gets the gravity value currently set.,int
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",getHeight(),Gets the height.,int
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",getWidth(),Gets the width.,int
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",isAuto(),Gets whether the size is set to be automatically determined.,boolean
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",newGravity(int gravity),Creates a copy of this AdSize but with the layout gravity changed to the value provided.,AdSize
com.amazon.device.ads.AdSize,"Ad sizes supported by the Amazon Mobile Ads API. Dimensions are in device independent pixels, 
 therefore the actual size of the ad in pixels might vary depending on the resolution of the device. 
 Ads will scale accordingly within your ad view container to accommodate varying device resolutions.",toString(),Gets the size as a string.,java.lang.String
com.amazon.device.ads.AdListener,"Tracks life-cycle events of an ad. Implement this interface to determine when to take
 action based on the current state of an ad. Register this class with an ad view 
 by calling Ad.setListener(AdListener). It is recommended
 to extend DefaultAdListener rather than implement this interface,
 to safeguard against future additions to this interface.",onAdCollapsed(Ad ad),Called after a user clicks on the close button on an expanded ad.,void
com.amazon.device.ads.AdListener,"Tracks life-cycle events of an ad. Implement this interface to determine when to take
 action based on the current state of an ad. Register this class with an ad view 
 by calling Ad.setListener(AdListener). It is recommended
 to extend DefaultAdListener rather than implement this interface,
 to safeguard against future additions to this interface.",onAdDismissed(Ad ad),Called whenever the user has dismissed an interstitial ad.,void
com.amazon.device.ads.AdListener,"Tracks life-cycle events of an ad. Implement this interface to determine when to take
 action based on the current state of an ad. Register this class with an ad view 
 by calling Ad.setListener(AdListener). It is recommended
 to extend DefaultAdListener rather than implement this interface,
 to safeguard against future additions to this interface.",onAdExpanded(Ad ad),Called after a user clicks on an expandable ad and after the ad expands.,void
com.amazon.device.ads.AdListener,"Tracks life-cycle events of an ad. Implement this interface to determine when to take
 action based on the current state of an ad. Register this class with an ad view 
 by calling Ad.setListener(AdListener). It is recommended
 to extend DefaultAdListener rather than implement this interface,
 to safeguard against future additions to this interface.","onAdFailedToLoad(Ad ad,
                AdError error)",Called whenever the retrieval of an ad fails.,void
com.amazon.device.ads.AdListener,"Tracks life-cycle events of an ad. Implement this interface to determine when to take
 action based on the current state of an ad. Register this class with an ad view 
 by calling Ad.setListener(AdListener). It is recommended
 to extend DefaultAdListener rather than implement this interface,
 to safeguard against future additions to this interface.","onAdLoaded(Ad ad,
          AdProperties adProperties)",Called each time an ad is successfully loaded.,void
com.amazon.device.ads.ExtendedAdListener,Called when an ad has expired before being displayed,onAdExpired(Ad ad),Called when an ad has expired before being displayed,void
com.amazon.device.ads.ExtendedAdListener,Called when an ad has expired before being displayed,"onAdResized(Ad ad,
           Rect positionOnScreen)",N/A,void
com.amazon.device.ads.package-tree,N/A,N/A,N/A,N/A
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onBackPressed(),Called when the back button is pressed.,boolean
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onConfigurationChanged(android.content.res.Configuration configuration),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onCreate(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onDestroy(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onPause(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onResume(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onStop(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,onWindowFocusChanged(),N/A,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,preOnCreate(),Called before super.onCreate is called in the AdActivity.,void
com.amazon.device.ads.AdActivity.AdActivityAdapter,Called when the back button is pressed.,setActivity(Activity activity),N/A,void
com.amazon.device.ads.AdProperties.AdType,A banner ad that contains no rich media features.,toString(),N/A,java.lang.String
com.amazon.device.ads.AdProperties.AdType,A banner ad that contains no rich media features.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static AdProperties.AdType
com.amazon.device.ads.AdProperties.AdType,A banner ad that contains no rich media features.,values(),"Returns an array containing the constants of this enum type, in
the order they are declared.",static AdProperties.AdType[]
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",getTimeout(),Gets the current timeout value in milliseconds.,int
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",isLoading(),Gets whether this Ad is currently being loaded.,boolean
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(),Creates a background thread to load a new ad.,boolean
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",loadAd(AdTargetingOptions adTargetingOptions),Creates a background thread to load a new ad based on AdTargetingOptions.,boolean
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setListener(AdListener adListener),Sets the listener used to track ad life-cycle events.,void
com.amazon.device.ads.Ad,"An interface for views used to retrieve and display Amazon ads. Ad views can only load and display one ad at a time,
 although there is no limitation on the number of Ads you can instantiate.
 

 Making ad requests to the Amazon Mobile Ad Network requires the INTERNET permission.
 Additionally we recommend that you include permissions for FINE_LOCATION, COURSE_LOCATION,
 NETWORK_STATE, and WIFI_STATE. These additional permissions allow Amazon to provide 
 contextual and geo-targeted ads to your users, which may result in higher CPMs. 
 Declare these permissions in your AndroidManifest.xml.",setTimeout(int timeout),Sets the timeout value for loading the ad.,void