class_name,class_description,method,method_description,data_type
twitter4j.auth.AccessToken,Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses.,equals(java.lang.Object o),N/A,boolean
twitter4j.auth.AccessToken,Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses.,getScreenName(),N/A,java.lang.String
twitter4j.auth.AccessToken,Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses.,getUserId(),N/A,long
twitter4j.auth.AccessToken,Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses.,hashCode(),N/A,int
twitter4j.auth.AccessToken,Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses.,toString(),N/A,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getAllowDmsFrom(),Returns if the user can accept DMs from anyone,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getLanguage(),Returns the language used to render Twitter's UII for this user.,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getScreenName(),Returns the user's screen name,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getSleepEndTime(),Returns sleep end time.,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getSleepStartTime(),Returns sleep start time.,java.lang.String
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getTimeZone(),Returns the timezone configured for this user.,TimeZone
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,getTrendLocations(),Return the user's trend locations,Location[]
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,isAlwaysUseHttps(),Returns true if the wants to always access twitter using HTTPS.,boolean
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,isDiscoverableByEmail(),Returns true if the user is discoverable by email.,boolean
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,isGeoEnabled(),Return true if the user is enabling geo location,boolean
twitter4j.AccountSettings,Returns if the user can accept DMs from anyone,isSleepTimeEnabled(),Returns true if the user enabled sleep time.,boolean
twitter4j.AccountTotals,Returns the number of total favorites.,getFavorites(),Returns the number of total favorites.,int
twitter4j.AccountTotals,Returns the number of total favorites.,getFollowers(),Returns the number of total followers.,int
twitter4j.AccountTotals,Returns the number of total favorites.,getFriends(),Returns the number of total friends.,int
twitter4j.AccountTotals,Returns the number of total favorites.,getUpdates(),Returns the number of total updates.,int
twitter4j.auth.AsyncOAuth2Support,Obtains an OAuth 2 Bearer token.,getOAuth2TokenAsync(),Obtains an OAuth 2 Bearer token.,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessTokenAsync(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessTokenAsync(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthAccessTokenAsync(RequestToken requestToken,                        java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessTokenAsync(java.lang.String oauthVerifier),Retrieves an access token.,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthAccessTokenAsync(java.lang.String screenName,                        java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthRequestTokenAsync(),Retrieves a request token,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthRequestTokenAsync(java.lang.String callbackURL),Retrieves a request token,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthRequestTokenAsync(java.lang.String callbackURL,                         java.lang.String xAuthAccessType)",Retrieves a request token,void
twitter4j.auth.AsyncOAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthRequestTokenAsync(java.lang.String callbackURL,                         java.lang.String xAuthAccessType,                         java.lang.String xAuthMode)",Retrieves a request token,void
twitter4j.AsyncTwitter,Adds twitter listener,addListener(TwitterListener listener),Adds twitter listener,void
twitter4j.AsyncTwitter,Adds twitter listener,shutdown(),Shuts down internal dispatcher thread shared across all AsyncTwitter instances.,void
twitter4j.AsyncTwitterFactory,A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally.,getInstance(),Returns an instance associated with the configuration bound to this factory.,AsyncTwitter
twitter4j.AsyncTwitterFactory,A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally.,getInstance(AccessToken accessToken),"Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance.",AsyncTwitter
twitter4j.AsyncTwitterFactory,A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally.,getInstance(Authorization auth),N/A,AsyncTwitter
twitter4j.AsyncTwitterFactory,A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally.,getInstance(Twitter twitter),a kind of copy factory method constructs an AsyncTwitter from Twitter instance,AsyncTwitter
twitter4j.AsyncTwitterFactory,A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally.,getSingleton(),Returns default singleton AsyncTwitter instance.,static AsyncTwitter
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",addListener(TwitterListener listener),Adds twitter listener,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createBlock(long userId),Blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createBlock(java.lang.String screenName),Blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createFriendship(long userId),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createFriendship(long userId,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createFriendship(java.lang.String screenName),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createFriendship(java.lang.String screenName,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createMute(long userId),Mutes the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createMute(java.lang.String screenName),Mutes the user specified in the screen name parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createSavedSearch(java.lang.String query),Creates a saved search for the authenticated user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserList(java.lang.String listName,              boolean isPublicList,              java.lang.String description)",Creates a new list for the authenticated user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMember(long listId,                    long userId)",Adds a member to a list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMember(long ownerId,                    java.lang.String slug,                    long userId)",Adds a member to a list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMembers(long listId,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMembers(long listId,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMembers(long ownerId,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListMembers(long ownerId,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",createUserListSubscription(long listId),Make the authenticated user follow the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","createUserListSubscription(long ownerId,                          java.lang.String slug)",Make the authenticated user follow the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyBlock(long userId),Un-blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyBlock(java.lang.String screenName),Un-blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyDirectMessage(long id),Destroys the direct message specified in the required ID parameter.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyFriendship(long userId),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyFriendship(java.lang.String screenName),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyMute(long userId),Un-mutes the user specified in the ID parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyMute(java.lang.String screenName),Un-mutes the user specified in the screen name parameter as the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroySavedSearch(int id),Destroys a saved search for the authenticated user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyStatus(long statusId),Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyUserList(long listId),Deletes the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","destroyUserList(long ownerId,               java.lang.String slug)",Deletes the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","destroyUserListMember(long listId,                     long userId)",Removes the specified member from the list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","destroyUserListMember(long ownerId,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",destroyUserListSubscription(long listId),Unsubscribes the authenticated user form the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","destroyUserListSubscription(long ownerId,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",equals(java.lang.Object o),N/A,boolean
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getAccountSettings(),"Returns the current trend, geo and sleep time information for the authenticating user.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getAPIConfiguration(),"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getAvailableTrends(),Retrieves the locations that Twitter has trending topic information for.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getBlocksIDs(),Returns an array of numeric user ids the authenticating user is blocking.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getBlocksIDs(long cursor),Returns an array of numeric user ids the authenticating user is blocking.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getBlocksList(),Returns a list of user objects that the authenticating user is blocking.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getBlocksList(long cursor),Returns a list of user objects that the authenticating user is blocking.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getClosestTrends(GeoLocation location),"Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of ""locations"" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getContributees(long userId),Returns an array of users that the specified user can contribute to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getContributees(java.lang.String screenName),Returns an array of users that the specified user can contribute to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getContributors(long userId),Returns an array of users who can contribute to the specified account.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getContributors(java.lang.String screenName),Returns an array of users who can contribute to the specified account.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getDirectMessages(),Returns a list of the direct messages sent to the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getDirectMessages(Paging paging),Returns a list of the direct messages sent to the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getDispatcher(),N/A,private Dispatcher
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFavorites(),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFavorites(long userId),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFavorites(long userId,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFavorites(Paging paging),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFavorites(java.lang.String screenName),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFavorites(java.lang.String screenName,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFollowersIDs(long cursor),Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFollowersIDs(long userId,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFollowersIDs(java.lang.String screenName,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFollowersList(long userId,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFollowersList(java.lang.String screenName,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getFriendsIDs(long cursor),Returns an array of numeric IDs for every user the authenticating user is following.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFriendsIDs(long userId,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFriendsIDs(java.lang.String screenName,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFriendsList(long userId,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getFriendsList(java.lang.String screenName,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getGeoDetails(java.lang.String id),Find out more details of a place that was returned from the PlacesGeoResourcesAsync.reverseGeoCode(twitter4j.GeoQuery) method.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getHomeTimeline(),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getHomeTimeline(Paging paging),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getIncomingFriendships(long cursor),Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getLanguages(),Returns the list of languages supported by Twitter along with their ISO 639-1 code.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getMemberSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getMentions(),Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getMentions(Paging paging),Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getMutesIDs(long cursor),Returns an array of numeric user ids the authenticating user is muting.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getMutesList(long cursor),Returns a list of user objects that the authenticating user is muting.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuth2Token(),Obtains an OAuth 2 Bearer token.,OAuth2Token
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuth2TokenAsync(),Obtains an OAuth 2 Bearer token.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessToken(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",AccessToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessToken(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthAccessToken(RequestToken requestToken,                   java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessToken(java.lang.String oauthVerifier),Retrieves an access token.,AccessToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthAccessToken(java.lang.String screenName,                   java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",AccessToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessTokenAsync(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessTokenAsync(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthAccessTokenAsync(RequestToken requestToken,                        java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthAccessTokenAsync(java.lang.String oauthVerifier),Retrieves an access token.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthAccessTokenAsync(java.lang.String screenName,                        java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthRequestToken(),Retrieves a request token,RequestToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthRequestToken(java.lang.String callbackUrl),Retrieves a request token,RequestToken
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthRequestTokenAsync(),Retrieves a request token,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOAuthRequestTokenAsync(java.lang.String callbackURL),Retrieves a request token,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthRequestTokenAsync(java.lang.String callbackURL,                         java.lang.String xAuthAccessType)",Retrieves a request token,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getOAuthRequestTokenAsync(java.lang.String callbackURL,                         java.lang.String xAuthAccessType,                         java.lang.String xAuthMode)",Retrieves a request token,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOEmbed(OEmbedRequest req),Returns information allowing the creation of an embedded representation of a Tweet on third party sites.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getOutgoingFriendships(long cursor),Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getPlaceTrends(int woeid),"Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of ""trend"" objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getPrivacyPolicy(),Returns Twitter's Privacy Policy.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getRateLimitStatus(),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getRateLimitStatus(java.lang.String... resources),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getRetweets(long statusId),Returns up to 100 of the first retweets of a given tweet.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getRetweetsOfMe(),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getRetweetsOfMe(Paging paging),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getSavedSearches(),Returns the authenticated user's saved search queries.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getSentDirectMessages(),Returns a list of the direct messages sent by the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getSentDirectMessages(Paging paging),Returns a list of the direct messages sent by the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getSimilarPlaces(GeoLocation location,                java.lang.String name,                java.lang.String containedWithin,                java.lang.String streetAddress)",Locates places near the given coordinates which are similar in name.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getSuggestedUserCategories(),Access to Twitter's suggested user list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getTermsOfService(),Returns Twitter's' Terms of Service.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMembers(long listId,                  long cursor)",Returns the members of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMembers(long ownerId,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserListMemberships(long cursor),List the lists the authenticating user has been added to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMemberships(long listMemberId,                      long cursor)",List the lists the specified user has been added to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMemberships(long listMemberId,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor)",List the lists the specified user has been added to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserLists(long listOwnerUserId),List the lists of the specified user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserLists(java.lang.String listOwnerScreenName),List the lists of the specified user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListStatuses(long listId,                   Paging paging)",Show tweet timeline for members of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListStatuses(long ownerId,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListSubscribers(long listId,                      long cursor)",Returns the subscribers of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListSubscribers(long ownerId,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserListSubscriptions(java.lang.String listOwnerScreenName,                        long cursor)",List the lists the specified user follows.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserTimeline(),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserTimeline(long userId),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserTimeline(long userId,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserTimeline(Paging paging),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",getUserTimeline(java.lang.String screenName),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","getUserTimeline(java.lang.String screenName,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",hashCode(),N/A,int
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",invalidateOAuth2Token(),Revokes an issued OAuth 2 Bearer Token.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",lookup(long... ids),"Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",lookupFriendships(long... ids),Returns the relationship of the authenticating user to the specified users.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",lookupFriendships(java.lang.String... screenNames),Returns the relationship of the authenticating user to the specified users.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",lookupUsers(long... ids),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",lookupUsers(java.lang.String... screenNames),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",removeProfileBanner(),Removes the uploaded profile banner for the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",reportSpam(long userId),The user specified in the id is blocked by the authenticated user and reported as a spammer.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",reportSpam(java.lang.String screenName),The user specified in the id is blocked by the authenticated user and reported as a spammer.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",retweetStatus(long statusId),Retweets a tweet.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",reverseGeoCode(GeoQuery query),Search for places (cities and neighborhoods) that can be attached to a statuses/update.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",search(Query query),Returns tweets that match a specified query.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",searchPlaces(GeoQuery query),Search for places that can be attached to a statuses/update.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","searchUsers(java.lang.String query,           int page)",Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","sendDirectMessage(long userId,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","sendDirectMessage(java.lang.String screenName,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",setOAuth2Token(OAuth2Token oauth2Token),Sets the OAuth 2 Bearer token.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",setOAuthAccessToken(AccessToken accessToken),Sets the access token,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",sets the OAuth consumer key and consumer secret,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showDirectMessage(long id),"Returns a single direct message, specified by an id parameter.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showFriendship(long sourceId,              long targetId)",Returns detailed information about the relationship between two users.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showFriendship(java.lang.String sourceScreenName,              java.lang.String targetScreenName)",Returns detailed information about the relationship between two users.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showSavedSearch(int id),Retrieve the data for a saved search owned by the authenticating user specified by the given id.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showStatus(long id),"Returns a single status, specified by the id parameter below.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showUser(long userId),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showUser(java.lang.String screenName),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",showUserList(long listId),Show the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showUserList(long ownerId,            java.lang.String slug)",Show the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showUserListMembership(long listId,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showUserListMembership(long ownerId,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showUserListSubscription(long listId,                        long userId)",Check if the specified user is a subscriber of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","showUserListSubscription(long ownerId,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",shutdown(),Shuts down internal dispatcher thread shared across all AsyncTwitter instances.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",toString(),N/A,java.lang.String
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateAccountSettings(java.lang.Integer trend_locationWoeid,                     java.lang.Boolean sleep_timeEnabled,                     java.lang.String start_sleepTime,                     java.lang.String end_sleepTime,                     java.lang.String time_zone,                     java.lang.String lang)","Updates the current trend, geo, language, timezone and sleep time information for the authenticating user.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateFriendship(long userId,                boolean enableDeviceNotification,                boolean retweet)",Allows you to enable or disable retweets and device notifications from the specified user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateFriendship(java.lang.String screenName,                boolean enableDeviceNotification,                boolean retweet)",Allows you to enable or disable retweets and device notifications from the specified user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateProfile(java.lang.String name,             java.lang.String url,             java.lang.String location,             java.lang.String description)","Sets values that users are able to set under the ""Account"" tab of their settings page.",void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateProfileBackgroundImage(java.io.File image,                            boolean tile)",Updates the authenticating user's profile background image.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateProfileBackgroundImage(java.io.InputStream image,                            boolean tile)",Updates the authenticating user's profile background image.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateProfileBanner(java.io.File image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateProfileBanner(java.io.InputStream image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateProfileColors(java.lang.String profileBackgroundColor,                   java.lang.String profileTextColor,                   java.lang.String profileLinkColor,                   java.lang.String profileSidebarFillColor,                   java.lang.String profileSidebarBorderColor)",Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateProfileImage(java.io.File image),Updates the authenticating user's profile image.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateProfileImage(java.io.InputStream image),Updates the authenticating user's profile image.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateStatus(StatusUpdate latestStatus),Updates the authenticating user's status.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",updateStatus(java.lang.String statusText),Updates the authenticating user's status.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateUserList(long listId,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.","updateUserList(long ownerId,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,void
twitter4j.AsyncTwitterImpl,"Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse.",verifyCredentials(),Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not.,void
twitter4j.auth.Authorization,An interface represents credentials.,getAuthorizationHeader(HttpRequest req),N/A,java.lang.String
twitter4j.auth.Authorization,An interface represents credentials.,isEnabled(),Returns true if authorization credentials are set.,boolean
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuth2AccessToken(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuth2TokenType(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuthAccessToken(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuthAccessTokenSecret(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuthConsumerKey(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getOAuthConsumerSecret(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getPassword(),N/A,java.lang.String
twitter4j.auth.AuthorizationConfiguration,A static factory class for Authorization.,getUser(),N/A,java.lang.String
twitter4j.auth.AuthorizationFactory,A static factory class for Authorization.,getInstance(Configuration conf),N/A,static Authorization
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,encodeBasicAuthenticationString(),N/A,private java.lang.String
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,equals(java.lang.Object o),N/A,boolean
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,getAuthorizationHeader(HttpRequest req),N/A,java.lang.String
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,getPassword(),N/A,java.lang.String
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,getUserId(),N/A,java.lang.String
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,hashCode(),N/A,int
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,isEnabled(),#{inheritDoc},boolean
twitter4j.auth.BasicAuthorization,An authentication implementation implements Basic authentication,toString(),N/A,java.lang.String
twitter4j.Category,N/A,getName(),N/A,java.lang.String
twitter4j.Category,N/A,getSize(),N/A,int
twitter4j.Category,N/A,getSlug(),N/A,java.lang.String
twitter4j.util.CharacterUtil,Counts the length of the tweet,count(java.lang.String text),Counts the length of the tweet,static int
twitter4j.util.CharacterUtil,Counts the length of the tweet,isExceedingLengthLimitation(java.lang.String text),Returns true if the length of the string is exceeding length limitation,static boolean
twitter4j.conf.Configuration,N/A,getAsyncNumThreads(),N/A,int
twitter4j.conf.Configuration,N/A,getContributingTo(),N/A,long
twitter4j.conf.Configuration,N/A,getDispatcherImpl(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getHttpClientConfiguration(),N/A,HttpClientConfiguration
twitter4j.conf.Configuration,N/A,getHttpStreamingReadTimeout(),N/A,int
twitter4j.conf.Configuration,N/A,getLoggerFactory(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getMediaProvider(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getMediaProviderAPIKey(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getMediaProviderParameters(),N/A,java.util.Properties
twitter4j.conf.Configuration,N/A,getOAuth2AccessToken(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuth2InvalidateTokenURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuth2Scope(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuth2TokenType(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuth2TokenURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthAccessToken(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthAccessTokenSecret(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthAccessTokenURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthAuthenticationURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthAuthorizationURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthConsumerKey(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthConsumerSecret(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getOAuthRequestTokenURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getPassword(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getRestBaseURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getSiteStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getStreamThreadName(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getUploadBaseURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getUser(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,getUserStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.Configuration,N/A,isApplicationOnlyAuthEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isDaemonEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isDebugEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isIncludeEmailEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isIncludeEntitiesEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isIncludeExtAltTextEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isIncludeMyRetweetEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isJSONStoreEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isMBeanEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isStallWarningsEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isTrimUserEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isTweetModeExtended(),N/A,boolean
twitter4j.conf.Configuration,N/A,isUserStreamRepliesAllEnabled(),N/A,boolean
twitter4j.conf.Configuration,N/A,isUserStreamWithFollowingsEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,cacheInstance(),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,cacheInstance(ConfigurationBase conf),N/A,private static void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,dumpConfiguration(),N/A,void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,equals(java.lang.Object o),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,"fixURL(boolean useSSL,      java.lang.String url)",N/A,(package private) static java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getAsyncNumThreads(),N/A,int
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getContributingTo(),N/A,long
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getDispatcherImpl(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getHttpClientConfiguration(),N/A,HttpClientConfiguration
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getHttpStreamingReadTimeout(),N/A,int
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getInstance(ConfigurationBase configurationBase),N/A,private static ConfigurationBase
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getLoggerFactory(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getMediaProvider(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getMediaProviderAPIKey(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getMediaProviderParameters(),N/A,java.util.Properties
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuth2AccessToken(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuth2InvalidateTokenURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuth2Scope(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuth2TokenType(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuth2TokenURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthAccessToken(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthAccessTokenSecret(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthAccessTokenURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthAuthenticationURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthAuthorizationURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthConsumerKey(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthConsumerSecret(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getOAuthRequestTokenURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getPassword(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getRestBaseURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getSiteStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getStreamThreadName(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getUploadBaseURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getUser(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,getUserStreamBaseURL(),N/A,java.lang.String
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,hashCode(),N/A,int
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isApplicationOnlyAuthEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isDaemonEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isDebugEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isIncludeEmailEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isIncludeEntitiesEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isIncludeExtAltTextEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isIncludeMyRetweetEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isJSONStoreEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isMBeanEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isStallWarningsEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isTrimUserEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isTweetModeExtended(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isUserStreamRepliesAllEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,isUserStreamWithFollowingsEnabled(),N/A,boolean
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,readResolve(),N/A,protected java.lang.Object
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setApplicationOnlyAuthEnabled(boolean applicationOnlyAuthEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setAsyncNumThreads(int asyncNumThreads),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setContributingTo(long contributingTo),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setDaemonEnabled(boolean daemonEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setDebug(boolean debug),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setDispatcherImpl(java.lang.String dispatcherImpl),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setGZIPEnabled(boolean gzipEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpConnectionTimeout(int connectionTimeout),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpProxyHost(java.lang.String proxyHost),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpProxyPassword(java.lang.String proxyPassword),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpProxyPort(int proxyPort),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpProxySocks(boolean isSocksProxy),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpProxyUser(java.lang.String proxyUser),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpReadTimeout(int readTimeout),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpRetryCount(int retryCount),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpRetryIntervalSeconds(int retryIntervalSeconds),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setHttpStreamingReadTimeout(int httpStreamingReadTimeout),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setIncludeEmailEnabled(boolean includeEmailEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setIncludeEntitiesEnabled(boolean includeEntitiesEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setIncludeExtAltTextEnabled(boolean enabled),N/A,void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setIncludeMyRetweetEnabled(boolean enabled),N/A,void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setJSONStoreEnabled(boolean enabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setLoggerFactory(java.lang.String loggerImpl),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setMBeanEnabled(boolean enabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setMediaProvider(java.lang.String mediaProvider),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setMediaProviderAPIKey(java.lang.String mediaProviderAPIKey),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setMediaProviderParameters(java.util.Properties props),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuth2AccessToken(java.lang.String oAuth2AccessToken),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuth2InvalidateTokenURL(java.lang.String oAuth2InvalidateTokenURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuth2Scope(java.lang.String oAuth2Scope),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuth2TokenType(java.lang.String oAuth2TokenType),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuth2TokenURL(java.lang.String oAuth2TokenURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthAccessToken(java.lang.String oAuthAccessToken),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthAccessTokenSecret(java.lang.String oAuthAccessTokenSecret),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthAccessTokenURL(java.lang.String oAuthAccessTokenURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthAuthenticationURL(java.lang.String oAuthAuthenticationURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthAuthorizationURL(java.lang.String oAuthAuthorizationURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthConsumerKey(java.lang.String oAuthConsumerKey),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthConsumerSecret(java.lang.String oAuthConsumerSecret),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setOAuthRequestTokenURL(java.lang.String oAuthRequestTokenURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setPassword(java.lang.String password),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setPrettyDebugEnabled(boolean prettyDebug),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setRestBaseURL(java.lang.String restBaseURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setSiteStreamBaseURL(java.lang.String siteStreamBaseURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setStallWarningsEnabled(boolean stallWarningsEnabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setStreamBaseURL(java.lang.String streamBaseURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setStreamThreadName(java.lang.String streamThreadName),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setTrimUserEnabled(boolean enabled),N/A,void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setTweetModeExtended(boolean enabled),N/A,void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setUploadBaseURL(java.lang.String uploadBaseURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setUser(java.lang.String user),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setUserStreamBaseURL(java.lang.String siteStreamBaseURL),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setUserStreamRepliesAllEnabled(boolean enabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,setUserStreamWithFollowingsEnabled(boolean enabled),N/A,protected void
twitter4j.conf.ConfigurationBase,Configuration base class with default settings.,toString(),N/A,java.lang.String
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,build(),N/A,Configuration
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,checkNotBuilt(),N/A,private void
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setApplicationOnlyAuthEnabled(boolean applicationOnlyAuthEnabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setAsyncNumThreads(int asyncNumThreads),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setContributingTo(long contributingTo),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setDaemonEnabled(boolean daemonEnabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setDebugEnabled(boolean debugEnabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setDispatcherImpl(java.lang.String dispatcherImpl),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setGZIPEnabled(boolean gzipEnabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpConnectionTimeout(int httpConnectionTimeout),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpProxyHost(java.lang.String httpProxyHost),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpProxyPassword(java.lang.String httpProxyPassword),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpProxyPort(int httpProxyPort),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpProxySocks(boolean httpProxySocks),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpProxyUser(java.lang.String httpProxyUser),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpReadTimeout(int httpReadTimeout),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpRetryCount(int httpRetryCount),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpRetryIntervalSeconds(int httpRetryIntervalSeconds),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setHttpStreamingReadTimeout(int httpStreamingReadTimeout),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setIncludeEmailEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setIncludeEntitiesEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setIncludeExtAltTextEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setIncludeMyRetweetEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setJSONStoreEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setMBeanEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setMediaProvider(java.lang.String mediaProvider),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setMediaProviderAPIKey(java.lang.String mediaProviderAPIKey),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setMediaProviderParameters(java.util.Properties props),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuth2AccessToken(java.lang.String oAuth2AccessToken),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuth2InvalidateTokenURL(java.lang.String invalidateTokenURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuth2Scope(java.lang.String oAuth2Scope),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuth2TokenType(java.lang.String oAuth2TokenType),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuth2TokenURL(java.lang.String oAuth2TokenURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthAccessToken(java.lang.String oAuthAccessToken),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthAccessTokenSecret(java.lang.String oAuthAccessTokenSecret),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthAccessTokenURL(java.lang.String oAuthAccessTokenURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthAuthenticationURL(java.lang.String oAuthAuthenticationURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthAuthorizationURL(java.lang.String oAuthAuthorizationURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthConsumerKey(java.lang.String oAuthConsumerKey),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthConsumerSecret(java.lang.String oAuthConsumerSecret),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setOAuthRequestTokenURL(java.lang.String oAuthRequestTokenURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setPassword(java.lang.String password),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setPrettyDebugEnabled(boolean prettyDebugEnabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setRestBaseURL(java.lang.String restBaseURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setSiteStreamBaseURL(java.lang.String siteStreamBaseURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setStreamBaseURL(java.lang.String streamBaseURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setTrimUserEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setTweetModeExtended(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setUploadBaseURL(java.lang.String uploadBaseURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setUser(java.lang.String user),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setUserStreamBaseURL(java.lang.String userStreamBaseURL),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setUserStreamRepliesAllEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationBuilder,A builder that can be used to construct a twitter4j configuration with desired settings.  This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration.  This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example.,setUserStreamWithFollowingsEnabled(boolean enabled),N/A,ConfigurationBuilder
twitter4j.conf.ConfigurationContext,"Static factory of Configuration. This class wraps ConfigurationFactory implementations. By default, twitter4j.conf.PropertyConfigurationFactory will be used and can be changed with -Dtwitter4j.configurationFactory system property.",getInstance(),N/A,static Configuration
twitter4j.conf.ConfigurationContext,"Static factory of Configuration. This class wraps ConfigurationFactory implementations. By default, twitter4j.conf.PropertyConfigurationFactory will be used and can be changed with -Dtwitter4j.configurationFactory system property.",getInstance(java.lang.String configTreePath),N/A,static Configuration
twitter4j.conf.ConfigurationFactory,clean up resources acquired by this factory.,dispose(),clean up resources acquired by this factory.,void
twitter4j.conf.ConfigurationFactory,clean up resources acquired by this factory.,getInstance(),returns the root configuration,Configuration
twitter4j.conf.ConfigurationFactory,clean up resources acquired by this factory.,getInstance(java.lang.String configTreePath),returns the configuration specified by the path,Configuration
twitter4j.ConnectionLifeCycleListener,called before thread gets cleaned up,onCleanUp(),called before thread gets cleaned up,void
twitter4j.ConnectionLifeCycleListener,called before thread gets cleaned up,onConnect(),called after connection was established,void
twitter4j.ConnectionLifeCycleListener,called before thread gets cleaned up,onDisconnect(),called after connection was disconnected,void
twitter4j.util.function.Consumer,Functional interface for handling TwitterExceptions,accept(T t),N/A,void
twitter4j.ControlStreamInfo,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.ControlStreamInfo,N/A,getUsers(),N/A,StreamController.User[]
twitter4j.ControlStreamInfo,N/A,hashCode(),N/A,int
twitter4j.ControlStreamInfo,N/A,isIncludeFollowingsActivity(),N/A,boolean
twitter4j.ControlStreamInfo,N/A,isIncludeUserChanges(),N/A,boolean
twitter4j.ControlStreamInfo,N/A,isReplies(),N/A,java.lang.String
twitter4j.ControlStreamInfo,N/A,isWith(),N/A,java.lang.String
twitter4j.ControlStreamInfo,N/A,toString(),N/A,java.lang.String
twitter4j.CursorSupport,N/A,getNextCursor(),N/A,long
twitter4j.CursorSupport,N/A,getPreviousCursor(),N/A,long
twitter4j.CursorSupport,N/A,hasNext(),N/A,boolean
twitter4j.CursorSupport,N/A,hasPrevious(),N/A,boolean
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createAccountTotals(java.lang.String rawJSON),Deprecated.,static AccountTotals
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createCategory(java.lang.String rawJSON),Deprecated.,static Category
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createIDs(java.lang.String rawJSON),Deprecated.,static IDs
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createLocation(java.lang.String rawJSON),Deprecated.,static Location
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createObject(java.lang.String rawJSON),Deprecated. use TwitterObjectFactory.createObject(String) instead,static java.lang.Object
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createOEmbed(java.lang.String rawJSON),Deprecated.,static OEmbed
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createPlace(java.lang.String rawJSON),Deprecated.,static Place
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createRateLimitStatus(java.lang.String rawJSON),Deprecated.,"static java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createRelationship(java.lang.String rawJSON),Deprecated.,static Relationship
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createSavedSearch(java.lang.String rawJSON),Deprecated.,static SavedSearch
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createStatus(java.lang.String rawJSON),Deprecated.,static Status
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createTrend(java.lang.String rawJSON),Deprecated.,static Trend
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createTrends(java.lang.String rawJSON),Deprecated.,static Trends
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createUser(java.lang.String rawJSON),Deprecated.,static User
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,createUserList(java.lang.String rawJSON),Deprecated.,static UserList
twitter4j.json.DataObjectFactory,Deprecated. use TwitterObjectFactory instead,getRawJSON(java.lang.Object obj),Deprecated.,static java.lang.String
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getCreatedAt(),N/A,java.util.Date
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getId(),N/A,long
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getRecipient(),Deprecated. use getRecipientId() instead,User
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getRecipientId(),N/A,long
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getRecipientScreenName(),Deprecated. use getRecipientId() instead,java.lang.String
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getSender(),Deprecated. use getSenderId() instead,User
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getSenderId(),N/A,long
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getSenderScreenName(),Deprecated. use getSenderId() instead,java.lang.String
twitter4j.DirectMessage,A data interface representing sent/received direct message.,getText(),N/A,java.lang.String
twitter4j.DirectMessageList,List of DirectMessage like string cursor version of PagableResponseList,getNextCursor(),N/A,java.lang.String
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,destroyDirectMessage(long id),Deletes the direct message specified in the required ID parameter.,DirectMessage
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getDirectMessages(),Deprecated. use getDirectMessages(int) instead,ResponseList<DirectMessage>
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getDirectMessages(int count),Returns all Direct Message events (both sent and received) within the last 30 days.,DirectMessageList
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,"getDirectMessages(int count,                 java.lang.String cursor)",Returns all Direct Message events (both sent and received) within the last 30 days.,DirectMessageList
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getDirectMessages(Paging paging),Deprecated. use getDirectMessages(int) instead,ResponseList<DirectMessage>
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getDMImageAsStream(java.lang.String url),Returns a stream of the image included in direct messages.,java.io.InputStream
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getSentDirectMessages(),Deprecated. use getDirectMessages(int) instead,ResponseList<DirectMessage>
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,getSentDirectMessages(Paging paging),Deprecated. use getDirectMessages(int) instead,ResponseList<DirectMessage>
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,"sendDirectMessage(long userId,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,"sendDirectMessage(long userId,                 java.lang.String text,                 long mediaId)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,"sendDirectMessage(java.lang.String screenName,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.api.DirectMessagesResources,Deletes the direct message specified in the required ID parameter.,showDirectMessage(long id),Returns a single Direct Message event by the given id.,DirectMessage
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,destroyDirectMessage(long id),Destroys the direct message specified in the required ID parameter.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,getDirectMessages(),Returns a list of the direct messages sent to the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,getDirectMessages(Paging paging),Returns a list of the direct messages sent to the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,getSentDirectMessages(),Returns a list of the direct messages sent by the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,getSentDirectMessages(Paging paging),Returns a list of the direct messages sent by the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,"sendDirectMessage(long userId,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,"sendDirectMessage(java.lang.String screenName,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,void
twitter4j.api.DirectMessagesResourcesAsync,Destroys the direct message specified in the required ID parameter.,showDirectMessage(long id),"Returns a single direct message, specified by an id parameter.",void
twitter4j.EntitiesParseUtil,N/A,getHashtags(JSONObject entities),N/A,(package private) static HashtagEntity[]
twitter4j.EntitiesParseUtil,N/A,getMedia(JSONObject entities),N/A,(package private) static MediaEntity[]
twitter4j.EntitiesParseUtil,N/A,getSymbols(JSONObject entities),N/A,(package private) static SymbolEntity[]
twitter4j.EntitiesParseUtil,N/A,getUrls(JSONObject entities),N/A,(package private) static URLEntity[]
twitter4j.EntitiesParseUtil,N/A,getUserMentions(JSONObject entities),N/A,(package private) static UserMentionEntity[]
twitter4j.EntitySupport,Returns an array if hashtag mentioned in the tweet.,getHashtagEntities(),Returns an array if hashtag mentioned in the tweet.,HashtagEntity[]
twitter4j.EntitySupport,Returns an array if hashtag mentioned in the tweet.,getMediaEntities(),Returns an array of MediaEntities if medias are available in the tweet.,MediaEntity[]
twitter4j.EntitySupport,Returns an array if hashtag mentioned in the tweet.,getSymbolEntities(),Returns an array of SymbolEntities if medias are available in the tweet.,SymbolEntity[]
twitter4j.EntitySupport,Returns an array if hashtag mentioned in the tweet.,getURLEntities(),Returns an array if URLEntity mentioned in the tweet.,URLEntity[]
twitter4j.EntitySupport,Returns an array if hashtag mentioned in the tweet.,getUserMentionEntities(),Returns an array of user mentions in the tweet.,UserMentionEntity[]
twitter4j.ExceptionDiagnosis,N/A,asHexString(),N/A,(package private) java.lang.String
twitter4j.ExceptionDiagnosis,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.ExceptionDiagnosis,N/A,getLineNumberHash(),N/A,(package private) int
twitter4j.ExceptionDiagnosis,N/A,getLineNumberHashAsHex(),N/A,(package private) java.lang.String
twitter4j.ExceptionDiagnosis,N/A,getStackLineHash(),N/A,(package private) int
twitter4j.ExceptionDiagnosis,N/A,getStackLineHashAsHex(),N/A,(package private) java.lang.String
twitter4j.ExceptionDiagnosis,N/A,hashCode(),N/A,int
twitter4j.ExceptionDiagnosis,N/A,toHexString(int value),N/A,private java.lang.String
twitter4j.ExceptionDiagnosis,N/A,toString(),N/A,java.lang.String
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,createFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,Status
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,destroyFavorite(long id),Un-favorites the status specified in the ID parameter as the authenticating user.,Status
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(long userId),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,"getFavorites(long userId,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(Paging paging),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(java.lang.String screenName),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResources,Favorites the status specified in the ID parameter as the authenticating user.,"getFavorites(java.lang.String screenName,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,createFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,destroyFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(long id),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,"getFavorites(long userId,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(Paging paging),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,getFavorites(java.lang.String screenName),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.api.FavoritesResourcesAsync,Favorites the status specified in the ID parameter as the authenticating user.,"getFavorites(java.lang.String screenName,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,void
twitter4j.FilterQuery,Creates a new FilterQuery,asHttpParameterArray(HttpParameter stallWarningsParam),N/A,(package private) HttpParameter[]
twitter4j.FilterQuery,Creates a new FilterQuery,count(int count),Sets count,FilterQuery
twitter4j.FilterQuery,Creates a new FilterQuery,equals(java.lang.Object o),N/A,boolean
twitter4j.FilterQuery,Creates a new FilterQuery,filterLevel(java.lang.String filterLevel),The filter level limits what tweets appear in the stream to those with a minimum filter_level attribute value.,FilterQuery
twitter4j.FilterQuery,Creates a new FilterQuery,follow(long... follow),Sets follow,FilterQuery
twitter4j.FilterQuery,Creates a new FilterQuery,hashCode(),N/A,int
twitter4j.FilterQuery,Creates a new FilterQuery,language(java.lang.String... language),Sets language,FilterQuery
twitter4j.FilterQuery,Creates a new FilterQuery,locations(double[]... locations),Sets locations,FilterQuery
twitter4j.FilterQuery,Creates a new FilterQuery,toLocationsString(double[][] keywords),N/A,private java.lang.String
twitter4j.FilterQuery,Creates a new FilterQuery,toString(),N/A,java.lang.String
twitter4j.FilterQuery,Creates a new FilterQuery,track(java.lang.String... track),Sets track,FilterQuery
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,createFriendship(long userId),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"createFriendship(long userId,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,createFriendship(java.lang.String screenName),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"createFriendship(java.lang.String screenName,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,destroyFriendship(long userId),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,destroyFriendship(java.lang.String screenName),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,User
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getFollowersIDs(long cursor),Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(long userId,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(long userId,               long cursor,               int count)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(java.lang.String screenName,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(java.lang.String screenName,               long cursor,               int count)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(long userId,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(long userId,                long cursor,                int count)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(long userId,                long cursor,                int count,                boolean skipStatus,                boolean includeUserEntities)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(java.lang.String screenName,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(java.lang.String screenName,                long cursor,                int count)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(java.lang.String screenName,                long cursor,                int count,                boolean skipStatus,                boolean includeUserEntities)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getFriendsIDs(long cursor),Returns an array of numeric IDs for every user the authenticating user is following.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(long userId,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(long userId,             long cursor,             int count)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(java.lang.String screenName,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(java.lang.String screenName,             long cursor,             int count)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(long userId,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(long userId,              long cursor,              int count)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(long userId,              long cursor,              int count,              boolean skipStatus,              boolean includeUserEntities)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(java.lang.String screenName,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(java.lang.String screenName,              long cursor,              int count)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(java.lang.String screenName,              long cursor,              int count,              boolean skipStatus,              boolean includeUserEntities)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getIncomingFriendships(long cursor),Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getNoRetweetsFriendships(),Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getOutgoingFriendships(long cursor),Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request.,IDs
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,lookupFriendships(long... ids),Returns the relationship of the authenticating user to the specified users.,ResponseList<Friendship>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,lookupFriendships(java.lang.String... screenNames),Returns the relationship of the authenticating user to the specified users.,ResponseList<Friendship>
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"showFriendship(long sourceId,              long targetId)",Returns detailed information about the relationship between two users.,Relationship
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"showFriendship(java.lang.String sourceScreenName,              java.lang.String targetScreenName)",Returns detailed information about the relationship between two users.,Relationship
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"updateFriendship(long userId,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,Relationship
twitter4j.api.FriendsFollowersResources,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"updateFriendship(java.lang.String screenName,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,Relationship
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,createFriendship(long userId),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"createFriendship(long userId,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,createFriendship(java.lang.String screenName),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"createFriendship(java.lang.String screenName,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,destroyFriendship(long userId),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,destroyFriendship(java.lang.String screenName),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getFollowersIDs(long cursor),Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(long userId,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersIDs(java.lang.String screenName,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(long userId,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFollowersList(java.lang.String screenName,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getFriendsIDs(long cursor),Returns an array of numeric IDs for every user the authenticating user is following.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(long userId,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsIDs(java.lang.String screenName,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(long userId,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"getFriendsList(java.lang.String screenName,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getIncomingFriendships(long cursor),Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,getOutgoingFriendships(long cursor),Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,lookupFriendships(long... ids),Returns the relationship of the authenticating user to the specified users.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,lookupFriendships(java.lang.String... screenNames),Returns the relationship of the authenticating user to the specified users.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"showFriendship(long sourceId,              long targetId)",Returns detailed information about the relationship between two users.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"showFriendship(java.lang.String sourceScreenName,              java.lang.String targetScreenName)",Returns detailed information about the relationship between two users.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"updateFriendship(long userId,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,void
twitter4j.api.FriendsFollowersResourcesAsync,Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,"updateFriendship(java.lang.String screenName,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,void
twitter4j.Friendship,N/A,getId(),N/A,long
twitter4j.Friendship,N/A,getName(),N/A,java.lang.String
twitter4j.Friendship,N/A,getScreenName(),N/A,java.lang.String
twitter4j.Friendship,N/A,isFollowedBy(),N/A,boolean
twitter4j.Friendship,N/A,isFollowing(),N/A,boolean
twitter4j.GeoLocation,A data class representing geo location.,equals(java.lang.Object o),N/A,boolean
twitter4j.GeoLocation,A data class representing geo location.,getLatitude(),returns the latitude of the geo location,double
twitter4j.GeoLocation,A data class representing geo location.,getLongitude(),returns the longitude of the geo location,double
twitter4j.GeoLocation,A data class representing geo location.,hashCode(),N/A,int
twitter4j.GeoLocation,A data class representing geo location.,toString(),N/A,java.lang.String
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,accuracy(java.lang.String accuracy),N/A,GeoQuery
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,"appendParameter(java.lang.String name,               double value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,"appendParameter(java.lang.String name,               int value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,"appendParameter(java.lang.String name,               java.lang.String value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,asHttpParameterArray(),N/A,(package private) HttpParameter[]
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,equals(java.lang.Object o),N/A,boolean
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getAccuracy(),N/A,java.lang.String
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getGranularity(),N/A,java.lang.String
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getIp(),N/A,java.lang.String
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getLocation(),N/A,GeoLocation
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getMaxResults(),N/A,int
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,getQuery(),Gets the query to filter Place results from geo/search,java.lang.String
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,granularity(java.lang.String granularity),N/A,GeoQuery
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,hashCode(),N/A,int
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,maxResults(int maxResults),N/A,GeoQuery
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,setAccuracy(java.lang.String accuracy),"Sets a hint on the ""region"" in which to search.",void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,setGranularity(java.lang.String granularity),Sets the minimal granularity of data to return.,void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,setMaxResults(int maxResults),Sets a hint as to the number of results to return.,void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,setQuery(java.lang.String query),N/A,void
twitter4j.GeoQuery,Creates a GeoQuery with the specified location,toString(),N/A,java.lang.String
twitter4j.HashtagEntity,A data interface representing one single Hashtag entity.,getEnd(),Returns the index of the end character of the hashtag.,int
twitter4j.HashtagEntity,A data interface representing one single Hashtag entity.,getStart(),Returns the index of the start character of the hashtag.,int
twitter4j.HashtagEntity,A data interface representing one single Hashtag entity.,getText(),Returns the text of the hashtag without #.,java.lang.String
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getAPIConfiguration(),"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",TwitterAPIConfiguration
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getLanguages(),Returns the list of languages supported by Twitter along with their ISO 639-1 code.,ResponseList<HelpResources.Language>
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getPrivacyPolicy(),Returns Twitter's Privacy Policy.,java.lang.String
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getRateLimitStatus(),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.","java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getRateLimitStatus(java.lang.String... resources),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.","java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.api.HelpResources,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getTermsOfService(),Returns Twitter's' Terms of Service.,java.lang.String
twitter4j.api.HelpResources.Language,N/A,getCode(),N/A,java.lang.String
twitter4j.api.HelpResources.Language,N/A,getName(),N/A,java.lang.String
twitter4j.api.HelpResources.Language,N/A,getStatus(),N/A,java.lang.String
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getAPIConfiguration(),"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",void
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getLanguages(),Returns the list of languages supported by Twitter along with their ISO 639-1 code.,void
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getPrivacyPolicy(),Returns Twitter's Privacy Policy.,void
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getRateLimitStatus(),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.",void
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getRateLimitStatus(java.lang.String... resources),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.",void
twitter4j.api.HelpResourcesAsync,"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",getTermsOfService(),Returns Twitter's' Terms of Service.,void
twitter4j.IDs,A data interface representing array of numeric IDs.,getIDs(),N/A,long[]
twitter4j.IDs,A data interface representing array of numeric IDs.,getNextCursor(),N/A,long
twitter4j.IDs,A data interface representing array of numeric IDs.,getPreviousCursor(),N/A,long
twitter4j.IDs,A data interface representing array of numeric IDs.,hasNext(),N/A,boolean
twitter4j.IDs,A data interface representing array of numeric IDs.,hasPrevious(),N/A,boolean
twitter4j.JSONObjectType,Determine the respective object type for a given JSONObject.,determine(JSONObject json),Determine the respective object type for a given JSONObject.,static JSONObjectType.Type
twitter4j.JSONObjectType.Type,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static JSONObjectType.Type
twitter4j.JSONObjectType.Type,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static JSONObjectType.Type[]
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserList(java.lang.String listName,              boolean isPublicList,              java.lang.String description)",Creates a new list for the authenticated user.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMember(long listId,                    long userId)",Adds a member to a list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMember(long ownerId,                    java.lang.String slug,                    long userId)",Adds a member to a list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMember(java.lang.String ownerScreenName,                    java.lang.String slug,                    long userId)",Adds a member to a list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(long listId,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(long listId,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(java.lang.String ownerScreenName,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListMembers(java.lang.String ownerScreenName,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,createUserListSubscription(long listId),Make the authenticated user follow the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListSubscription(long ownerId,                          java.lang.String slug)",Make the authenticated user follow the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"createUserListSubscription(java.lang.String ownerScreenName,                          java.lang.String slug)",Make the authenticated user follow the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,destroyUserList(long listId),Deletes the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserList(long ownerId,               java.lang.String slug)",Deletes the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserList(java.lang.String ownerScreenName,               java.lang.String slug)",Deletes the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMember(long listId,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMember(long listId,                     java.lang.String screenName)",Removes the specified members from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMember(long ownerId,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMember(java.lang.String ownerScreenName,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMembers(long listId,                      long[] userIds)",Removes the specified members from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMembers(long listId,                      java.lang.String[] screenNames)",Removes the specified members from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListMembers(java.lang.String ownerScreenName,                      java.lang.String slug,                      java.lang.String[] screenNames)",Removes the specified members from the list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,destroyUserListSubscription(long listId),Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListSubscription(long ownerId,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"destroyUserListSubscription(java.lang.String ownerScreenName,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long listId,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long listId,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long listId,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(int count,                      long cursor)",List the lists the authenticating user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,getUserListMemberships(long cursor),List the lists the authenticating user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      int count,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      int count,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      int count,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      int count,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,getUserLists(long listOwnerUserId),List the lists of the specified user.,ResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserLists(long listOwnerUserId,            boolean reverse)",List the lists of the specified user.,ResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,getUserLists(java.lang.String listOwnerScreenName),List the lists of the specified user.,ResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserLists(java.lang.String listOwnerScreenName,            boolean reverse)",List the lists of the specified user.,ResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListsOwnerships(long listOwnerId,                      int count,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListsOwnerships(long listOwnerId,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListsOwnerships(java.lang.String listOwnerScreenName,                      int count,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListsOwnerships(java.lang.String listOwnerScreenName,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListStatuses(long listId,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListStatuses(long ownerId,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListStatuses(java.lang.String ownerScreenName,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long listId,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long listId,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long listId,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscriptions(long listSubscriberId,                        int count,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscriptions(long listSubscriberId,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscriptions(java.lang.String listSubscriberScreenName,                        int count,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"getUserListSubscriptions(java.lang.String listSubscriberScreenName,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,showUserList(long listId),Show the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserList(long ownerId,            java.lang.String slug)",Show the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserList(java.lang.String ownerScreenName,            java.lang.String slug)",Show the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListMembership(long listId,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListMembership(long ownerId,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListMembership(java.lang.String ownerScreenName,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListSubscription(long listId,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListSubscription(long ownerId,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"showUserListSubscription(java.lang.String ownerScreenName,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"updateUserList(long listId,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"updateUserList(long ownerId,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.api.ListsResources,Creates a new list for the authenticated user.,"updateUserList(java.lang.String ownerScreenName,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserList(java.lang.String listName,              boolean isPublicList,              java.lang.String description)",Creates a new list for the authenticated user.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMember(long listId,                    long userId)",Adds a member to a list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMember(long ownerId,                    java.lang.String slug,                    long userId)",Adds a member to a list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMembers(long listId,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMembers(long listId,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,createUserListSubscription(long listId),Make the authenticated user follow the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"createUserListSubscription(long ownerId,                          java.lang.String slug)",Make the authenticated user follow the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,destroyUserList(long listId),Deletes the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"destroyUserList(long ownerId,               java.lang.String slug)",Deletes the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"destroyUserListMember(long listId,                     long userId)",Removes the specified member from the list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"destroyUserListMember(long ownerId,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,destroyUserListSubscription(long listId),Unsubscribes the authenticated user form the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"destroyUserListSubscription(long ownerId,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMembers(long listId,                  long cursor)",Returns the members of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,getUserListMemberships(long cursor),List the lists the authenticating user has been added to.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      long cursor)",List the lists the specified user has been added to.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMemberships(long listMemberId,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor)",List the lists the specified user has been added to.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,getUserLists(long listOwnerUserId),List the lists of the specified user.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,getUserLists(java.lang.String listOwnerScreenName),List the lists of the specified user.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListStatuses(long listId,                   Paging paging)",Show tweet timeline for members of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListStatuses(long ownerId,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListSubscribers(long listId,                      long cursor)",Returns the subscribers of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"getUserListSubscriptions(java.lang.String listOwnerScreenName,                        long cursor)",List the lists the specified user follows.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,showUserList(long listId),Show the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"showUserList(long ownerId,            java.lang.String slug)",Show the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"showUserListMembership(long listId,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"showUserListMembership(long ownerId,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"showUserListSubscription(long listId,                        long userId)",Check if the specified user is a subscriber of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"showUserListSubscription(long ownerId,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"updateUserList(long listId,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,void
twitter4j.api.ListsResourcesAsync,Creates a new list for the authenticated user.,"updateUserList(long ownerId,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,void
twitter4j.Location,N/A,getCountryCode(),N/A,java.lang.String
twitter4j.Location,N/A,getCountryName(),N/A,java.lang.String
twitter4j.Location,N/A,getName(),N/A,java.lang.String
twitter4j.Location,N/A,getPlaceCode(),N/A,int
twitter4j.Location,N/A,getPlaceName(),N/A,java.lang.String
twitter4j.Location,N/A,getURL(),N/A,java.lang.String
twitter4j.Location,N/A,getWoeid(),N/A,int
twitter4j.MediaEntity,Returns the id of the media.,getExtAltText(),N/A,java.lang.String
twitter4j.MediaEntity,Returns the id of the media.,getId(),Returns the id of the media.,long
twitter4j.MediaEntity,Returns the id of the media.,getMediaURL(),Returns the media URL.,java.lang.String
twitter4j.MediaEntity,Returns the id of the media.,getMediaURLHttps(),Returns the media secure URL.,java.lang.String
twitter4j.MediaEntity,Returns the id of the media.,getSizes(),Returns size variations of the media.,"java.util.Map<java.lang.Integer,MediaEntity.Size>"
twitter4j.MediaEntity,Returns the id of the media.,getType(),"Returns the media type (""photo"", ""video"", ""animated_gif"").",java.lang.String
twitter4j.MediaEntity,Returns the id of the media.,getVideoAspectRatioHeight(),N/A,int
twitter4j.MediaEntity,Returns the id of the media.,getVideoAspectRatioWidth(),N/A,int
twitter4j.MediaEntity,Returns the id of the media.,getVideoDurationMillis(),N/A,long
twitter4j.MediaEntity,Returns the id of the media.,getVideoVariants(),N/A,MediaEntity.Variant[]
twitter4j.MediaEntity.Size,N/A,getHeight(),N/A,int
twitter4j.MediaEntity.Size,N/A,getResize(),N/A,int
twitter4j.MediaEntity.Size,N/A,getWidth(),N/A,int
twitter4j.MediaEntity.Variant,N/A,getBitrate(),N/A,int
twitter4j.MediaEntity.Variant,N/A,getContentType(),N/A,java.lang.String
twitter4j.MediaEntity.Variant,N/A,getUrl(),N/A,java.lang.String
twitter4j.auth.NullAuthorization,An interface represents credentials.,equals(java.lang.Object o),N/A,boolean
twitter4j.auth.NullAuthorization,An interface represents credentials.,getAuthorizationHeader(HttpRequest req),N/A,java.lang.String
twitter4j.auth.NullAuthorization,An interface represents credentials.,getInstance(),N/A,static NullAuthorization
twitter4j.auth.NullAuthorization,An interface represents credentials.,isEnabled(),Returns true if authorization credentials are set.,boolean
twitter4j.auth.NullAuthorization,An interface represents credentials.,readResolve(),N/A,private java.lang.Object
twitter4j.auth.NullAuthorization,An interface represents credentials.,toString(),N/A,java.lang.String
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,equals(java.lang.Object obj),N/A,boolean
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,getAuthorizationHeader(HttpRequest req),N/A,java.lang.String
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,getOAuth2Token(),Obtains an OAuth 2 Bearer token.,OAuth2Token
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,hashCode(),N/A,int
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,invalidateOAuth2Token(),Revokes an issued OAuth 2 Bearer Token.,void
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,isEnabled(),Returns true if authorization credentials are set.,boolean
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,setOAuth2Token(OAuth2Token oauth2Token),Sets the OAuth 2 Bearer token.,void
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,"setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",Sets the OAuth consumer key and consumer secret.,void
twitter4j.auth.OAuth2Authorization,Obtains an OAuth 2 Bearer token.,toString(),N/A,java.lang.String
twitter4j.auth.OAuth2Support,Obtains an OAuth 2 Bearer token.,getOAuth2Token(),Obtains an OAuth 2 Bearer token.,OAuth2Token
twitter4j.auth.OAuth2Support,Obtains an OAuth 2 Bearer token.,invalidateOAuth2Token(),Revokes an issued OAuth 2 Bearer Token.,void
twitter4j.auth.OAuth2Support,Obtains an OAuth 2 Bearer token.,setOAuth2Token(OAuth2Token oauth2Token),Sets the OAuth 2 Bearer token.,void
twitter4j.auth.OAuth2Support,Obtains an OAuth 2 Bearer token.,"setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",Sets the OAuth consumer key and consumer secret.,void
twitter4j.auth.OAuth2Token,N/A,equals(java.lang.Object obj),N/A,boolean
twitter4j.auth.OAuth2Token,N/A,generateAuthorizationHeader(),N/A,(package private) java.lang.String
twitter4j.auth.OAuth2Token,N/A,getAccessToken(),N/A,java.lang.String
twitter4j.auth.OAuth2Token,N/A,"getRawString(java.lang.String name,            JSONObject json)",N/A,private static java.lang.String
twitter4j.auth.OAuth2Token,N/A,getTokenType(),N/A,java.lang.String
twitter4j.auth.OAuth2Token,N/A,hashCode(),N/A,int
twitter4j.auth.OAuth2Token,N/A,toString(),N/A,java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",constructRequestURL(java.lang.String url),"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",(package private) static java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",encodeParameters(java.util.List<HttpParameter> httpParams),N/A,static java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","encodeParameters(java.util.List<HttpParameter> httpParams,                java.lang.String splitter,                boolean quot)",N/A,static java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",ensureTokenIsAvailable(),N/A,private void
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",equals(java.lang.Object o),N/A,boolean
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","generateAuthorizationHeader(java.lang.String method,                           java.lang.String url,                           HttpParameter[] params,                           OAuthToken token)",N/A,(package private) java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","generateAuthorizationHeader(java.lang.String method,                           java.lang.String url,                           HttpParameter[] params,                           java.lang.String nonce,                           java.lang.String timestamp,                           OAuthToken otoken)",N/A,(package private) java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","generateOAuthSignatureHttpParams(java.lang.String method,                                java.lang.String url)",N/A,java.util.List<HttpParameter>
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",generateSignature(java.lang.String data),N/A,(package private) java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","generateSignature(java.lang.String data,                 OAuthToken token)",Computes RFC 2104-compliant HMAC signature.,(package private) java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getAuthorizationHeader(HttpRequest req),N/A,java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getOAuthAccessToken(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",AccessToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getOAuthAccessToken(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","getOAuthAccessToken(RequestToken requestToken,                   java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getOAuthAccessToken(java.lang.String oauthVerifier),Retrieves an access token.,AccessToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","getOAuthAccessToken(java.lang.String screenName,                   java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",AccessToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getOAuthRequestToken(),Retrieves a request token,RequestToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",getOAuthRequestToken(java.lang.String callbackURL),Retrieves a request token,RequestToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","getOAuthRequestToken(java.lang.String callbackURL,                    java.lang.String xAuthAccessType)",Retrieves a request token,RequestToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","getOAuthRequestToken(java.lang.String callbackURL,                    java.lang.String xAuthAccessType,                    java.lang.String xAuthMode)",Retrieves a request token,RequestToken
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",hashCode(),N/A,int
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",isEnabled(),Returns true if authorization credentials are set.,boolean
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",normalizeRequestParameters(HttpParameter[] params),"The request parameters are collected, sorted and concatenated into a normalized string: •      Parameters in the OAuth HTTP Authorization header excluding the realm parameter. •      Parameters in the HTTP POST request body (with a content-type of application/x-www-form-urlencoded). •      HTTP GET parameters added to the URLs in the query part (as defined by [RFC3986] section 3).  The oauth_signature parameter MUST be excluded. The parameters are normalized into a single string as follows: 1.",(package private) static java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",normalizeRequestParameters(java.util.List<HttpParameter> params),N/A,private static java.lang.String
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","parseGetParameters(java.lang.String url,                  java.util.List<HttpParameter> signatureBaseParams)",N/A,private void
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",setOAuthAccessToken(AccessToken accessToken),Sets the access token,void
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.","setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",sets the OAuth consumer key and consumer secret,void
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",setOAuthRealm(java.lang.String realm),Sets the OAuth realm,void
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",toParamList(HttpParameter[] params),N/A,private static java.util.List<HttpParameter>
twitter4j.auth.OAuthAuthorization,"The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint.",toString(),N/A,java.lang.String
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessToken(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",AccessToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessToken(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthAccessToken(RequestToken requestToken,                   java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthAccessToken(java.lang.String oauthVerifier),Retrieves an access token.,AccessToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthAccessToken(java.lang.String screenName,                   java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",AccessToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthRequestToken(),Retrieves a request token,RequestToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",getOAuthRequestToken(java.lang.String callbackURL),Retrieves a request token,RequestToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthRequestToken(java.lang.String callbackURL,                    java.lang.String xAuthAccessType)",Retrieves a request token,RequestToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","getOAuthRequestToken(java.lang.String callbackURL,                    java.lang.String xAuthAccessType,                    java.lang.String xAuthMode)",Retrieves a request token,RequestToken
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",setOAuthAccessToken(AccessToken accessToken),Sets the access token,void
twitter4j.auth.OAuthSupport,"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.","setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",sets the OAuth consumer key and consumer secret,void
twitter4j.auth.OAuthToken,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.auth.OAuthToken,N/A,getParameter(java.lang.String parameter),N/A,java.lang.String
twitter4j.auth.OAuthToken,N/A,getSecretKeySpec(),N/A,(package private) javax.crypto.spec.SecretKeySpec
twitter4j.auth.OAuthToken,N/A,getToken(),N/A,java.lang.String
twitter4j.auth.OAuthToken,N/A,getTokenSecret(),N/A,java.lang.String
twitter4j.auth.OAuthToken,N/A,hashCode(),N/A,int
twitter4j.auth.OAuthToken,N/A,setSecretKeySpec(javax.crypto.spec.SecretKeySpec secretKeySpec),N/A,(package private) void
twitter4j.auth.OAuthToken,N/A,toString(),N/A,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getAuthorName(),The name of the author/owner of the resource.,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getAuthorURL(),A URL for the author/owner of the resource.,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getCacheAge(),"The suggested cache lifetime for this resource, in seconds.",long
twitter4j.OEmbed,The name of the author/owner of the resource.,getHtml(),The HTML required to display the resource.,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getURL(),The url of the resource provider. The source URL of the image.,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getVersion(),The oEmbed version number.,java.lang.String
twitter4j.OEmbed,The name of the author/owner of the resource.,getWidth(),The width in pixels of the image specified in the url parameter.,int
twitter4j.OEmbedRequest,N/A,align(OEmbedRequest.Align align),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,"appendParameter(java.lang.String name,               long value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.OEmbedRequest,N/A,"appendParameter(java.lang.String name,               java.lang.String value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.OEmbedRequest,N/A,asHttpParameterArray(),N/A,(package private) HttpParameter[]
twitter4j.OEmbedRequest,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.OEmbedRequest,N/A,hashCode(),N/A,int
twitter4j.OEmbedRequest,N/A,HideMedia(boolean hideMedia),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,HideThread(boolean hideThread),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,hideTweet(boolean hideTweet),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,lang(java.lang.String lang),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,MaxWidth(int maxWidth),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,omitScript(boolean omitScript),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,related(java.lang.String[] related),N/A,OEmbedRequest
twitter4j.OEmbedRequest,N/A,setAlign(OEmbedRequest.Align align),N/A,void
twitter4j.OEmbedRequest,N/A,setHideMedia(boolean hideMedia),N/A,void
twitter4j.OEmbedRequest,N/A,setHideThread(boolean hideThread),N/A,void
twitter4j.OEmbedRequest,N/A,setHideTweet(boolean hideTweet),N/A,void
twitter4j.OEmbedRequest,N/A,setLang(java.lang.String lang),N/A,void
twitter4j.OEmbedRequest,N/A,setMaxWidth(int maxWidth),N/A,void
twitter4j.OEmbedRequest,N/A,setOmitScript(boolean omitScript),N/A,void
twitter4j.OEmbedRequest,N/A,setRelated(java.lang.String[] related),N/A,void
twitter4j.OEmbedRequest,N/A,setWidgetType(OEmbedRequest.WidgetType widgetType),N/A,void
twitter4j.OEmbedRequest,N/A,toString(),N/A,java.lang.String
twitter4j.OEmbedRequest,N/A,widgetType(OEmbedRequest.WidgetType widgetType),N/A,OEmbedRequest
twitter4j.OEmbedRequest.Align,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static OEmbedRequest.Align
twitter4j.OEmbedRequest.Align,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static OEmbedRequest.Align[]
twitter4j.OEmbedRequest.WidgetType,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static OEmbedRequest.WidgetType
twitter4j.OEmbedRequest.WidgetType,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static OEmbedRequest.WidgetType[]
twitter4j.PagableResponseList,ResponseList with cursor support.,getNextCursor(),N/A,long
twitter4j.PagableResponseList,ResponseList with cursor support.,getPreviousCursor(),N/A,long
twitter4j.PagableResponseList,ResponseList with cursor support.,hasNext(),N/A,boolean
twitter4j.PagableResponseList,ResponseList with cursor support.,hasPrevious(),N/A,boolean
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,"addPostParameter(char[] supportedParams,                char paramKey,                java.util.List<HttpParameter> pagingParams,                java.lang.String paramName,                long paramValue)",N/A,private void
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,asPostParameterArray(),N/A,(package private) HttpParameter[]
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,"asPostParameterArray(char[] supportedParams,                    java.lang.String perPageParamName)","Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set.",(package private) HttpParameter[]
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,asPostParameterList(),N/A,(package private) java.util.List<HttpParameter>
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,asPostParameterList(char[] supportedParams),N/A,(package private) java.util.List<HttpParameter>
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,"asPostParameterList(char[] supportedParams,                   java.lang.String perPageParamName)","Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set.",(package private) java.util.List<HttpParameter>
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,count(int count),N/A,Paging
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,equals(java.lang.Object o),N/A,boolean
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,getCount(),N/A,int
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,getMaxId(),N/A,long
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,getPage(),N/A,int
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,getSinceId(),N/A,long
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,hashCode(),N/A,int
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,maxId(long maxId),N/A,Paging
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,setCount(int count),N/A,void
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,setMaxId(long maxId),N/A,void
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,setPage(int page),N/A,void
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,setSinceId(long sinceId),N/A,void
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,sinceId(long sinceId),N/A,Paging
twitter4j.Paging,Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread.,toString(),N/A,java.lang.String
twitter4j.Place,N/A,getBoundingBoxCoordinates(),N/A,GeoLocation[][]
twitter4j.Place,N/A,getBoundingBoxType(),N/A,java.lang.String
twitter4j.Place,N/A,getContainedWithIn(),N/A,Place[]
twitter4j.Place,N/A,getCountry(),N/A,java.lang.String
twitter4j.Place,N/A,getCountryCode(),N/A,java.lang.String
twitter4j.Place,N/A,getFullName(),N/A,java.lang.String
twitter4j.Place,N/A,getGeometryCoordinates(),N/A,GeoLocation[][]
twitter4j.Place,N/A,getGeometryType(),N/A,java.lang.String
twitter4j.Place,N/A,getId(),N/A,java.lang.String
twitter4j.Place,N/A,getName(),N/A,java.lang.String
twitter4j.Place,N/A,getPlaceType(),N/A,java.lang.String
twitter4j.Place,N/A,getStreetAddress(),N/A,java.lang.String
twitter4j.Place,N/A,getURL(),N/A,java.lang.String
twitter4j.api.PlacesGeoResources,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,getGeoDetails(java.lang.String placeId),Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,Place
twitter4j.api.PlacesGeoResources,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,"getSimilarPlaces(GeoLocation location,                java.lang.String name,                java.lang.String containedWithin,                java.lang.String streetAddress)",Locates places near the given coordinates which are similar in name.,ResponseList<Place>
twitter4j.api.PlacesGeoResources,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,reverseGeoCode(GeoQuery query),Search for places (cities and neighborhoods) that can be attached to a statuses/update.,ResponseList<Place>
twitter4j.api.PlacesGeoResources,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,searchPlaces(GeoQuery query),Search for places that can be attached to a statuses/update.,ResponseList<Place>
twitter4j.api.PlacesGeoResourcesAsync,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,getGeoDetails(java.lang.String id),Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,void
twitter4j.api.PlacesGeoResourcesAsync,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,"getSimilarPlaces(GeoLocation location,                java.lang.String name,                java.lang.String containedWithin,                java.lang.String streetAddress)",Locates places near the given coordinates which are similar in name.,void
twitter4j.api.PlacesGeoResourcesAsync,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,reverseGeoCode(GeoQuery query),Search for places (cities and neighborhoods) that can be attached to a statuses/update.,void
twitter4j.api.PlacesGeoResourcesAsync,Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method.,searchPlaces(GeoQuery query),Search for places that can be attached to a statuses/update.,void
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"getBoolean(java.util.Properties props,          java.lang.String prefix,          java.lang.String name)",N/A,private boolean
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"getIntProperty(java.util.Properties props,              java.lang.String prefix,              java.lang.String name)",N/A,private int
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"getLongProperty(java.util.Properties props,               java.lang.String prefix,               java.lang.String name)",N/A,private long
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"getString(java.util.Properties props,         java.lang.String prefix,         java.lang.String name)",N/A,private java.lang.String
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"loadProperties(java.util.Properties props,              java.io.InputStream is)",N/A,private boolean
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"loadProperties(java.util.Properties props,              java.lang.String path)",N/A,private boolean
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,normalize(java.util.Properties props),N/A,private void
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"notNull(java.util.Properties props,       java.lang.String prefix,       java.lang.String name)",N/A,private boolean
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,readResolve(),N/A,protected java.lang.Object
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"setFieldsWithPrefix(java.util.Properties props,                   java.lang.String prefix)",N/A,private void
twitter4j.conf.PropertyConfiguration,Creates a root PropertyConfiguration.,"setFieldsWithTreePath(java.util.Properties props,                     java.lang.String treePath)","passing ""/foo/bar"" as treePath will result: 1.",private void
twitter4j.conf.PropertyConfigurationFactory,ConfigurationFactory implementation for PropertyConfiguration. Currently getInstance calls concrete constructor each time. No caching at all.,dispose(),clean up resources acquired by this factory.,void
twitter4j.conf.PropertyConfigurationFactory,ConfigurationFactory implementation for PropertyConfiguration. Currently getInstance calls concrete constructor each time. No caching at all.,getInstance(),returns the root configuration,Configuration
twitter4j.conf.PropertyConfigurationFactory,ConfigurationFactory implementation for PropertyConfiguration. Currently getInstance calls concrete constructor each time. No caching at all.,getInstance(java.lang.String configTreePath),returns the configuration specified by the path,Configuration
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","appendParameter(java.lang.String name,               long value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","appendParameter(java.lang.String name,               java.lang.String value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",asHttpParameterArray(),N/A,(package private) HttpParameter[]
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",count(int count),"sets the number of tweets to return per page, up to a max of 100",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",createWithNextPageQuery(java.lang.String nextPageQuery),N/A,(package private) static Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",equals(java.lang.Object o),N/A,boolean
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","geoCode(GeoLocation location,       double radius,       Query.Unit unit)","returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","geoCode(GeoLocation location,       double radius,       java.lang.String unit)","Deprecated. use geoCode(GeoLocation, double, twitter4j.Query.Unit) instead",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getCount(),"Returns the number of tweets to return per page, up to a max of 100",int
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getGeocode(),Returns the specified geocode,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getLang(),Returns the lang,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getLocale(),Returns the language of the query you are sending (only ja is currently effective).,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getMaxId(),Returns tweets with status ids less than the given id.,long
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getQuery(),Returns the specified query,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getResultType(),Returns resultType,Query.ResultType
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getSince(),Returns tweets with since the given date.,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getSinceId(),returns sinceId,long
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",getUntil(),Returns until,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",hashCode(),N/A,int
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",lang(java.lang.String lang),"restricts tweets to the given language, given by an ISO 639-1 code",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",locale(java.lang.String locale),Specify the language of the query you are sending (only ja is currently effective).,Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",maxId(long maxId),"If specified, returns tweets with status ids less than the given id.",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",nextPage(),N/A,(package private) java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",query(java.lang.String query),Sets the query string,Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",resultType(Query.ResultType resultType),"If specified, returns tweets included popular or real time or both in the response",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setCount(int count),"sets the number of tweets to return per page, up to a max of 100",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","setGeoCode(GeoLocation location,          double radius,          Query.Unit unit)","returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.","setGeoCode(GeoLocation location,          double radius,          java.lang.String unit)","Deprecated. use setGeoCode(GeoLocation, double, twitter4j.Query.Unit) instead",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setLang(java.lang.String lang),"restricts tweets to the given language, given by an ISO 639-1 code",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setLocale(java.lang.String locale),Specify the language of the query you are sending (only ja is currently effective).,void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setMaxId(long maxId),"If specified, returns tweets with status ids less than the given id.",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setQuery(java.lang.String query),Sets the query string,void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setResultType(Query.ResultType resultType),Default value is Query.MIXED if parameter not specified,void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setSince(java.lang.String since),"If specified, returns tweets with since the given date.",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setSinceId(long sinceId),returns tweets with status ids greater than the given id.,void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",setUntil(java.lang.String until),"If specified, returns tweets with generated before the given date.",void
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",since(java.lang.String since),"If specified, returns tweets with since the given date.",Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",sinceId(long sinceId),returns tweets with status ids greater than the given id.,Query
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",toString(),N/A,java.lang.String
twitter4j.Query,"A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing.",until(java.lang.String until),"If specified, returns tweets with generated before the given date.",Query
twitter4j.Query.ResultType,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static Query.ResultType
twitter4j.Query.ResultType,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static Query.ResultType[]
twitter4j.Query.Unit,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static Query.Unit
twitter4j.Query.Unit,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static Query.Unit[]
twitter4j.QueryResult,A data interface representing search API response,getCompletedIn(),N/A,double
twitter4j.QueryResult,A data interface representing search API response,getCount(),N/A,int
twitter4j.QueryResult,A data interface representing search API response,getMaxId(),N/A,long
twitter4j.QueryResult,A data interface representing search API response,getQuery(),N/A,java.lang.String
twitter4j.QueryResult,A data interface representing search API response,getRefreshURL(),N/A,java.lang.String
twitter4j.QueryResult,A data interface representing search API response,getSinceId(),N/A,long
twitter4j.QueryResult,A data interface representing search API response,getTweets(),N/A,java.util.List<Status>
twitter4j.QueryResult,A data interface representing search API response,hasNext(),test if there is next page,boolean
twitter4j.QueryResult,A data interface representing search API response,nextQuery(),Returns a Query instance to fetch next page or null if there is no next page.,Query
twitter4j.RateLimitStatus,A data interface representing Twitter REST API's rate limit status,getLimit(),"Returns the current limit in effect This value is identical to the ""X-Rate-Limit-Limit"" response header.",int
twitter4j.RateLimitStatus,A data interface representing Twitter REST API's rate limit status,getRemaining(),"Returns the remaining number of API requests available. This value is identical to the ""X-Rate-Limit-Remaining"" response header.",int
twitter4j.RateLimitStatus,A data interface representing Twitter REST API's rate limit status,getResetTimeInSeconds(),Returns the seconds the current rate limiting period ends. This should be a same as getResetTime().getTime()/1000.,int
twitter4j.RateLimitStatus,A data interface representing Twitter REST API's rate limit status,getSecondsUntilReset(),Returns the amount of seconds until the current rate limiting period ends. This is a value provided/calculated only by Twitter4J for handiness and not a part of the twitter API spec.,int
twitter4j.RateLimitStatusEvent,A data interface representing Twitter REST API's rate limit status,getRateLimitStatus(),N/A,RateLimitStatus
twitter4j.RateLimitStatusEvent,A data interface representing Twitter REST API's rate limit status,isAccountRateLimitStatus(),N/A,boolean
twitter4j.RateLimitStatusEvent,A data interface representing Twitter REST API's rate limit status,isIPRateLimitStatus(),N/A,boolean
twitter4j.RateLimitStatusListener,Called when the account or IP address is hitting the rate limit. onRateLimitStatus will be also called before this event.,onRateLimitReached(RateLimitStatusEvent event),Called when the account or IP address is hitting the rate limit. onRateLimitStatus will be also called before this event.,void
twitter4j.RateLimitStatusListener,Called when the account or IP address is hitting the rate limit. onRateLimitStatus will be also called before this event.,onRateLimitStatus(RateLimitStatusEvent event),Called when the response contains rate limit status.,void
twitter4j.RawStreamListener,N/A,onMessage(java.lang.String rawString),N/A,void
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,canSourceDm(),Checks if source user can send dm to target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,getSourceUserId(),Returns the source user id,long
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,getSourceUserScreenName(),Returns the source user screen name,java.lang.String
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,getTargetUserId(),Returns the target user id,long
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,getTargetUserScreenName(),Returns the target user screen name,java.lang.String
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceBlockingTarget(),Returns if the source user is blocking the target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceFollowedByTarget(),Checks if source user is being followed by target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceFollowingTarget(),Checks if source user is following target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceMutingTarget(),Returns id the source user is muting the target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceNotificationsEnabled(),Checks if the source user has enabled notifications for updates of the target user,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isSourceWantRetweets(),Checks if the retweets from the target user enabled,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isTargetFollowedBySource(),Checks if target user is being followed by source user. This method is equivalent to isSourceFollowingTarget().,boolean
twitter4j.Relationship,A data interface that has detailed information about a relationship between two users,isTargetFollowingSource(),Checks if target user is following source user. This method is equivalent to isSourceFollowedByTarget().,boolean
twitter4j.auth.RequestToken,N/A,getAuthenticationURL(),N/A,java.lang.String
twitter4j.auth.RequestToken,N/A,getAuthorizationURL(),N/A,java.lang.String
twitter4j.ResponseList,List of TwitterResponse.,getRateLimitStatus(),Returns the current rate limit status if available.,RateLimitStatus
twitter4j.SavedSearch,A data interface representing a Saved Search,getCreatedAt(),N/A,java.util.Date
twitter4j.SavedSearch,A data interface representing a Saved Search,getId(),N/A,long
twitter4j.SavedSearch,A data interface representing a Saved Search,getName(),N/A,java.lang.String
twitter4j.SavedSearch,A data interface representing a Saved Search,getPosition(),N/A,int
twitter4j.SavedSearch,A data interface representing a Saved Search,getQuery(),N/A,java.lang.String
twitter4j.api.SavedSearchesResources,Creates a saved search for the authenticated user.,createSavedSearch(java.lang.String query),Creates a saved search for the authenticated user.,SavedSearch
twitter4j.api.SavedSearchesResources,Creates a saved search for the authenticated user.,destroySavedSearch(long id),Destroys a saved search for the authenticated user.,SavedSearch
twitter4j.api.SavedSearchesResources,Creates a saved search for the authenticated user.,getSavedSearches(),Returns the authenticated user's saved search queries.,ResponseList<SavedSearch>
twitter4j.api.SavedSearchesResources,Creates a saved search for the authenticated user.,showSavedSearch(long id),Retrieve the data for a saved search owned by the authenticating user specified by the given id.,SavedSearch
twitter4j.api.SavedSearchesResourcesAsync,Creates a saved search for the authenticated user.,createSavedSearch(java.lang.String query),Creates a saved search for the authenticated user.,void
twitter4j.api.SavedSearchesResourcesAsync,Creates a saved search for the authenticated user.,destroySavedSearch(int id),Destroys a saved search for the authenticated user.,void
twitter4j.api.SavedSearchesResourcesAsync,Creates a saved search for the authenticated user.,getSavedSearches(),Returns the authenticated user's saved search queries.,void
twitter4j.api.SavedSearchesResourcesAsync,Creates a saved search for the authenticated user.,showSavedSearch(int id),Retrieve the data for a saved search owned by the authenticating user specified by the given id.,void
twitter4j.Scopes,A data interface representing targeting scopes applied to a status.,getPlaceIds(),Returns the place_ids that identify the scope of the status.,java.lang.String[]
twitter4j.api.SearchResource,Returns tweets that match a specified query.,search(Query query),Returns tweets that match a specified query.,QueryResult
twitter4j.api.SearchResourceAsync,Returns tweets that match a specified query.,search(Query query),Returns tweets that match a specified query.,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onBlock(long forUser,       User source,       User blockedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onDeletionNotice(long forUser,                long directMessageId,                long userId)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onDeletionNotice(long forUser,                StatusDeletionNotice statusDeletionNotice)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onDirectMessage(long forUser,               DirectMessage directMessage)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),onDisconnectionNotice(java.lang.String screenName),callback method for StreamController.removeUsers(long[]),void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),onException(java.lang.Exception ex),N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onFavorite(long forUser,          User source,          User target,          Status favoritedStatus)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onFavoritedRetweet(User source,                  User target,                  Status favoritedStatus)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onFollow(long forUser,        User source,        User followedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onFriendList(long forUser,            long[] friendIds)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onMute(long forUser,      User source,      User target)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onQuotedTweet(User source,             User target,             Status quotingTweet)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onRetweetedRetweet(User source,                  User target,                  Status retweetedStatus)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onStatus(long forUser,        Status status)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUnblock(long forUser,         User source,         User unblockedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUnfavorite(long forUser,            User source,            User target,            Status unfavoritedStatus)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUnfollow(long forUser,          User source,          User followedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUnmute(long forUser,        User source,        User target)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserDeletion(long forUser,              long deletedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListCreation(long forUser,                  User listOwner,                  UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListDeletion(long forUser,                  User listOwner,                  UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListMemberAddition(long forUser,                        User addedUser,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListMemberDeletion(long forUser,                        User deletedUser,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListSubscription(long forUser,                      User subscriber,                      User listOwner,                      UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListUnsubscription(long forUser,                        User subscriber,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserListUpdate(long forUser,                User listOwner,                UserList list)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserProfileUpdate(long forUser,                   User updatedUser)",N/A,void
twitter4j.SiteStreamsAdapter,callback method for StreamController.removeUsers(long[]),"onUserSuspension(long forUser,                long suspendedUser)",N/A,void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,next(StatusListener listener),Reads next status from this stream.,void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"next(StreamListener[] listeners,    RawStreamListener[] rawStreamListeners)",N/A,void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onBlock(JSONObject source,       JSONObject target,       StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,onClose(),N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onDelete(JSONObject json,        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onDirectMessage(JSONObject json,               StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onDisconnectionNotice(java.lang.String line,                     StreamListener[] listeners)",N/A,void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onException(java.lang.Exception ex,           StreamListener[] listeners)",N/A,void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onFavorite(JSONObject source,          JSONObject target,          JSONObject targetObject,          StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onFavoritedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onFollow(JSONObject source,        JSONObject target,        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onFriends(JSONObject json,         StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onMessage(java.lang.String rawString,         RawStreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onMute(JSONObject source,      JSONObject target,      StreamListener[] listeners)",N/A,(package private) void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onQuotedTweet(JSONObject source,             JSONObject target,             JSONObject targetObject,             StreamListener[] listeners)",N/A,(package private) void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onRetweetedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onStatus(JSONObject json,        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUnblock(JSONObject source,         JSONObject target,         StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUnfavorite(JSONObject source,            JSONObject target,            JSONObject targetObject,            StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUnfollow(JSONObject source,          JSONObject target,          StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUnmute(JSONObject source,        JSONObject target,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserDeletion(long target,              StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListCreation(JSONObject source,                  JSONObject userList,                  StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListDestroyed(JSONObject source,                   JSONObject userList,                   StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListMemberAddition(JSONObject addedMember,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListMemberDeletion(JSONObject deletedMember,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListSubscription(JSONObject source,                      JSONObject owner,                      JSONObject userList,                      StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListUnsubscription(JSONObject source,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserListUpdated(JSONObject source,                 JSONObject userList,                 StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserSuspension(long target,                StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,"onUserUpdate(JSONObject source,            JSONObject target,            StreamListener[] listeners)",N/A,protected void
twitter4j.SiteStreamsImpl,Reads next status from this stream.,parseLine(java.lang.String line),N/A,protected java.lang.String
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onBlock(long forUser,       User source,       User blockedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onDeletionNotice(long forUser,                long directMessageId,                long userId)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onDeletionNotice(long forUser,                StatusDeletionNotice statusDeletionNotice)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onDirectMessage(long forUser,               DirectMessage directMessage)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),onDisconnectionNotice(java.lang.String line),callback method for StreamController.removeUsers(long[]),void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),onException(java.lang.Exception ex),N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onFavorite(long forUser,          User source,          User target,          Status favoritedStatus)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onFavoritedRetweet(User source,                  User target,                  Status favoritedStatus)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onFollow(long forUser,        User source,        User followedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onFriendList(long forUser,            long[] friendIds)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onMute(long forUser,      User source,      User target)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onQuotedTweet(User source,             User target,             Status quotingTweet)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onRetweetedRetweet(User source,                  User target,                  Status retweetedStatus)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onStatus(long forUser,        Status status)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUnblock(long forUser,         User source,         User unblockedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUnfavorite(long forUser,            User source,            User target,            Status unfavoritedStatus)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUnfollow(long forUser,          User source,          User unfollowedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUnmute(long forUser,        User source,        User target)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserDeletion(long forUser,              long deletedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListCreation(long forUser,                  User listOwner,                  UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListDeletion(long forUser,                  User listOwner,                  UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListMemberAddition(long forUser,                        User addedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListMemberDeletion(long forUser,                        User deletedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListSubscription(long forUser,                      User subscriber,                      User listOwner,                      UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListUnsubscription(long forUser,                        User subscriber,                        User listOwner,                        UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserListUpdate(long forUser,                User listOwner,                UserList list)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserProfileUpdate(long forUser,                   User updatedUser)",N/A,void
twitter4j.SiteStreamsListener,callback method for StreamController.removeUsers(long[]),"onUserSuspension(long forUser,                long suspendedUser)",N/A,void
twitter4j.api.SpamReportingResource,The user specified in the id is blocked by the authenticated user and reported as a spammer.,reportSpam(long userId),The user specified in the id is blocked by the authenticated user and reported as a spammer.,User
twitter4j.api.SpamReportingResource,The user specified in the id is blocked by the authenticated user and reported as a spammer.,reportSpam(java.lang.String screenName),The user specified in the id is blocked by the authenticated user and reported as a spammer.,User
twitter4j.api.SpamReportingResourceAsync,Not yet supported.  http://yusuke.homeip.net/jira/browse/TFJ-223,reportSpam(long userId),The user specified in the id is blocked by the authenticated user and reported as a spammer.,void
twitter4j.api.SpamReportingResourceAsync,Not yet supported.  http://yusuke.homeip.net/jira/browse/TFJ-223,reportSpam(java.lang.String screenName),The user specified in the id is blocked by the authenticated user and reported as a spammer.,void
twitter4j.StallWarning,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.StallWarning,N/A,getCode(),N/A,java.lang.String
twitter4j.StallWarning,N/A,getMessage(),N/A,java.lang.String
twitter4j.StallWarning,N/A,getPercentFull(),N/A,int
twitter4j.StallWarning,N/A,hashCode(),N/A,int
twitter4j.StallWarning,N/A,toString(),N/A,java.lang.String
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getContributors(),"Returns an array of contributors, or null if no contributor is associated with this status.",long[]
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getCreatedAt(),Return the created_at,java.util.Date
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getCurrentUserRetweetId(),"Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created before this feature was enabled.",long
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getDisplayTextRangeEnd(),N/A,int
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getDisplayTextRangeStart(),N/A,int
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getFavoriteCount(),"Indicates approximately how many times this Tweet has been ""favorited"" by Twitter users.",int
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getGeoLocation(),Returns The location that this tweet refers to if available.,GeoLocation
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getId(),Returns the id of the status,long
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getInReplyToScreenName(),Returns the in_reply_to_screen_name,java.lang.String
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getInReplyToStatusId(),Returns the in_reply_tostatus_id,long
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getInReplyToUserId(),Returns the in_reply_user_id,long
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getLang(),Returns the lang of the status text if available.,java.lang.String
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getPlace(),Returns the place attached to this status,Place
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getQuotedStatus(),Returns the Tweet object of the original Tweet that was quoted.,Status
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getQuotedStatusId(),Returns the Tweet ID of the quoted Tweet,long
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getQuotedStatusPermalink(),Returns the URLEntity object that represents the permalink of the quoted Tweet.,URLEntity
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getRetweetCount(),"Returns the number of times this tweet has been retweeted, or -1 when the tweet was created before this feature was enabled.",int
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getRetweetedStatus(),N/A,Status
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getScopes(),Returns the targeting scopes applied to a status.,Scopes
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getSource(),Returns the source,java.lang.String
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getText(),Returns the text of the status,java.lang.String
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getUser(),Return the user associated with the status. This can be null if the instance is from User.getStatus().,User
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),getWithheldInCountries(),Returns the list of country codes where the tweet is withheld,java.lang.String[]
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isFavorited(),Test if the status is favorited,boolean
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isPossiblySensitive(),Returns true if the status contains a link that is identified as sensitive.,boolean
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isRetweet(),N/A,boolean
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isRetweeted(),Test if the status is retweeted,boolean
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isRetweetedByMe(),"Returns true if the authenticating user has retweeted this tweet, or false when the tweet was created before this feature was enabled.",boolean
twitter4j.Status,A data interface representing one single status of a user. (e.g. https://dev.twitter.com/rest/reference/get/statuses/show/%3Aid),isTruncated(),Test if the status is truncated,boolean
twitter4j.StatusAdapter,Called upon deletionNotice notices.,onDeletionNotice(StatusDeletionNotice statusDeletionNotice),Called upon deletionNotice notices.,void
twitter4j.StatusAdapter,Called upon deletionNotice notices.,onException(java.lang.Exception ex),N/A,void
twitter4j.StatusAdapter,Called upon deletionNotice notices.,"onScrubGeo(long userId,          long upToStatusId)",Called upon location deletion messages.,void
twitter4j.StatusAdapter,Called upon deletionNotice notices.,onStallWarning(StallWarning warning),Called when receiving stall warnings.,void
twitter4j.StatusAdapter,Called upon deletionNotice notices.,onStatus(Status status),N/A,void
twitter4j.StatusAdapter,Called upon deletionNotice notices.,onTrackLimitationNotice(int numberOfLimitedStatuses),"This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity.",void
twitter4j.StatusDeletionNotice,"A data class representing Status deletionNotice Clients are urged to honor deletionNotice requests and discard deleted statuses immediately. At times, status deletionNotice messages may arrive before the status. Even in this case, the late arriving status should be deleted from your backing store.",getStatusId(),N/A,long
twitter4j.StatusDeletionNotice,"A data class representing Status deletionNotice Clients are urged to honor deletionNotice requests and discard deleted statuses immediately. At times, status deletionNotice messages may arrive before the status. Even in this case, the late arriving status should be deleted from your backing store.",getUserId(),N/A,long
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,compareTo(StatusDeletionNotice that),N/A,int
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,equals(java.lang.Object o),N/A,boolean
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,getStatusId(),N/A,long
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,getUserId(),N/A,long
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,hashCode(),N/A,int
twitter4j.StatusDeletionNoticeImpl,StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,toString(),N/A,java.lang.String
twitter4j.StatusListener,Called upon deletionNotice notices.,onDeletionNotice(StatusDeletionNotice statusDeletionNotice),Called upon deletionNotice notices.,void
twitter4j.StatusListener,Called upon deletionNotice notices.,"onScrubGeo(long userId,          long upToStatusId)",Called upon location deletion messages.,void
twitter4j.StatusListener,Called upon deletionNotice notices.,onStallWarning(StallWarning warning),Called when receiving stall warnings.,void
twitter4j.StatusListener,Called upon deletionNotice notices.,onStatus(Status status),N/A,void
twitter4j.StatusListener,Called upon deletionNotice notices.,onTrackLimitationNotice(int numberOfLimitedStatuses),"This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity.",void
twitter4j.StatusStream,Reads next status from this stream.,close(),N/A,void
twitter4j.StatusStream,Reads next status from this stream.,next(StatusListener listener),Reads next status from this stream.,void
twitter4j.StatusStreamBase,Reads next status from this stream.,asDirectMessage(JSONObject json),N/A,(package private) DirectMessage
twitter4j.StatusStreamBase,Reads next status from this stream.,asFriendList(JSONObject json),N/A,(package private) long[]
twitter4j.StatusStreamBase,Reads next status from this stream.,asStatus(JSONObject json),N/A,(package private) Status
twitter4j.StatusStreamBase,Reads next status from this stream.,asUser(JSONObject json),N/A,(package private) User
twitter4j.StatusStreamBase,Reads next status from this stream.,asUserList(JSONObject json),N/A,(package private) UserList
twitter4j.StatusStreamBase,Reads next status from this stream.,close(),N/A,void
twitter4j.StatusStreamBase,Reads next status from this stream.,"handleNextElement(StreamListener[] listeners,                 RawStreamListener[] rawStreamListeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,next(StatusListener listener),Reads next status from this stream.,abstract void
twitter4j.StatusStreamBase,Reads next status from this stream.,"next(StreamListener[] listeners,    RawStreamListener[] rawStreamListeners)",N/A,abstract void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onBlock(JSONObject source,       JSONObject target,       StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,onClose(),N/A,protected abstract void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onDelete(JSONObject json,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onDirectMessage(JSONObject json,               StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onDisconnectionNotice(java.lang.String line,                     StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onException(java.lang.Exception e,           StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onException(java.lang.Exception e,           StreamListener[] listeners,           RawStreamListener[] rawStreamListeners)",N/A,void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onFavorite(JSONObject source,          JSONObject target,          JSONObject targetObject,          StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onFavoritedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onFollow(JSONObject source,        JSONObject target,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onFriends(JSONObject json,         StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onLimit(JSONObject json,       StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onMessage(java.lang.String rawString,         RawStreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onMute(JSONObject source,      JSONObject target,      StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onQuotedTweet(JSONObject source,             JSONObject target,             JSONObject targetObject,             StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onRetweetedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onScrubGeo(JSONObject json,          StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onSender(JSONObject json,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onStallWarning(JSONObject json,              StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onStatus(JSONObject json,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUnblock(JSONObject source,         JSONObject target,         StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUnfavorite(JSONObject source,            JSONObject target,            JSONObject targetObject,            StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUnfollow(JSONObject source,          JSONObject target,          StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUnmute(JSONObject source,        JSONObject target,        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserDeletion(long target,              StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListCreation(JSONObject source,                  JSONObject userList,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListDestroyed(JSONObject source,                   JSONObject userList,                   StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListMemberAddition(JSONObject addedMember,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListMemberDeletion(JSONObject deletedMember,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListSubscription(JSONObject source,                      JSONObject owner,                      JSONObject userList,                      StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListUnsubscription(JSONObject source,                        JSONObject owner,                        JSONObject userList,                        StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserListUpdated(JSONObject source,                 JSONObject userList,                 StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserSuspension(long target,                StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,"onUserUpdate(JSONObject source,            JSONObject target,            StreamListener[] listeners)",N/A,(package private) void
twitter4j.StatusStreamBase,Reads next status from this stream.,parseLine(java.lang.String line),N/A,(package private) java.lang.String
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,next(StatusListener listener),Reads next status from this stream.,void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"next(StreamListener[] listeners,    RawStreamListener[] rawStreamListeners)",N/A,void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,onClose(),N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onDelete(JSONObject json,        StreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onException(java.lang.Exception e,           StreamListener[] listeners)",N/A,void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onLimit(JSONObject json,       StreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onMessage(java.lang.String rawString,         RawStreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onScrubGeo(JSONObject json,          StreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onStallWarning(JSONObject json,              StreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,"onStatus(JSONObject json,        StreamListener[] listeners)",N/A,protected void
twitter4j.StatusStreamImpl,StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing.,parseLine(java.lang.String line),N/A,protected java.lang.String
twitter4j.StatusUpdate,N/A,"appendParameter(java.lang.String name,               double value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.StatusUpdate,N/A,"appendParameter(java.lang.String name,               long value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.StatusUpdate,N/A,"appendParameter(java.lang.String name,               java.lang.String value,               java.util.List<HttpParameter> params)",N/A,private void
twitter4j.StatusUpdate,N/A,asHttpParameterArray(),N/A,(package private) HttpParameter[]
twitter4j.StatusUpdate,N/A,attachmentUrl(java.lang.String attachmentUrl),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,autoPopulateReplyMetadata(boolean autoPopulateReplyMetadata),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,displayCoordinates(boolean displayCoordinates),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,equals(java.lang.Object o),N/A,boolean
twitter4j.StatusUpdate,N/A,getAttachmentUrl(),N/A,java.lang.String
twitter4j.StatusUpdate,N/A,getInReplyToStatusId(),N/A,long
twitter4j.StatusUpdate,N/A,getLocation(),N/A,GeoLocation
twitter4j.StatusUpdate,N/A,getPlaceId(),N/A,java.lang.String
twitter4j.StatusUpdate,N/A,getStatus(),N/A,java.lang.String
twitter4j.StatusUpdate,N/A,hashCode(),N/A,int
twitter4j.StatusUpdate,N/A,inReplyToStatusId(long inReplyToStatusId),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,isAutoPopulateReplyMetadata(),N/A,boolean
twitter4j.StatusUpdate,N/A,isDisplayCoordinates(),N/A,boolean
twitter4j.StatusUpdate,N/A,isForUpdateWithMedia(),N/A,(package private) boolean
twitter4j.StatusUpdate,N/A,isPossiblySensitive(),N/A,boolean
twitter4j.StatusUpdate,N/A,location(GeoLocation location),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,media(java.io.File file),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,"media(java.lang.String name,     java.io.InputStream body)",N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,placeId(java.lang.String placeId),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,possiblySensitive(boolean possiblySensitive),N/A,StatusUpdate
twitter4j.StatusUpdate,N/A,setAttachmentUrl(java.lang.String attachmentUrl),N/A,void
twitter4j.StatusUpdate,N/A,setAutoPopulateReplyMetadata(boolean autoPopulateReplyMetadata),N/A,void
twitter4j.StatusUpdate,N/A,setDisplayCoordinates(boolean displayCoordinates),N/A,void
twitter4j.StatusUpdate,N/A,setInReplyToStatusId(long inReplyToStatusId),N/A,void
twitter4j.StatusUpdate,N/A,setLocation(GeoLocation location),N/A,void
twitter4j.StatusUpdate,N/A,setMedia(java.io.File file),N/A,void
twitter4j.StatusUpdate,N/A,"setMedia(java.lang.String name,        java.io.InputStream body)",N/A,void
twitter4j.StatusUpdate,N/A,setMediaIds(long... mediaIds),N/A,void
twitter4j.StatusUpdate,N/A,setPlaceId(java.lang.String placeId),N/A,void
twitter4j.StatusUpdate,N/A,setPossiblySensitive(boolean possiblySensitive),N/A,void
twitter4j.StatusUpdate,N/A,toString(),N/A,java.lang.String
twitter4j.StreamController,N/A,addUsers(long... userIds),N/A,java.lang.String
twitter4j.StreamController,N/A,createUser(JSONObject json),N/A,(package private) StreamController.User
twitter4j.StreamController,N/A,ensureControlURISet(),N/A,(package private) void
twitter4j.StreamController,N/A,getControlURI(),N/A,(package private) java.lang.String
twitter4j.StreamController,N/A,"getFriendsIDs(long userId,             long cursor)",N/A,StreamController.FriendsIDs
twitter4j.StreamController,N/A,getInfo(),N/A,ControlStreamInfo
twitter4j.StreamController,N/A,removeUsers(long... userIds),N/A,java.lang.String
twitter4j.StreamController,N/A,setControlURI(java.lang.String controlURI),N/A,(package private) void
twitter4j.StreamImplementation,N/A,close(),N/A,void
twitter4j.StreamImplementation,N/A,"next(StreamListener[] listeners,    RawStreamListener[] rawStreamListeners)",N/A,void
twitter4j.StreamImplementation,N/A,"onException(java.lang.Exception ex,           StreamListener[] listeners,           RawStreamListener[] rawStreamListeners)",N/A,void
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpConnectionTimeout(),N/A,int
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpProxyHost(),N/A,java.lang.String
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpProxyPassword(),N/A,java.lang.String
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpProxyPort(),N/A,int
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpProxyUser(),N/A,java.lang.String
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpReadTimeout(),N/A,int
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpRetryCount(),N/A,int
twitter4j.StreamingReadTimeoutConfiguration,N/A,getHttpRetryIntervalSeconds(),N/A,int
twitter4j.StreamingReadTimeoutConfiguration,N/A,isGZIPEnabled(),N/A,boolean
twitter4j.StreamingReadTimeoutConfiguration,N/A,isHttpProxySocks(),N/A,boolean
twitter4j.StreamingReadTimeoutConfiguration,N/A,isPrettyDebugEnabled(),N/A,boolean
twitter4j.StreamListener,N/A,onException(java.lang.Exception ex),N/A,void
twitter4j.api.SuggestedUsersResources,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getMemberSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,ResponseList<User>
twitter4j.api.SuggestedUsersResources,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getSuggestedUserCategories(),Access to Twitter's suggested user list.,ResponseList<Category>
twitter4j.api.SuggestedUsersResources,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getUserSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour.,ResponseList<User>
twitter4j.api.SuggestedUsersResourcesAsync,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getMemberSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,void
twitter4j.api.SuggestedUsersResourcesAsync,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getSuggestedUserCategories(),Access to Twitter's suggested user list.,void
twitter4j.api.SuggestedUsersResourcesAsync,Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,getUserSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour.,void
twitter4j.SymbolEntity,Returns the index of the end character of the symbol.,getEnd(),Returns the index of the end character of the symbol.,int
twitter4j.SymbolEntity,Returns the index of the end character of the symbol.,getStart(),Returns the index of the start character of the symbol.,int
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getHomeTimeline(),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getHomeTimeline(Paging paging),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getMentionsTimeline(),Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getMentionsTimeline(Paging paging),Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getRetweetsOfMe(),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getRetweetsOfMe(Paging paging),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(long userId),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.","getUserTimeline(long userId,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(Paging paging),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(java.lang.String screenName),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResources,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.","getUserTimeline(java.lang.String screenName,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getHomeTimeline(),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getHomeTimeline(Paging paging),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getMentions(),Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getMentions(Paging paging),Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getRetweetsOfMe(),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getRetweetsOfMe(Paging paging),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(long userId),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.","getUserTimeline(long userId,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(Paging paging),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",getUserTimeline(java.lang.String screenName),Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.api.TimelinesResourcesAsync,"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.","getUserTimeline(java.lang.String screenName,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,void
twitter4j.util.TimeSpanConverter,Constructs an instance with default locale,toTimeSpanString(java.util.Date date),N/A,java.lang.String
twitter4j.util.TimeSpanConverter,Constructs an instance with default locale,toTimeSpanString(int deltaInSeconds),N/A,private java.lang.String
twitter4j.util.TimeSpanConverter,Constructs an instance with default locale,toTimeSpanString(long milliseconds),N/A,java.lang.String
twitter4j.TimeZone,N/A,getName(),N/A,java.lang.String
twitter4j.TimeZone,N/A,tzinfoName(),N/A,java.lang.String
twitter4j.TimeZone,N/A,utcOffset(),N/A,int
twitter4j.Trend,A data interface representing Trend.,getName(),N/A,java.lang.String
twitter4j.Trend,A data interface representing Trend.,getQuery(),N/A,java.lang.String
twitter4j.Trend,A data interface representing Trend.,getTweetVolume(),"The tweet volume for the last 24 hours if available, -1 otherwise.",int
twitter4j.Trend,A data interface representing Trend.,getURL(),N/A,java.lang.String
twitter4j.Trends,A data class representing Trends.,getAsOf(),N/A,java.util.Date
twitter4j.Trends,A data class representing Trends.,getLocation(),Returns the location associated with the trends. This method is effective only with getLocalTrends() method. i.e.,Location
twitter4j.Trends,A data class representing Trends.,getTrendAt(),N/A,java.util.Date
twitter4j.Trends,A data class representing Trends.,getTrends(),N/A,Trend[]
twitter4j.api.TrendsResources,Returns the locations that Twitter has trending topic information for.,getAvailableTrends(),Returns the locations that Twitter has trending topic information for.,ResponseList<Location>
twitter4j.api.TrendsResources,Returns the locations that Twitter has trending topic information for.,getClosestTrends(GeoLocation location),"Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of ""locations"" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.",ResponseList<Location>
twitter4j.api.TrendsResources,Returns the locations that Twitter has trending topic information for.,getPlaceTrends(int woeid),"Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of ""trend"" objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes.",Trends
twitter4j.api.TrendsResourcesAsync,Retrieves the locations that Twitter has trending topic information for.,getAvailableTrends(),Retrieves the locations that Twitter has trending topic information for.,void
twitter4j.api.TrendsResourcesAsync,Retrieves the locations that Twitter has trending topic information for.,getClosestTrends(GeoLocation location),"Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of ""locations"" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.",void
twitter4j.api.TrendsResourcesAsync,Retrieves the locations that Twitter has trending topic information for.,getPlaceTrends(int woeid),"Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of ""trend"" objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes.",void
twitter4j.TweetEntity,"super interface of UserMentionEntity, URLEntity and HashtagEntity",getEnd(),Returns the index of the end character of the entity in the tweet.,int
twitter4j.TweetEntity,"super interface of UserMentionEntity, URLEntity and HashtagEntity",getStart(),Returns the index of the start character of the entity in the tweet.,int
twitter4j.TweetEntity,"super interface of UserMentionEntity, URLEntity and HashtagEntity",getText(),Returns the text of the entity,java.lang.String
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,destroyStatus(long statusId),Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,getOEmbed(OEmbedRequest req),Returns information allowing the creation of an embedded representation of a Tweet on third party sites.,OEmbed
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,"getRetweeterIds(long statusId,               int count,               long cursor)",Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter.,IDs
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,"getRetweeterIds(long statusId,               long cursor)",Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter.,IDs
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,getRetweets(long statusId),Returns up to 100 of the first retweets of a given tweet.,ResponseList<Status>
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,lookup(long... ids),"Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter.",ResponseList<Status>
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,retweetStatus(long statusId),Retweets a tweet.,Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,showStatus(long id),"Returns a single status, specified by the id parameter below.",Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,unRetweetStatus(long statusId),Untweets a retweeted status.,Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,updateStatus(StatusUpdate latestStatus),Updates the authenticating user's status.,Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,updateStatus(java.lang.String status),Updates the authenticating user's status.,Status
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,uploadMedia(java.io.File mediaFile),Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json,UploadedMedia
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,"uploadMedia(java.lang.String fileName,           java.io.InputStream media)",Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json,UploadedMedia
twitter4j.api.TweetsResources,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,"uploadMediaChunked(java.lang.String fileName,                  java.io.InputStream media)",Uploads media using chunked approach to be attached via updateStatus(twitter4j.StatusUpdate).,UploadedMedia
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,destroyStatus(long statusId),Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,getOEmbed(OEmbedRequest req),Returns information allowing the creation of an embedded representation of a Tweet on third party sites.,void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,getRetweets(long statusId),Returns up to 100 of the first retweets of a given tweet.,void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,lookup(long... ids),"Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter.",void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,retweetStatus(long statusId),Retweets a tweet.,void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,showStatus(long id),"Returns a single status, specified by the id parameter below.",void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,updateStatus(StatusUpdate status),Updates the authenticating user's status.,void
twitter4j.api.TweetsResourcesAsync,Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,updateStatus(java.lang.String status),Updates the authenticating user's status.,void
twitter4j.Twitter,N/A,directMessages(),N/A,DirectMessagesResources
twitter4j.Twitter,N/A,favorites(),N/A,FavoritesResources
twitter4j.Twitter,N/A,friendsFollowers(),N/A,FriendsFollowersResources
twitter4j.Twitter,N/A,help(),N/A,HelpResources
twitter4j.Twitter,N/A,list(),N/A,ListsResources
twitter4j.Twitter,N/A,placesGeo(),N/A,PlacesGeoResources
twitter4j.Twitter,N/A,savedSearches(),N/A,SavedSearchesResources
twitter4j.Twitter,N/A,search(),N/A,SearchResource
twitter4j.Twitter,N/A,spamReporting(),N/A,SpamReportingResource
twitter4j.Twitter,N/A,suggestedUsers(),N/A,SuggestedUsersResources
twitter4j.Twitter,N/A,timelines(),N/A,TimelinesResources
twitter4j.Twitter,N/A,trends(),N/A,TrendsResources
twitter4j.Twitter,N/A,tweets(),N/A,TweetsResources
twitter4j.Twitter,N/A,users(),N/A,UsersResources
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,checkedUserListMembership(User users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,checkedUserListSubscription(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdBlock(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdFavorite(Status status),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdFriendship(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdMute(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdUserListMember(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,createdUserListMembers(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedBlock(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedFavorite(Status status),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedFriendship(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedMute(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedStatus(Status destroyedStatus),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,destroyedUserListMember(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotAccountSettings(AccountSettings settings),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotAPIConfiguration(TwitterAPIConfiguration conf),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotAvailableTrends(ResponseList<Location> locations),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotBlockIDs(IDs blockingUsersIDs),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotBlocksList(ResponseList<User> blockingUsers),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotClosestTrends(ResponseList<Location> locations),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotContributees(ResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotContributors(ResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotDirectMessages(ResponseList<DirectMessage> messages),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotFavorites(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotFollowersIDs(IDs ids),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotFollowersList(PagableResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotFriendsIDs(IDs ids),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotFriendsList(PagableResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotGeoDetails(Place place),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotHomeTimeline(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotIncomingFriendships(IDs ids),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotLanguages(ResponseList<HelpResources.Language> languages),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotMemberSuggestions(ResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotMentions(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotMuteIDs(IDs blockingUsersIDs),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotMutesList(ResponseList<User> blockingUsers),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotOAuth2Token(OAuth2Token token),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotOAuthAccessToken(AccessToken token),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotOAuthRequestToken(RequestToken token),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotOEmbed(OEmbed oembed),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotOutgoingFriendships(IDs ids),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotPlaceTrends(Trends trends),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotPrivacyPolicy(java.lang.String privacyPolicy),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,"gotRateLimitStatus(java.util.Map<java.lang.String,RateLimitStatus> rateLimitStatus)",N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotRetweets(ResponseList<Status> retweets),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotRetweetsOfMe(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotReverseGeoCode(ResponseList<Place> places),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotSavedSearches(ResponseList<SavedSearch> savedSearches),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotSentDirectMessages(ResponseList<DirectMessage> messages),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotShowFriendship(Relationship relationship),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotShowStatus(Status status),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotShowUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotSimilarPlaces(ResponseList<Place> places),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotSuggestedUserCategories(ResponseList<Category> category),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotTermsOfService(java.lang.String tof),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserDetail(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserListMembers(PagableResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserListMemberships(PagableResponseList<UserList> userLists),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserLists(ResponseList<UserList> userLists),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserListStatuses(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserListSubscribers(PagableResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserListSubscriptions(PagableResponseList<UserList> userLists),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserSuggestions(ResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,gotUserTimeline(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,lookedup(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,lookedUpFriendships(ResponseList<Friendship> friendships),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,lookedupUsers(ResponseList<User> users),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,"onException(TwitterException te,           TwitterMethod method)",N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,removedProfileBanner(),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,reportedSpam(User reportedSpammer),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,retweetedStatus(Status retweetedStatus),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,searched(QueryResult queryResult),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,searchedPlaces(ResponseList<Place> places),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,searchedUser(ResponseList<User> userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,sentDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,subscribedUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,unsubscribedUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedAccountSettings(AccountSettings settings),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedFriendship(Relationship relationship),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedProfile(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedProfileBackgroundImage(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedProfileBanner(),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedProfileColors(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedProfileImage(User user),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedStatus(Status status),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,updatedUserList(UserList userList),N/A,void
twitter4j.TwitterAdapter,A handy adapter of TwitterListener.,verifiedCredentials(User user),N/A,void
twitter4j.TwitterAPIConfiguration,N/A,getCharactersReservedPerMedia(),N/A,int
twitter4j.TwitterAPIConfiguration,N/A,getDmTextCharacterLimit(),N/A,int
twitter4j.TwitterAPIConfiguration,N/A,getMaxMediaPerUpload(),N/A,int
twitter4j.TwitterAPIConfiguration,N/A,getNonUsernamePaths(),N/A,java.lang.String[]
twitter4j.TwitterAPIConfiguration,N/A,getPhotoSizeLimit(),N/A,int
twitter4j.TwitterAPIConfiguration,N/A,getPhotoSizes(),N/A,"java.util.Map<java.lang.Integer,MediaEntity.Size>"
twitter4j.TwitterAPIConfiguration,N/A,getShortURLLength(),N/A,int
twitter4j.TwitterAPIConfiguration,N/A,getShortURLLengthHttps(),N/A,int
twitter4j.TwitterAPIMonitor,"Singleton instance of all Twitter API monitoring. Handles URL parsing and ""wire off"" logic. We could avoid using a singleton here if Twitter objects were instantiated from a factory.",getInstance(),N/A,static TwitterAPIMonitor
twitter4j.TwitterAPIMonitor,"Singleton instance of all Twitter API monitoring. Handles URL parsing and ""wire off"" logic. We could avoid using a singleton here if Twitter objects were instantiated from a factory.",getStatistics(),N/A,APIStatisticsMBean
twitter4j.TwitterAPIMonitor,"Singleton instance of all Twitter API monitoring. Handles URL parsing and ""wire off"" logic. We could avoid using a singleton here if Twitter objects were instantiated from a factory.","methodCalled(java.lang.String twitterUrl,            long elapsedTime,            boolean success)",N/A,(package private) void
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,addRateLimitStatusListener(RateLimitStatusListener listener),Registers a RateLimitStatusListener for account associated rate limits,void
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,getAuthorization(),"Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization",Authorization
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,getConfiguration(),Returns the configuration associated with this instance,Configuration
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,getId(),"Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth.",long
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,getScreenName(),"Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name.",java.lang.String
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,onRateLimitReached(Consumer<RateLimitStatusEvent> action),Registers a RateLimitStatusListener for account associated rate limits,void
twitter4j.TwitterBase,Registers a RateLimitStatusListener for account associated rate limits,onRateLimitStatus(Consumer<RateLimitStatusEvent> action),Registers a lambda action for account associated rate limits,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,addRateLimitStatusListener(RateLimitStatusListener listener),Registers a RateLimitStatusListener for account associated rate limits,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,ensureAuthorizationEnabled(),N/A,(package private) void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,ensureOAuthEnabled(),N/A,(package private) void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,equals(java.lang.Object o),N/A,boolean
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,fillInIDAndScreenName(),N/A,(package private) User
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,fillInIDAndScreenName(HttpParameter[] parameters),N/A,(package private) User
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getAuthorization(),"Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization",Authorization
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getConfiguration(),Returns the configuration associated with this instance,Configuration
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getId(),"Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth.",long
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuth(),N/A,private OAuthSupport
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuth2(),N/A,private OAuth2Support
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuth2Token(),Obtains an OAuth 2 Bearer token.,OAuth2Token
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuthAccessToken(),"Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token.",AccessToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuthAccessToken(RequestToken requestToken),Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,"getOAuthAccessToken(RequestToken requestToken,                   java.lang.String oauthVerifier)",Retrieves an access token associated with the supplied request token and sets userId.,AccessToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuthAccessToken(java.lang.String oauthVerifier),Retrieves an access token.,AccessToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,"getOAuthAccessToken(java.lang.String screenName,                   java.lang.String password)","Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com — all other applications will receive an HTTP 401 error.",AccessToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuthRequestToken(),Retrieves a request token,RequestToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getOAuthRequestToken(java.lang.String callbackUrl),Retrieves a request token,RequestToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,"getOAuthRequestToken(java.lang.String callbackUrl,                    java.lang.String xAuthAccessType)",Retrieves a request token,RequestToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,"getOAuthRequestToken(java.lang.String callbackUrl,                    java.lang.String xAuthAccessType,                    java.lang.String xAuthMode)",Retrieves a request token,RequestToken
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,getScreenName(),"Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name.",java.lang.String
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,hashCode(),N/A,int
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,httpResponseReceived(HttpResponseEvent event),N/A,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,init(),N/A,private void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,invalidateOAuth2Token(),Revokes an issued OAuth 2 Bearer Token.,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,onRateLimitReached(Consumer<RateLimitStatusEvent> action),Registers a RateLimitStatusListener for account associated rate limits,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,onRateLimitStatus(Consumer<RateLimitStatusEvent> action),Registers a lambda action for account associated rate limits,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,readObject(java.io.ObjectInputStream stream),N/A,private void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,setFactory(),N/A,(package private) void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,setOAuth2Token(OAuth2Token oauth2Token),Sets the OAuth 2 Bearer token.,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,setOAuthAccessToken(AccessToken accessToken),Sets the access token,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,"setOAuthConsumer(java.lang.String consumerKey,                java.lang.String consumerSecret)",sets the OAuth consumer key and consumer secret,void
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,toString(),N/A,java.lang.String
twitter4j.TwitterBaseImpl,Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth.,writeObject(java.io.ObjectOutputStream out),N/A,private void
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",decode(java.lang.String str),N/A,private void
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",equals(java.lang.Object o),N/A,boolean
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",exceededRateLimitation(),Tests if the exception is caused by rate limitation exceed,boolean
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getAccessLevel(),N/A,int
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getCause(int statusCode),N/A,private static java.lang.String
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getErrorCode(),N/A,int
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getErrorMessage(),Returns error message from the API if available.,java.lang.String
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getExceptionCode(),Returns a hexadecimal representation of this exception stacktrace. An exception code is a hexadecimal representation of the stacktrace which enables it easier to Google known issues. Format : XXXXXXXX:YYYYYYYY[ XX:YY] Where XX is a hash code of stacktrace without line number YY is a hash code of stacktrace excluding line number [-XX:YY] will appear when this instance a root cause,java.lang.String
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getExceptionDiagnosis(),N/A,private ExceptionDiagnosis
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getMessage(),N/A,java.lang.String
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getRateLimitStatus(),Returns the current rate limit status if available.,RateLimitStatus
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getResponseHeader(java.lang.String name),N/A,java.lang.String
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getRetryAfter(),"Returns int value of ""Retry-After"" response header (Search API) or seconds_until_reset (REST API).",int
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",getStatusCode(),N/A,int
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",hashCode(),N/A,int
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",isCausedByNetworkIssue(),Tests if the exception is caused by network issue,boolean
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",isErrorMessageAvailable(),Tests if error message from the API is available,boolean
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",resourceNotFound(),Tests if the exception is caused by non-existing resource,boolean
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",setNested(),N/A,(package private) void
twitter4j.TwitterException,"An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.",toString(),N/A,java.lang.String
twitter4j.TwitterFactory,A factory class for Twitter. An instance of this class is completely thread safe and can be re-used and used concurrently.,getInstance(),Returns a instance associated with the configuration bound to this factory.,Twitter
twitter4j.TwitterFactory,A factory class for Twitter. An instance of this class is completely thread safe and can be re-used and used concurrently.,getInstance(AccessToken accessToken),"Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance.",Twitter
twitter4j.TwitterFactory,A factory class for Twitter. An instance of this class is completely thread safe and can be re-used and used concurrently.,getInstance(Authorization auth),N/A,Twitter
twitter4j.TwitterFactory,A factory class for Twitter. An instance of this class is completely thread safe and can be re-used and used concurrently.,getSingleton(),Returns default singleton Twitter instance.,static Twitter
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"addParameterToList(java.util.List<HttpParameter> colors,                  java.lang.String paramName,                  java.lang.String color)",N/A,private void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,checkFileValidity(java.io.File image),"Check the existence, and the type of the specified file.",private void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createBlock(long userId),Blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createBlock(java.lang.String screenName),Blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createFavorite(long id),Favorites the status specified in the ID parameter as the authenticating user.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createFriendship(long userId),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createFriendship(long userId,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createFriendship(java.lang.String screenName),Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createFriendship(java.lang.String screenName,                boolean follow)",Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createMessageCreateJsonObject(long recipientId,                             java.lang.String text,                             long mediaId)",N/A,private static JSONObject
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createMute(long userId),Mutes the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createMute(java.lang.String screenName),Mutes the user specified in the screen name parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createSavedSearch(java.lang.String query),Creates a saved search for the authenticated user.,SavedSearch
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserList(java.lang.String listName,              boolean isPublicList,              java.lang.String description)",Creates a new list for the authenticated user.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMember(long listId,                    long userId)",Adds a member to a list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMember(long ownerId,                    java.lang.String slug,                    long userId)",Adds a member to a list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMember(java.lang.String ownerScreenName,                    java.lang.String slug,                    long userId)",Adds a member to a list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(long listId,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(long listId,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(long ownerId,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(java.lang.String ownerScreenName,                     java.lang.String slug,                     long... userIds)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListMembers(java.lang.String ownerScreenName,                     java.lang.String slug,                     java.lang.String... screenNames)","Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.",UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,createUserListSubscription(long listId),Make the authenticated user follow the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListSubscription(long ownerId,                          java.lang.String slug)",Make the authenticated user follow the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"createUserListSubscription(java.lang.String ownerScreenName,                          java.lang.String slug)",Make the authenticated user follow the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyBlock(long userId),Un-blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyBlock(java.lang.String screenName),Un-blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyDirectMessage(long id),Deletes the direct message specified in the required ID parameter.,DirectMessage
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyFavorite(long id),Un-favorites the status specified in the ID parameter as the authenticating user.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyFriendship(long userId),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyFriendship(java.lang.String screenName),Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyMute(long userId),Un-mutes the user specified in the ID parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyMute(java.lang.String screenName),Un-mutes the user specified in the screen name parameter as the authenticating user.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroySavedSearch(long id),Destroys a saved search for the authenticated user.,SavedSearch
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyStatus(long statusId),Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyUserList(long listId),Deletes the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserList(long ownerId,               java.lang.String slug)",Deletes the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserList(java.lang.String ownerScreenName,               java.lang.String slug)",Deletes the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMember(long listId,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMember(long listId,                     java.lang.String screenName)",Removes the specified members from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMember(long ownerId,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMember(java.lang.String ownerScreenName,                     java.lang.String slug,                     long userId)",Removes the specified member from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMembers(long listId,                      long[] userIds)",Removes the specified members from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMembers(long listId,                      java.lang.String[] screenNames)",Removes the specified members from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListMembers(java.lang.String ownerScreenName,                      java.lang.String slug,                      java.lang.String[] screenNames)",Removes the specified members from the list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,destroyUserListSubscription(long listId),Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListSubscription(long ownerId,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"destroyUserListSubscription(java.lang.String ownerScreenName,                           java.lang.String slug)",Unsubscribes the authenticated user form the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,directMessages(),N/A,DirectMessagesResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,favorites(),N/A,FavoritesResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,friendsFollowers(),N/A,FriendsFollowersResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,get(java.lang.String url),N/A,private HttpResponse
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"get(java.lang.String url,   HttpParameter... params)",N/A,private HttpResponse
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getAccountSettings(),"Returns the current trend, geo, language, timezone and sleep time information for the authenticating user.",AccountSettings
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getAPIConfiguration(),"Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day.",TwitterAPIConfiguration
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getAvailableTrends(),Returns the locations that Twitter has trending topic information for.,ResponseList<Location>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getBlocksIDs(),Returns an array of numeric user ids the authenticating user is blocking.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getBlocksIDs(long cursor),Returns an array of numeric user ids the authenticating user is blocking.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getBlocksList(),Returns a list of user objects that the authenticating user is blocking.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getBlocksList(long cursor),Returns a list of user objects that the authenticating user is blocking.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getClosestTrends(GeoLocation location),"Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of ""locations"" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID.",ResponseList<Location>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getContributees(long userId),Returns an array of users that the specified user can contribute to.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getContributees(java.lang.String screenName),Returns an array of users that the specified user can contribute to.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getContributors(long userId),Returns an array of users who can contribute to the specified account.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getContributors(java.lang.String screenName),Returns an array of users who can contribute to the specified account.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getDirectMessages(),Returns a list of the direct messages sent to the authenticating user.,ResponseList<DirectMessage>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getDirectMessages(int count),Returns all Direct Message events (both sent and received) within the last 30 days.,DirectMessageList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getDirectMessages(int count,                 java.lang.String cursor)",Returns all Direct Message events (both sent and received) within the last 30 days.,DirectMessageList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getDirectMessages(Paging paging),Returns a list of the direct messages sent to the authenticating user.,ResponseList<DirectMessage>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getDMImageAsStream(java.lang.String url),Returns a stream of the image included in direct messages.,java.io.InputStream
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFavorites(),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFavorites(long userId),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFavorites(long userId,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFavorites(Paging paging),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFavorites(java.lang.String screenName),Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFavorites(java.lang.String screenName,            Paging paging)",Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFollowersIDs(long cursor),Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersIDs(long userId,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersIDs(long userId,               long cursor,               int count)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersIDs(java.lang.String screenName,               long cursor)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersIDs(java.lang.String screenName,               long cursor,               int count)",Returns an array of numeric IDs for every user the specified user is followed by.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(long userId,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(long userId,                long cursor,                int count)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(long userId,                long cursor,                int count,                boolean skipStatus,                boolean includeUserEntities)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(java.lang.String screenName,                long cursor)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(java.lang.String screenName,                long cursor,                int count)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFollowersList(java.lang.String screenName,                long cursor,                int count,                boolean skipStatus,                boolean includeUserEntities)","Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getFriendsIDs(long cursor),Returns an array of numeric IDs for every user the authenticating user is following.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsIDs(long userId,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsIDs(long userId,             long cursor,             int count)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsIDs(java.lang.String screenName,             long cursor)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsIDs(java.lang.String screenName,             long cursor,             int count)",Returns an array of numeric IDs for every user the specified user is following.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(long userId,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(long userId,              long cursor,              int count)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(long userId,              long cursor,              int count,              boolean skipStatus,              boolean includeUserEntities)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(java.lang.String screenName,              long cursor)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(java.lang.String screenName,              long cursor,              int count)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getFriendsList(java.lang.String screenName,              long cursor,              int count,              boolean skipStatus,              boolean includeUserEntities)","Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their ""friends""). At this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues.",PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getGeoDetails(java.lang.String placeId),Find out more details of a place that was returned from the PlacesGeoResources.reverseGeoCode(twitter4j.GeoQuery) method.,Place
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getHomeTimeline(),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getHomeTimeline(Paging paging),"Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends.",ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getIncomingFriendships(long cursor),Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getLanguages(),Returns the list of languages supported by Twitter along with their ISO 639-1 code.,ResponseList<HelpResources.Language>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getMemberSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getMentionsTimeline(),Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getMentionsTimeline(Paging paging),Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getMutesIDs(long cursor),Returns an array of numeric user ids the authenticating user is muting.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getMutesList(long cursor),Returns a list of user objects that the authenticating user is muting.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getNoRetweetsFriendships(),Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getOEmbed(OEmbedRequest req),Returns information allowing the creation of an embedded representation of a Tweet on third party sites.,OEmbed
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getOutgoingFriendships(long cursor),Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getPlaceTrends(int woeid),"Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of ""trend"" objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes.",Trends
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getPrivacyPolicy(),Returns Twitter's Privacy Policy.,java.lang.String
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getRateLimitStatus(),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.","java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getRateLimitStatus(java.lang.String... resources),"Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a ""resource family"" which is indicated in its method documentation.","java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getRetweeterIds(long statusId,               int count,               long cursor)",Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getRetweeterIds(long statusId,               long cursor)",Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter.,IDs
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getRetweets(long statusId),Returns up to 100 of the first retweets of a given tweet.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getRetweetsOfMe(),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getRetweetsOfMe(Paging paging),Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getSavedSearches(),Returns the authenticated user's saved search queries.,ResponseList<SavedSearch>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getSentDirectMessages(),Returns a list of the direct messages sent by the authenticating user.,ResponseList<DirectMessage>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getSentDirectMessages(Paging paging),Returns a list of the direct messages sent by the authenticating user.,ResponseList<DirectMessage>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getSimilarPlaces(GeoLocation location,                java.lang.String name,                java.lang.String containedWithin,                java.lang.String streetAddress)",Locates places near the given coordinates which are similar in name.,ResponseList<Place>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getSuggestedUserCategories(),Access to Twitter's suggested user list.,ResponseList<Category>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getTermsOfService(),Returns Twitter's' Terms of Service.,java.lang.String
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long listId,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long listId,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long listId,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(long ownerId,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  int count,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  int count,                  long cursor,                  boolean skipStatus)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMembers(java.lang.String ownerScreenName,                  java.lang.String slug,                  long cursor)",Returns the members of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(int count,                      long cursor)",List the lists the authenticating user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserListMemberships(long cursor),List the lists the authenticating user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(long listMemberId,                      int count,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(long listMemberId,                      int count,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(long listMemberId,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(long listMemberId,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(java.lang.String listMemberScreenName,                      int count,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(java.lang.String listMemberScreenName,                      int count,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListMemberships(java.lang.String listMemberScreenName,                      long cursor,                      boolean filterToOwnedLists)",List the lists the specified user has been added to.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserLists(long listOwnerUserId),List the lists of the specified user.,ResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserLists(long listOwnerUserId,            boolean reverse)",List the lists of the specified user.,ResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserLists(java.lang.String listOwnerScreenName),List the lists of the specified user.,ResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserLists(java.lang.String listOwnerScreenName,            boolean reverse)",List the lists of the specified user.,ResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListsOwnerships(long listOwnerId,                      int count,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListsOwnerships(long listOwnerId,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListsOwnerships(java.lang.String listOwnerScreenName,                      int count,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListsOwnerships(java.lang.String listOwnerScreenName,                      long cursor)",Returns the lists owned by the specified Twitter user.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListStatuses(long listId,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListStatuses(long ownerId,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListStatuses(java.lang.String ownerScreenName,                   java.lang.String slug,                   Paging paging)",Show tweet timeline for members of the specified list.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long listId,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long listId,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long listId,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(long ownerId,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      int count,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      int count,                      long cursor,                      boolean skipStatus)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscribers(java.lang.String ownerScreenName,                      java.lang.String slug,                      long cursor)",Returns the subscribers of the specified list.,PagableResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscriptions(long listSubscriberId,                        int count,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscriptions(long listSubscriberId,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscriptions(java.lang.String listSubscriberScreenName,                        int count,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserListSubscriptions(java.lang.String listSubscriberScreenName,                        long cursor)",List the lists the specified user follows.,PagableResponseList<UserList>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserSuggestions(java.lang.String categorySlug),Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserTimeline(),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserTimeline(long userId),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserTimeline(long userId,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserTimeline(Paging paging),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,getUserTimeline(java.lang.String screenName),Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"getUserTimeline(java.lang.String screenName,               Paging paging)",Returns the 20 most recent statuses posted from the authenticating user.,ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,help(),N/A,HelpResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,isOk(HttpResponse response),N/A,private boolean
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,list(),N/A,ListsResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,lookup(long... ids),"Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter.",ResponseList<Status>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,lookupFriendships(long... ids),Returns the relationship of the authenticating user to the specified users.,ResponseList<Friendship>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,lookupFriendships(java.lang.String... screenNames),Returns the relationship of the authenticating user to the specified users.,ResponseList<Friendship>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,lookupUsers(long... ids),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,lookupUsers(java.lang.String... screenNames),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,mergeImplicitParams(HttpParameter... params),N/A,private HttpParameter[]
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"mergeParameters(HttpParameter[] params1,               HttpParameter params2)",N/A,private HttpParameter[]
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"mergeParameters(HttpParameter[] params1,               HttpParameter[] params2)",N/A,private HttpParameter[]
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,placesGeo(),N/A,PlacesGeoResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,post(java.lang.String url),N/A,private HttpResponse
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"post(java.lang.String url,    HttpParameter... params)",N/A,private HttpResponse
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"post(java.lang.String url,    JSONObject json)",N/A,private HttpResponse
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,removeDMsNotSentByMe(DirectMessageList list),N/A,private DirectMessageList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,removeDMsNotSentToMe(DirectMessageList list),N/A,private DirectMessageList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,removeProfileBanner(),Removes the uploaded profile banner for the authenticating user.,void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,reportSpam(long userId),The user specified in the id is blocked by the authenticated user and reported as a spammer.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,reportSpam(java.lang.String screenName),The user specified in the id is blocked by the authenticated user and reported as a spammer.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,retweetStatus(long statusId),Retweets a tweet.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,reverseGeoCode(GeoQuery query),Search for places (cities and neighborhoods) that can be attached to a statuses/update.,ResponseList<Place>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,savedSearches(),N/A,SavedSearchesResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,search(),N/A,SearchResource
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,search(Query query),Returns tweets that match a specified query.,QueryResult
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,searchPlaces(GeoQuery query),Search for places that can be attached to a statuses/update.,ResponseList<Place>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"searchUsers(java.lang.String query,           int page)",Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API.,ResponseList<User>
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"sendDirectMessage(long recipientId,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"sendDirectMessage(long recipientId,                 java.lang.String text,                 long messageId)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"sendDirectMessage(java.lang.String screenName,                 java.lang.String text)",Sends a new direct message to the specified user from the authenticating user.,DirectMessage
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showDirectMessage(long id),Returns a single Direct Message event by the given id.,DirectMessage
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showFriendship(long sourceId,              long targetId)",Returns detailed information about the relationship between two users.,Relationship
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showFriendship(java.lang.String sourceScreenName,              java.lang.String targetScreenName)",Returns detailed information about the relationship between two users.,Relationship
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showSavedSearch(long id),Retrieve the data for a saved search owned by the authenticating user specified by the given id.,SavedSearch
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showStatus(long id),"Returns a single status, specified by the id parameter below.",Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showUser(long userId),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showUser(java.lang.String screenName),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,showUserList(long listId),Show the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserList(long ownerId,            java.lang.String slug)",Show the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserList(java.lang.String ownerScreenName,            java.lang.String slug)",Show the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListMembership(long listId,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListMembership(long ownerId,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListMembership(java.lang.String ownerScreenName,                      java.lang.String slug,                      long userId)",Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListSubscription(long listId,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListSubscription(long ownerId,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"showUserListSubscription(java.lang.String ownerScreenName,                        java.lang.String slug,                        long userId)",Check if the specified user is a subscriber of the specified list.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,spamReporting(),N/A,SpamReportingResource
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,suggestedUsers(),N/A,SuggestedUsersResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,timelines(),N/A,TimelinesResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,toString(),N/A,java.lang.String
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,trends(),N/A,TrendsResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,tweets(),N/A,TweetsResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,unRetweetStatus(long statusId),Untweets a retweeted status.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateAccountSettings(java.lang.Integer trend_locationWoeid,                     java.lang.Boolean sleep_timeEnabled,                     java.lang.String start_sleepTime,                     java.lang.String end_sleepTime,                     java.lang.String time_zone,                     java.lang.String lang)","Updates the current trend, geo, language, timezone and sleep time information for the authenticating user.",AccountSettings
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateAllowDmsFrom(java.lang.String allowDmsFrom),Updates the allowDmsFrom settings for the authenticating user.,AccountSettings
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateFriendship(long userId,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,Relationship
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateFriendship(java.lang.String screenName,                boolean enableDeviceNotification,                boolean retweets)",Allows you to enable or disable retweets and device notifications from the specified user.,Relationship
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateProfile(java.lang.String name,             java.lang.String url,             java.lang.String location,             java.lang.String description)","Sets values that users are able to set under the ""Account"" tab of their settings page.",User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateProfileBackgroundImage(java.io.File image,                            boolean tile)",Updates the authenticating user's profile background image.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateProfileBackgroundImage(java.io.InputStream image,                            boolean tile)",Updates the authenticating user's profile background image.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateProfileBanner(java.io.File image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateProfileBanner(java.io.InputStream image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateProfileColors(java.lang.String profileBackgroundColor,                   java.lang.String profileTextColor,                   java.lang.String profileLinkColor,                   java.lang.String profileSidebarFillColor,                   java.lang.String profileSidebarBorderColor)",Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateProfileImage(java.io.File image),Updates the authenticating user's profile image.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateProfileImage(java.io.InputStream image),Updates the authenticating user's profile image.,User
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateStatus(StatusUpdate status),Updates the authenticating user's status.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,updateStatus(java.lang.String status),Updates the authenticating user's status.,Status
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateUserList(long listId,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateUserList(long ownerId,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateUserList(java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription,              HttpParameter... params)",N/A,private UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"updateUserList(java.lang.String ownerScreenName,              java.lang.String slug,              java.lang.String newListName,              boolean isPublicList,              java.lang.String newDescription)",Updates the specified list.,UserList
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,uploadMedia(java.io.File image),Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json,UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"uploadMedia(java.lang.String fileName,           java.io.InputStream image)",Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json,UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"uploadMediaChunked(java.lang.String fileName,                  java.io.InputStream media)",Uploads media using chunked approach to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate).,UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,"uploadMediaChunkedAppend(java.lang.String fileName,                        java.io.InputStream media,                        int segmentIndex,                        long mediaId)",N/A,private void
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,uploadMediaChunkedFinalize(long mediaId),N/A,private UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,uploadMediaChunkedFinalize0(long mediaId),N/A,private UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,uploadMediaChunkedInit(long size),N/A,private UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,uploadMediaChunkedStatus(long mediaId),N/A,private UploadedMedia
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,users(),N/A,UsersResources
twitter4j.TwitterImpl,A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose.,verifyCredentials(),Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not.,User
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,checkedUserListMembership(User users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,checkedUserListSubscription(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdBlock(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdFavorite(Status status),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdFriendship(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdMute(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdUserListMember(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,createdUserListMembers(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedBlock(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedFavorite(Status status),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedFriendship(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedMute(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedStatus(Status destroyedStatus),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,destroyedUserListMember(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotAccountSettings(AccountSettings settings),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotAPIConfiguration(TwitterAPIConfiguration conf),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotAvailableTrends(ResponseList<Location> locations),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotBlockIDs(IDs blockingUsersIDs),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotBlocksList(ResponseList<User> blockingUsers),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotClosestTrends(ResponseList<Location> locations),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotContributees(ResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotContributors(ResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotDirectMessages(ResponseList<DirectMessage> messages),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotFavorites(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotFollowersIDs(IDs ids),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotFollowersList(PagableResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotFriendsIDs(IDs ids),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotFriendsList(PagableResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotGeoDetails(Place place),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotHomeTimeline(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotIncomingFriendships(IDs ids),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotLanguages(ResponseList<HelpResources.Language> languages),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotMemberSuggestions(ResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotMentions(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotMuteIDs(IDs blockingUsersIDs),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotMutesList(ResponseList<User> blockingUsers),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotOAuth2Token(OAuth2Token token),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotOAuthAccessToken(AccessToken token),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotOAuthRequestToken(RequestToken token),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotOEmbed(OEmbed oembed),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotOutgoingFriendships(IDs ids),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotPlaceTrends(Trends trends),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotPrivacyPolicy(java.lang.String privacyPolicy),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,"gotRateLimitStatus(java.util.Map<java.lang.String,RateLimitStatus> rateLimitStatus)",N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotRetweets(ResponseList<Status> retweets),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotRetweetsOfMe(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotReverseGeoCode(ResponseList<Place> places),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotSavedSearch(SavedSearch savedSearch),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotSavedSearches(ResponseList<SavedSearch> savedSearches),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotSentDirectMessages(ResponseList<DirectMessage> messages),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotShowFriendship(Relationship relationship),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotShowStatus(Status status),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotShowUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotSimilarPlaces(ResponseList<Place> places),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotSuggestedUserCategories(ResponseList<Category> category),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotTermsOfService(java.lang.String tof),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserDetail(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserListMembers(PagableResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserListMemberships(PagableResponseList<UserList> userLists),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserLists(ResponseList<UserList> userLists),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserListStatuses(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserListSubscribers(PagableResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserListSubscriptions(PagableResponseList<UserList> userLists),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserSuggestions(ResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,gotUserTimeline(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,lookedup(ResponseList<Status> statuses),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,lookedUpFriendships(ResponseList<Friendship> friendships),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,lookedupUsers(ResponseList<User> users),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,"onException(TwitterException te,           TwitterMethod method)",N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,removedProfileBanner(),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,reportedSpam(User reportedSpammer),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,retweetedStatus(Status retweetedStatus),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,searched(QueryResult queryResult),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,searchedPlaces(ResponseList<Place> places),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,searchedUser(ResponseList<User> userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,sentDirectMessage(DirectMessage message),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,subscribedUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,unsubscribedUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedAccountSettings(AccountSettings settings),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedFriendship(Relationship relationship),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedProfile(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedProfileBackgroundImage(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedProfileBanner(),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedProfileColors(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedProfileImage(User user),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedStatus(Status status),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,updatedUserList(UserList userList),N/A,void
twitter4j.TwitterListener,A listener for receiving asynchronous responses from Twitter Async APIs.,verifiedCredentials(User user),N/A,void
twitter4j.TwitterMethod,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static TwitterMethod
twitter4j.TwitterMethod,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static TwitterMethod[]
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,clearThreadLocalMap(),clear raw JSON forms associated with the current thread.,(package private) static void
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createAccountTotals(java.lang.String rawJSON),Constructs an AccountTotals object from rawJSON string.,static AccountTotals
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createCategory(java.lang.String rawJSON),Constructs a Category object from rawJSON string.,static Category
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createDirectMessage(java.lang.String rawJSON),Constructs a DirectMessage object from rawJSON string.,static DirectMessage
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createIDs(java.lang.String rawJSON),Constructs a IDs object from rawJSON string.,static IDs
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createLocation(java.lang.String rawJSON),Constructs a Location object from rawJSON string.,static Location
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createObject(java.lang.String rawJSON),Construct an object from rawJSON string.,static java.lang.Object
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createOEmbed(java.lang.String rawJSON),Constructs an OEmbed object from rawJSON string.,static OEmbed
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createPlace(java.lang.String rawJSON),Constructs a Place object from rawJSON string.,static Place
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createRateLimitStatus(java.lang.String rawJSON),Constructs a RateLimitStatus object from rawJSON string.,"static java.util.Map<java.lang.String,RateLimitStatus>"
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createRelationship(java.lang.String rawJSON),Constructs a Relationship object from rawJSON string.,static Relationship
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createSavedSearch(java.lang.String rawJSON),Constructs a SavedSearch object from rawJSON string.,static SavedSearch
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createStatus(java.lang.String rawJSON),Constructs a Status object from rawJSON string.,static Status
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createTrend(java.lang.String rawJSON),Constructs a Trend object from rawJSON string.,static Trend
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createTrends(java.lang.String rawJSON),Constructs a Trends object from rawJSON string.,static Trends
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createUser(java.lang.String rawJSON),Constructs a User object from rawJSON string.,static User
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,createUserList(java.lang.String rawJSON),Constructs a UserList object from rawJSON string.,static UserList
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,getRawJSON(java.lang.Object obj),Returns a raw JSON form of the provided object. Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call,static java.lang.String
twitter4j.TwitterObjectFactory,clear raw JSON forms associated with the current thread.,"registerJSONObject(T key,                  java.lang.Object json)",associate a raw JSON form to the current thread,(package private) static <T> T
twitter4j.TwitterResponse,Super interface of Twitter Response data interfaces which indicates that rate limit status is available.,getAccessLevel(),N/A,int
twitter4j.TwitterResponse,Super interface of Twitter Response data interfaces which indicates that rate limit status is available.,getRateLimitStatus(),Returns the current rate limit status if available.,RateLimitStatus
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,addConnectionLifeCycleListener(ConnectionLifeCycleListener listener),Adds a ConnectionLifeCycleListener,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,addListener(StreamListener listener),N/A,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,cleanUp(),shutdown internal stream consuming thread,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,clearListeners(),clear status listeners,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,filter(FilterQuery query),Start consuming public statuses that match one or more filter predicates.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,filter(java.lang.String... track),Start consuming public statuses that match the filter predicate.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,firehose(int count),Starts listening on all public statuses.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,links(int count),Starts listening on all public statuses containing links.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,onException(Consumer<java.lang.Exception> action),N/A,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,onStatus(Consumer<Status> action),N/A,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,removeListener(StreamListener listener),N/A,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,"replaceListener(StreamListener toBeRemoved,               StreamListener toBeAdded)",replace existing listener,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,retweet(),Starts listening on all retweets.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,sample(),Starts listening on random sample of all public statuses.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,sample(java.lang.String language),Starts listening on random sample of all public statuses.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,shutdown(),Shuts down internal dispatcher thread shared by all TwitterStream instances.,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,"site(boolean withFollowings,    long... follow)",Deprecated. Since Twitter4J 4.0.7,StreamController
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,user(),Deprecated. Since Twitter4J 4.0.7,TwitterStream
twitter4j.TwitterStream,Adds a ConnectionLifeCycleListener,user(java.lang.String... track),Deprecated. Since Twitter4J 4.0.7,TwitterStream
twitter4j.TwitterStreamFactory,A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getInstance(),Returns a instance associated with the configuration bound to this factory.,TwitterStream
twitter4j.TwitterStreamFactory,A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getInstance(AccessToken accessToken),"Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties.",TwitterStream
twitter4j.TwitterStreamFactory,A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getInstance(Authorization auth),Returns a instance.,TwitterStream
twitter4j.TwitterStreamFactory,A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,"getInstance(Configuration conf,           Authorization auth)",N/A,private TwitterStream
twitter4j.TwitterStreamFactory,A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getSingleton(),Returns default singleton TwitterStream instance.,static TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,addConnectionLifeCycleListener(ConnectionLifeCycleListener listener),Adds a ConnectionLifeCycleListener,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,addListener(StreamListener listener),N/A,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,cleanUp(),shutdown internal stream consuming thread,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,clearListeners(),clear status listeners,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,ensureSiteStreamsListenerIsSet(),N/A,private void
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,ensureStatusStreamListenerIsSet(),check if any listener is set.,private void
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,equals(java.lang.Object o),N/A,boolean
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,filter(FilterQuery query),Start consuming public statuses that match one or more filter predicates.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,filter(java.lang.String... track),Start consuming public statuses that match the filter predicate.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,firehose(int count),Starts listening on all public statuses.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,"getCountStream(java.lang.String relativeUrl,              int count)",N/A,private StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getDispatcher(),N/A,private Dispatcher
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getFilterStream(FilterQuery query),Returns public statuses that match one or more filter predicates.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getFirehoseStream(int count),Returns a status stream of all public statuses.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getLinksStream(int count),Returns a status stream of all public statuses containing links.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getRawStreamListeners(),N/A,private RawStreamListener[]
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getRetweetStream(),Returns a stream of all retweets.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getSampleStream(),Returns a stream of random sample of all public statuses.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getSampleStream(java.lang.String language),Returns a stream of random sample of all public statuses.,(package private) StatusStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,"getSiteStream(boolean withFollowings,             long[] follow)",N/A,(package private) java.io.InputStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getSiteStreamsListeners(),N/A,private SiteStreamsListener[]
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getStatusListeners(),N/A,private StatusListener[]
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,getUserStream(java.lang.String[] track),User Streams provides real-time updates of all data needed to update a desktop application display.,(package private) UserStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,hashCode(),N/A,int
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,links(int count),Starts listening on all public statuses containing links.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,onException(Consumer<java.lang.Exception> action),N/A,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,onStatus(Consumer<Status> action),N/A,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,removeListener(StreamListener listener),N/A,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,"replaceListener(StreamListener toBeRemoved,               StreamListener toBeAdded)",replace existing listener,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,retweet(),Starts listening on all retweets.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,sample(),Starts listening on random sample of all public statuses.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,sample(java.lang.String language),Starts listening on random sample of all public statuses.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,shutdown(),Shuts down internal dispatcher thread shared by all TwitterStream instances.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,"site(boolean withFollowings,    long[] follow)","Site Streams, a new feature on the Streaming API, is now available for beta testing.",StreamController
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,startHandler(TwitterStreamImpl.TwitterStreamConsumer handler),N/A,private void
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,toString(),N/A,java.lang.String
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,updateListeners(),N/A,private void
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,user(),User Streams provides real-time updates of all data needed to update a desktop application display.,TwitterStream
twitter4j.TwitterStreamImpl,A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds.,user(java.lang.String[] track),User Streams provides real-time updates of all data needed to update a desktop application display.,TwitterStream
twitter4j.TwitterStreamImpl.Mode,Returns the enum constant of this type with the specified name.,valueOf(java.lang.String name),Returns the enum constant of this type with the specified name.,static TwitterStreamImpl.Mode
twitter4j.TwitterStreamImpl.Mode,Returns the enum constant of this type with the specified name.,values(),"Returns an array containing the constants of this enum type, inthe order they are declared.",static TwitterStreamImpl.Mode[]
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",equals(java.lang.Object o),N/A,boolean
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getImageHeight(),N/A,int
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getImageType(),N/A,java.lang.String
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getImageWidth(),N/A,int
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getMediaId(),N/A,long
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getProcessingCheckAfterSecs(),N/A,int
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getProcessingState(),N/A,java.lang.String
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getProgressPercent(),N/A,int
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",getSize(),N/A,long
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",hashCode(),N/A,int
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",init(JSONObject json),N/A,private void
twitter4j.UploadedMedia,"Represents result of ""/1.1/media/upload.json""",toString(),N/A,java.lang.String
twitter4j.URLEntity,A data interface representing one single URL entity.,getDisplayURL(),Returns the display URL if mentioned URL is shorten.,java.lang.String
twitter4j.URLEntity,A data interface representing one single URL entity.,getEnd(),Returns the index of the end character of the URL mentioned in the tweet.,int
twitter4j.URLEntity,A data interface representing one single URL entity.,getExpandedURL(),Returns the expanded URL if mentioned URL is shorten.,java.lang.String
twitter4j.URLEntity,A data interface representing one single URL entity.,getStart(),Returns the index of the start character of the URL mentioned in the tweet.,int
twitter4j.URLEntity,A data interface representing one single URL entity.,getText(),Returns the URL mentioned in the tweet. This method implementation is to meet TweetEntity interface and the behavior is equivalent to getURL(),java.lang.String
twitter4j.URLEntity,A data interface representing one single URL entity.,getURL(),Returns the URL mentioned in the tweet.,java.lang.String
twitter4j.User,A data interface representing Basic user information element,get400x400ProfileImageURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,get400x400ProfileImageURLHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getBiggerProfileImageURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getBiggerProfileImageURLHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getCreatedAt(),N/A,java.util.Date
twitter4j.User,A data interface representing Basic user information element,getDescription(),Returns the description of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getDescriptionURLEntities(),Returns URL entities for user description.,URLEntity[]
twitter4j.User,A data interface representing Basic user information element,getEmail(),"Returns the email of the user, if the app is whitelisted by Twitter",java.lang.String
twitter4j.User,A data interface representing Basic user information element,getFavouritesCount(),N/A,int
twitter4j.User,A data interface representing Basic user information element,getFollowersCount(),Returns the number of followers,int
twitter4j.User,A data interface representing Basic user information element,getFriendsCount(),"Returns the number of users the user follows (AKA ""followings"")",int
twitter4j.User,A data interface representing Basic user information element,getId(),Returns the id of the user,long
twitter4j.User,A data interface representing Basic user information element,getLang(),Returns the preferred language of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getListedCount(),"Returns the number of public lists the user is listed on, or -1 if the count is unavailable.",int
twitter4j.User,A data interface representing Basic user information element,getLocation(),Returns the location of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getMiniProfileImageURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getMiniProfileImageURLHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getName(),Returns the name of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getOriginalProfileImageURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getOriginalProfileImageURLHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBackgroundColor(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBackgroundImageURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBackgroundImageUrlHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBanner1500x500URL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBanner300x100URL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBanner600x200URL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerIPadRetinaURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerIPadURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerMobileRetinaURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerMobileURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerRetinaURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileBannerURL(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileImageURL(),Returns the profile image url of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileImageURLHttps(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileLinkColor(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileSidebarBorderColor(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileSidebarFillColor(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getProfileTextColor(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getScreenName(),Returns the screen name of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getStatus(),Returns the current status of the user This can be null if the instance if from Status.getUser().,Status
twitter4j.User,A data interface representing Basic user information element,getStatusesCount(),N/A,int
twitter4j.User,A data interface representing Basic user information element,getTimeZone(),N/A,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getURL(),Returns the url of the user,java.lang.String
twitter4j.User,A data interface representing Basic user information element,getURLEntity(),Returns URL entity for user's URL.,URLEntity
twitter4j.User,A data interface representing Basic user information element,getUtcOffset(),N/A,int
twitter4j.User,A data interface representing Basic user information element,getWithheldInCountries(),Returns the list of country codes where the user is withheld,java.lang.String[]
twitter4j.User,A data interface representing Basic user information element,isContributorsEnabled(),Tests if the user is enabling contributors,boolean
twitter4j.User,A data interface representing Basic user information element,isDefaultProfile(),Tests if the user has not altered the theme or background,boolean
twitter4j.User,A data interface representing Basic user information element,isDefaultProfileImage(),Tests if the user has not uploaded their own avatar,boolean
twitter4j.User,A data interface representing Basic user information element,isFollowRequestSent(),"Returns true if the authenticating user has requested to follow this user, otherwise false.",boolean
twitter4j.User,A data interface representing Basic user information element,isGeoEnabled(),N/A,boolean
twitter4j.User,A data interface representing Basic user information element,isProfileBackgroundTiled(),N/A,boolean
twitter4j.User,A data interface representing Basic user information element,isProfileUseBackgroundImage(),N/A,boolean
twitter4j.User,A data interface representing Basic user information element,isProtected(),Test if the user status is protected,boolean
twitter4j.User,A data interface representing Basic user information element,isShowAllInlineMedia(),N/A,boolean
twitter4j.User,A data interface representing Basic user information element,isTranslator(),N/A,boolean
twitter4j.User,A data interface representing Basic user information element,isVerified(),N/A,boolean
twitter4j.UserList,A data interface representing Basic list information element,getCreatedAt(),N/A,java.util.Date
twitter4j.UserList,A data interface representing Basic list information element,getDescription(),Returns the description of the list,java.lang.String
twitter4j.UserList,A data interface representing Basic list information element,getFullName(),Returns the full name of the list,java.lang.String
twitter4j.UserList,A data interface representing Basic list information element,getId(),Returns the id of the list,long
twitter4j.UserList,A data interface representing Basic list information element,getMemberCount(),Returns the member count of the list,int
twitter4j.UserList,A data interface representing Basic list information element,getName(),Returns the name of the list,java.lang.String
twitter4j.UserList,A data interface representing Basic list information element,getSlug(),Returns the slug of the list,java.lang.String
twitter4j.UserList,A data interface representing Basic list information element,getSubscriberCount(),Returns the subscriber count of the list,int
twitter4j.UserList,A data interface representing Basic list information element,getURI(),Returns the uri of the list,java.net.URI
twitter4j.UserList,A data interface representing Basic list information element,getUser(),Returns the user of the list,User
twitter4j.UserList,A data interface representing Basic list information element,isFollowing(),Returns if the authenticated user is following the list,boolean
twitter4j.UserList,A data interface representing Basic list information element,isPublic(),tests if the list is public,boolean
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getEnd(),Returns the index of the end character of the user mention.,int
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getId(),Returns the user id mentioned in the status.,long
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getName(),Returns the name mentioned in the status.,java.lang.String
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getScreenName(),Returns the screen name mentioned in the status.,java.lang.String
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getStart(),Returns the index of the start character of the user mention.,int
twitter4j.UserMentionEntity,A data interface representing one single user mention entity.,getText(),Returns the screen name mentioned in the status.,java.lang.String
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,createBlock(long userId),Blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,createBlock(java.lang.String screenName),Blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,createMute(long userId),Mutes the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,createMute(java.lang.String screenName),Mutes the user specified in the screen name parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,destroyBlock(long userId),Un-blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,destroyBlock(java.lang.String screen_name),Un-blocks the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,destroyMute(long userId),Un-mutes the user specified in the ID parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,destroyMute(java.lang.String screenName),Un-mutes the user specified in the screen name parameter as the authenticating user.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getAccountSettings(),"Returns the current trend, geo, language, timezone and sleep time information for the authenticating user.",AccountSettings
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksIDs(),Returns an array of numeric user ids the authenticating user is blocking.,IDs
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksIDs(long cursor),Returns an array of numeric user ids the authenticating user is blocking.,IDs
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksList(),Returns a list of user objects that the authenticating user is blocking.,PagableResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksList(long cursor),Returns a list of user objects that the authenticating user is blocking.,PagableResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getContributees(long userId),Returns an array of users that the specified user can contribute to.,ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getContributees(java.lang.String screenName),Returns an array of users that the specified user can contribute to.,ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getContributors(long userId),Returns an array of users who can contribute to the specified account.,ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getContributors(java.lang.String screenName),Returns an array of users who can contribute to the specified account.,ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getMutesIDs(long cursor),Returns an array of numeric user ids the authenticating user is muting.,IDs
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,getMutesList(long cursor),Returns a list of user objects that the authenticating user is muting.,PagableResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,lookupUsers(long... ids),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,lookupUsers(java.lang.String... screenNames),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,removeProfileBanner(),Removes the uploaded profile banner for the authenticating user.,void
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"searchUsers(java.lang.String query,           int page)",Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API.,ResponseList<User>
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,showUser(long userId),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,showUser(java.lang.String screenName),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"updateAccountSettings(java.lang.Integer trendLocationWoeid,                     java.lang.Boolean sleepTimeEnabled,                     java.lang.String startSleepTime,                     java.lang.String endSleepTime,                     java.lang.String timeZone,                     java.lang.String lang)","Updates the current trend, geo, language, timezone and sleep time information for the authenticating user.",AccountSettings
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,updateAllowDmsFrom(java.lang.String allowDmsFrom),Updates the allowDmsFrom settings for the authenticating user.,AccountSettings
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfile(java.lang.String name,             java.lang.String url,             java.lang.String location,             java.lang.String description)","Sets values that users are able to set under the ""Account"" tab of their settings page.",User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileBackgroundImage(java.io.File image,                            boolean tile)",Deprecated. Since Twitter4J 4.0.7,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileBackgroundImage(java.io.InputStream image,                            boolean tile)",Updates the authenticating user's profile background image.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileBanner(java.io.File image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileBanner(java.io.InputStream image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileColors(java.lang.String profileBackgroundColor,                   java.lang.String profileTextColor,                   java.lang.String profileLinkColor,                   java.lang.String profileSidebarFillColor,                   java.lang.String profileSidebarBorderColor)",Deprecated. Since Twitter4J 4.0.5,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileImage(java.io.File image),Updates the authenticating user's profile image.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileImage(java.io.InputStream image),Updates the authenticating user's profile image.,User
twitter4j.api.UsersResources,Blocks the user specified in the ID parameter as the authenticating user.,verifyCredentials(),Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not.,User
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,createBlock(long userId),Blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,createBlock(java.lang.String screenName),Blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,createMute(long userId),Mutes the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,createMute(java.lang.String screenName),Mutes the user specified in the screen name parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,destroyBlock(long userId),Un-blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,destroyBlock(java.lang.String screenName),Un-blocks the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,destroyMute(long userId),Un-mutes the user specified in the ID parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,destroyMute(java.lang.String screenName),Un-mutes the user specified in the screen name parameter as the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getAccountSettings(),"Returns the current trend, geo and sleep time information for the authenticating user.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksIDs(),Returns an array of numeric user ids the authenticating user is blocking.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksIDs(long cursor),Returns an array of numeric user ids the authenticating user is blocking.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksList(),Returns a list of user objects that the authenticating user is blocking.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getBlocksList(long cursor),Returns a list of user objects that the authenticating user is blocking.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getContributees(long userId),Returns an array of users that the specified user can contribute to.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getContributees(java.lang.String screenName),Returns an array of users that the specified user can contribute to.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getContributors(long userId),Returns an array of users who can contribute to the specified account.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getContributors(java.lang.String screenName),Returns an array of users who can contribute to the specified account.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getMutesIDs(long cursor),Returns an array of numeric user ids the authenticating user is muting.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,getMutesList(long cursor),Returns a list of user objects that the authenticating user is muting.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,lookupUsers(long... ids),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,lookupUsers(java.lang.String... screenNames),"Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,removeProfileBanner(),Removes the uploaded profile banner for the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"searchUsers(java.lang.String query,           int page)",Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,showUser(long userId),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,showUser(java.lang.String screenName),"Returns extended information of a given user, specified by ID or screen name as per the required id parameter.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"updateAccountSettings(java.lang.Integer trendLocationWoeid,                     java.lang.Boolean sleepTimeEnabled,                     java.lang.String startSleepTime,                     java.lang.String endSleepTime,                     java.lang.String timeZone,                     java.lang.String lang)","Updates the current trend, geo, language, timezone and sleep time information for the authenticating user.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfile(java.lang.String name,             java.lang.String url,             java.lang.String location,             java.lang.String description)","Sets values that users are able to set under the ""Account"" tab of their settings page.",void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileBackgroundImage(java.io.File image,                            boolean tile)",Updates the authenticating user's profile background image.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileBackgroundImage(java.io.InputStream image,                            boolean tile)",Updates the authenticating user's profile background image.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileBanner(java.io.File image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileBanner(java.io.InputStream image),Uploads a profile banner on behalf of the authenticating user.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,"updateProfileColors(java.lang.String profileBackgroundColor,                   java.lang.String profileTextColor,                   java.lang.String profileLinkColor,                   java.lang.String profileSidebarFillColor,                   java.lang.String profileSidebarBorderColor)",Deprecated. Since Twitter4J 4.0.5,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileImage(java.io.File image),Updates the authenticating user's profile image.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,updateProfileImage(java.io.InputStream image),Updates the authenticating user's profile image.,void
twitter4j.api.UsersResourcesAsync,Blocks the user specified in the ID parameter as the authenticating user.,verifyCredentials(),Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not.,void
twitter4j.UserStream,Reads next element from this stream.,close(),N/A,void
twitter4j.UserStream,Reads next element from this stream.,next(UserStreamListener listener),Reads next element from this stream.,void
twitter4j.UserStreamAdapter,N/A,"onBlock(User source,       User blockedUser)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onDeletionNotice(long directMessageId,                long userId)",N/A,void
twitter4j.UserStreamAdapter,N/A,onDirectMessage(DirectMessage directMessage),N/A,void
twitter4j.UserStreamAdapter,N/A,onException(java.lang.Exception ex),N/A,void
twitter4j.UserStreamAdapter,N/A,"onFavorite(User source,          User target,          Status favoritedStatus)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onFavoritedRetweet(User source,                  User target,                  Status favoritedStatus)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onFollow(User source,        User followedUser)",N/A,void
twitter4j.UserStreamAdapter,N/A,onFriendList(long[] friendIds),N/A,void
twitter4j.UserStreamAdapter,N/A,"onQuotedTweet(User source,             User target,             Status quotingTweet)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onRetweetedRetweet(User source,                  User target,                  Status retweetedStatus)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUnblock(User source,         User unblockedUser)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUnfavorite(User source,            User target,            Status unfavoritedStatus)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUnfollow(User source,          User unfollowedUser)",N/A,void
twitter4j.UserStreamAdapter,N/A,onUserDeletion(long deletedUser),N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListCreation(User listOwner,                  UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListDeletion(User listOwner,                  UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListMemberAddition(User addedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListMemberDeletion(User deletedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListSubscription(User subscriber,                      User listOwner,                      UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListUnsubscription(User subscriber,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,"onUserListUpdate(User listOwner,                UserList list)",N/A,void
twitter4j.UserStreamAdapter,N/A,onUserProfileUpdate(User updatedUser),N/A,void
twitter4j.UserStreamAdapter,N/A,onUserSuspension(long suspendedUser),N/A,void
twitter4j.UserStreamImpl,Reads next element from this stream.,next(UserStreamListener listener),Reads next element from this stream.,void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onBlock(JSONObject source,       JSONObject target,       StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onDirectMessage(JSONObject json,               StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onFavorite(JSONObject source,          JSONObject target,          JSONObject targetObject,          StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onFavoritedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onFollow(JSONObject source,        JSONObject target,        StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onFriends(JSONObject json,         StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onQuotedTweet(JSONObject source,             JSONObject target,             JSONObject targetObject,             StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onRetweetedRetweet(JSONObject source,                  JSONObject target,                  JSONObject targetObject,                  StreamListener[] listeners)",N/A,(package private) void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onScrubGeo(JSONObject json,          StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onSender(JSONObject json,        StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUnblock(JSONObject source,         JSONObject target,         StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUnfavorite(JSONObject source,            JSONObject target,            JSONObject targetObject,            StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUnfollow(JSONObject source,          JSONObject target,          StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserDeletion(long target,              StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListCreation(JSONObject source,                  JSONObject target,                  StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListDestroyed(JSONObject source,                   JSONObject target,                   StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListMemberAddition(JSONObject addedMember,                        JSONObject owner,                        JSONObject target,                        StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListMemberDeletion(JSONObject deletedMember,                        JSONObject owner,                        JSONObject target,                        StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListSubscription(JSONObject source,                      JSONObject owner,                      JSONObject target,                      StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListUnsubscription(JSONObject source,                        JSONObject owner,                        JSONObject target,                        StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserListUpdated(JSONObject source,                 JSONObject target,                 StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserSuspension(long target,                StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamImpl,Reads next element from this stream.,"onUserUpdate(JSONObject source,            JSONObject target,            StreamListener[] listeners)",N/A,protected void
twitter4j.UserStreamListener,N/A,"onBlock(User source,       User blockedUser)",N/A,void
twitter4j.UserStreamListener,N/A,"onDeletionNotice(long directMessageId,                long userId)",N/A,void
twitter4j.UserStreamListener,N/A,onDirectMessage(DirectMessage directMessage),N/A,void
twitter4j.UserStreamListener,N/A,"onFavorite(User source,          User target,          Status favoritedStatus)",N/A,void
twitter4j.UserStreamListener,N/A,"onFavoritedRetweet(User source,                  User target,                  Status favoritedRetweeet)",N/A,void
twitter4j.UserStreamListener,N/A,"onFollow(User source,        User followedUser)",N/A,void
twitter4j.UserStreamListener,N/A,onFriendList(long[] friendIds),N/A,void
twitter4j.UserStreamListener,N/A,"onQuotedTweet(User source,             User target,             Status quotingTweet)",N/A,void
twitter4j.UserStreamListener,N/A,"onRetweetedRetweet(User source,                  User target,                  Status retweetedStatus)",N/A,void
twitter4j.UserStreamListener,N/A,"onUnblock(User source,         User unblockedUser)",N/A,void
twitter4j.UserStreamListener,N/A,"onUnfavorite(User source,            User target,            Status unfavoritedStatus)",N/A,void
twitter4j.UserStreamListener,N/A,"onUnfollow(User source,          User unfollowedUser)",N/A,void
twitter4j.UserStreamListener,N/A,onUserDeletion(long deletedUser),N/A,void
twitter4j.UserStreamListener,N/A,"onUserListCreation(User listOwner,                  UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListDeletion(User listOwner,                  UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListMemberAddition(User addedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListMemberDeletion(User deletedMember,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListSubscription(User subscriber,                      User listOwner,                      UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListUnsubscription(User subscriber,                        User listOwner,                        UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,"onUserListUpdate(User listOwner,                UserList list)",N/A,void
twitter4j.UserStreamListener,N/A,onUserProfileUpdate(User updatedUser),N/A,void
twitter4j.UserStreamListener,N/A,onUserSuspension(long suspendedUser),N/A,void
twitter4j.Version,prints the version string,getVersion(),N/A,static java.lang.String
twitter4j.Version,prints the version string,main(java.lang.String[] args),prints the version string,static void
twitter4j.VersionAsync,prints the version string,getVersion(),N/A,static java.lang.String
twitter4j.VersionAsync,prints the version string,main(java.lang.String[] args),prints the version string,static void
twitter4j.VersionStream,prints the version string,getVersion(),N/A,static java.lang.String
twitter4j.VersionStream,prints the version string,main(java.lang.String[] args),prints the version string,static void
