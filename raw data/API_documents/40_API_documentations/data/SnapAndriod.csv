class_name,class_description,method,method_description
CreativeKit.SnapCreative,This top-level module provides the Creative Kit APIs.,getApi(Context context),Getter method for the SnapCreativeKitApi
CreativeKit.SnapCreative,This top-level module provides the Creative Kit APIs.,getMediaFactory(Context context),Getter method for the SnapMediaFactory
CreativeKit.SnapCreativeKitApi,This is the Creative Kit API module.,send(SnapContent content),Method to send your SnapContent to Snapchat
CreativeKit.SnapCreativeKitApi,This is the Creative Kit API module.,"sendWithCompletionHandler(SnapContent content, SnapCreativeKitCompletionCallback callback)",Method to send your SnapContent to Snapchat with a completion handler indicating if Snapchat was opened
CreativeKit.SnapCreativeKitCompletionCallback,Callback interface for the CreativeKitApi send method,onSendSuccess(),Callback called when the user is successfully directed to Snapchat.
CreativeKit.SnapCreativeKitCompletionCallback,Callback interface for the CreativeKitApi send method,onSendFailed(SnapCreativeKitSendError error),Callback called when an error occurs while attempting to share to Snapchat using Creative Kit.
CreativeKit.SnapMediaFactory,Use this class to create new media files.,getSnapVideoFromFile(java.io.File file),Factory method to create a SnapVideoFile instance given a video file
CreativeKit.SnapMediaFactory,Use this class to create new media files.,getSnapPhotoFromFile(java.io.File file),Factory method to create a SnapPhotoFile instance given a photo file
CreativeKit.SnapMediaFactory,Use this class to create new media files.,getSnapStickerFromFile(java.io.File file),Factory method to create a SnapSticker instance given a sticker file
CreativeKit.SnapPhotoFile,This model holds a photo file.,getPhotoFile(),Getter method for the photo file
CreativeKit.SnapPhotoContent,This is a model of the SnapContent class for sharing a still image to Snapchat preview.,N/A,N/A
CreativeKit.SnapVideoContent,This is a model of the SnapContent class for sharing video content to Snapchat preview.,N/A,N/A
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,setRotationDegreesClockwise(float rotation),Setter method for the rotation to apply on the sticker
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,setPosX(float positionX),Setter method for the horizontal position of the sticker
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,setPosY(float positionY),Setter method for the vertical position of the sticker
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,setWidth(float width),"Setter method for the width of the sticker, in pixels"
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,setHeight(float height),"Setter method for the height of the sticker, in pixels"
CreativeKit.SnapSticker,This class holds the sticker data to overlay on the Snap's content.,getStickerFile(),Getter for the sticker file
CreativeKit.SnapLiveCameraContent,This is a model for the SnapContent class. It links into the camera preview for the Snap.,N/A,N/A
CreativeKit.SnapContent,"This is the base SnapContent type. It represents an abstract type that can be shared into Snapchat and contains metadata such as stickers, attachment URL, and caption text properties.",setSnapSticker(SnapSticker snapSticker),Setter method for the sticker to be shared with Snapchat
CreativeKit.SnapContent,"This is the base SnapContent type. It represents an abstract type that can be shared into Snapchat and contains metadata such as stickers, attachment URL, and caption text properties.",setAttachmentUrl(String attachmentUrl),Setter method to set the attachment URL to link with the Snap
CreativeKit.SnapContent,"This is the base SnapContent type. It represents an abstract type that can be shared into Snapchat and contains metadata such as stickers, attachment URL, and caption text properties.",setCaptionText(String captionText),Setter method for the caption text to overlay on top of the Snap
LoginKit.SnapLogin,This module handles authentication using Snapchat.,"getButton(Context context, ViewGroup container)","Method to get a standard login button to authenticate using Snapchat Note: Alternatively, you can use AuthTokenManager directly to start authenticating"
LoginKit.SnapLogin,This module handles authentication using Snapchat.,getLoginStateController(Context context),Getter method for the LoginStateController
LoginKit.SnapLogin,This module handles authentication using Snapchat.,isUserLoggedIn(Context context),Getter method to know if user is authenticated using Snapchat and has a valid auth token
LoginKit.SnapLogin,This module handles authentication using Snapchat.,getAuthTokenManager(Context context),Getter method for the AuthTokenManager
LoginKit.SnapLogin,This module handles authentication using Snapchat.,"fetchUserData(Context context,String query, String variables, FetchUserDataCallback callback)",Method to fetch user data based on scopes requested
LoginKit.FetchUserDataCallback,Interface for fetching user data.,onSuccess(UserDataResponse userDataResponse),Callback when user data is successfully fetched
LoginKit.FetchUserDataCallback,Interface for fetching user data.,"onFailure(boolean isNetworkError, int statusCode)",Callback for when user data request ended in failure
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,isUserLoggedIn(),Getter method to know if the AuthTokenManager has a valid auth token for the user
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,hasAccessToScope(String scope),Determines whether the user has authorized the current session to have access to resources with the requested scope
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,clearToken(),Method to clear the access token and refresh token locally.
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,startTokenGrant(),The first step of the OAuth flow; begins the authenticating flow using OAuth
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,getAccessToken();,"Getter method for local access token. Note: if this method returns null, the access token may need to be refreshed by using refreshAccessToken."
LoginKit.AuthTokenManager,The module that manages the user’s auth token credentials.,refreshAccessToken(RefreshAccessTokenResult callback);,Asynchronous method for refreshing and obtaining an access token for the current user.
LoginKit.LoginStateController,This module provides hooks for callbacks on state changes to login.,addOnLoginStateChangedListener(LoginStateController.OnLoginStateChangedListener listener),Method to add an OnLoginStateChangedListener to the LoginStateController
LoginKit.LoginStateController,This module provides hooks for callbacks on state changes to login.,removeOnLoginStateChangedListener(LoginStateController.OnLoginStateChangedListener listener),Method to remove an OnLoginStateChangedListener from the LoginStateController
LoginKit.LoginStateController,This module provides hooks for callbacks on state changes to login.,addOnLoginStartListener(LoginStateController.OnLoginStartListener listener),Method to add an OnLoginStartListener to the LoginStateController
LoginKit.LoginStateController,This module provides hooks for callbacks on state changes to login.,removeOnLoginStartListener(LoginStateController.OnLoginStartListener listener),Method to remove an OnLoginStartListener from the LoginStateController
LoginKit.LoginStateController.OnLoginStartListener,Interface for when the login request has started after the user has confirmed they want to approve the third party for access to the scopes listed.,onLoginStart(),Called when the login request has started after the user has confirmed they want to approve the third party for access to the scopes listed
LoginKit.LoginStateController.OnLoginStateChangedListener,Interface for login state change callbacks.,onLoginSucceeded(),Called when login through Snapchat has succeeded
LoginKit.LoginStateController.OnLoginStateChangedListener,Interface for login state change callbacks.,onLoginFailed(),Called when login through Snapchat failed
LoginKit.LoginStateController.OnLoginStateChangedListener,Interface for login state change callbacks.,onLogout(),"Called whenever a user explicitly logs out via clearToken() or whenever the server returns 401, requiring forced logout"
BitmojiKit.Bitmoji,This top-level module provides Bitmoji Kit APIs.,"fetchAvatarUrl(Context context, FetchAvatarUrlCallback callback)",Makes a network request to fetch the URL for the active user’s Bitmoji avatar icon
BitmojiKit.FetchAvatarUrlCallback,This is the callback for Bitmoji avatar URL fetches made by Bitmoji.fetchAvatarUrl.,onSuccess(String avatarUrl),Called after making a successful network request
BitmojiKit.BitmojiFragment,"This is the Android Support Library Fragment for the Bitmoji sticker picker. The FragmentActivity that adds this Fragment must first already implement the OnBitmojiSelectedListener interface. This interface allows the application to be notified whenever a user selects a Bitmoji sticker from the sticker picker. The FragmentActivity may also optionally implement the OnBitmojiSearchFocusChangeListener interface, which listens for users entering or exiting the search field.",Builder builder(),Return value: An instance of BitmojiFragment.Builder
BitmojiKit.BitmojiFragment,"This is the Android Support Library Fragment for the Bitmoji sticker picker. The FragmentActivity that adds this Fragment must first already implement the OnBitmojiSelectedListener interface. This interface allows the application to be notified whenever a user selects a Bitmoji sticker from the sticker picker. The FragmentActivity may also optionally implement the OnBitmojiSearchFocusChangeListener interface, which listens for users entering or exiting the search field.",setFriend(String friendUserId),Method to specify a friend user to feature in Bitmojis. The sticker picker will include Bitmojis co-starring the current user and the provided friend user. The friend will only appear if they have granted the app access to their Bitmoji avatar as well.
BitmojiKit.BitmojiFragment,"This is the Android Support Library Fragment for the Bitmoji sticker picker. The FragmentActivity that adds this Fragment must first already implement the OnBitmojiSelectedListener interface. This interface allows the application to be notified whenever a user selects a Bitmoji sticker from the sticker picker. The FragmentActivity may also optionally implement the OnBitmojiSearchFocusChangeListener interface, which listens for users entering or exiting the search field.",setSearchText(String searchText),"Method to seed the sticker picker's search state (i.e. passing in the search term ""Friday"" will update the sticker picker with Friday-related Bitmoji stickers)."
BitmojiKit.BitmojiFragment,"This is the Android Support Library Fragment for the Bitmoji sticker picker. The FragmentActivity that adds this Fragment must first already implement the OnBitmojiSelectedListener interface. This interface allows the application to be notified whenever a user selects a Bitmoji sticker from the sticker picker. The FragmentActivity may also optionally implement the OnBitmojiSearchFocusChangeListener interface, which listens for users entering or exiting the search field.",attachBitmojiIcon(BitmojiIconFragment bitmojiIconFragment),"Method to register a Bitmoji avatar icon to listen to Bitmoji sticker picker's search state. By linking the Bitmoji avatar icon with the Bitmoji sticker picker, the avatar icon will display a preview of the first search result in the sticker picker every time the search term is updated. This can be used to provide users with a preview of the available Bitmoji stickers when combined with setSearchText."
BitmojiKit.BitmojiFragment.Builder,A builder class used to create an instance of BitmojiFragment with custom configuration.,withShowSearchBar(boolean showSearchBar),Method to set the visibility of the sticker picker's search bar.
BitmojiKit.BitmojiFragment.Builder,A builder class used to create an instance of BitmojiFragment with custom configuration.,withShowSearchPills(boolean showSearchPills),Method to set the visibility of the sticker picker's search suggestions.
BitmojiKit.BitmojiFragment.Builder,A builder class used to create an instance of BitmojiFragment with custom configuration.,withTheme(@StyleRes int theme),Method to set the theme of the sticker picker. See (Bitmoji Kit docs)[/docs/bitmoji-kit/#theme-1] for more details.
BitmojiKit.BitmojiFragment.Builder,A builder class used to create an instance of BitmojiFragment with custom configuration.,build(),Return value:An instance of BitmojiFragment with the applied config
BitmojiKit.OnBitmojiSelectedListener,Your FragmentActivity that adds the BitmojiFragment must implement this interface. This allows the FragmentActivity to be notified whenever a user selects a Bitmoji from the BitmojiFragment.,"onBitmojiSelected(String imageUrl, Drawable previewDrawable)",Called when the user selects a Bitmoji from the BitmojiFragment
BitmojiKit.OnBitmojiSearchFocusChangeListener,Your FragmentActivity that adds the BitmojiFragment may optionally implement this interface. This allows the FragmentActivity to be notified whenever a user enters or exits the search bar inside the BitmojiFragment.,onBitmojiSearchFocusChange(boolean hasFocus),Called when the user enters or exits the search bar inside the BitmojiFragment
BitmojiKit.BitmojiIconFragment,"This is the Android Support Library Fragment for the Bitmoji avatar icon.

The avatar icon is an image of your Bitmoji avatar in your app. If the user is not logged in or does not have a Bitmoji, the element simply shows the Bitmoji logo.",N/A,N/A
